{"version":3,"sources":["webparts/handbog/components/RefinementPanel/RefinementPanel.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAE/B,6EAAkD;AAClD,4DAA+F;AAM/F;IAA6C,mCAA6D;IAGtG,yBAAmB,KAA2B,EAAE,KAA2B;QAA3E,YACQ,kBAAM,KAAK,CAAC,SAOnB;QALO,KAAI,CAAC,KAAK,GAAG;YACD,iBAAiB,EAAC,EAAE;SACnB,CAAC;QAEN,KAAI,CAAC,4BAA4B,GAAE,KAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAA;;IAC/F,CAAC;IAGW,sDAA4B,GAA5B,UAA6B,QAAQ;QACrC,IAAI,CAAC,QAAQ,CAAC,EAAE,iBAAiB,EAAE,QAAQ,EAAE,CAAC,CAAA;IAC9C,CAAC;IAEM,gCAAM,GAAb;QAAA,iBAkDC;QAhDG,MAAM,CAAA,CACF,6BAAK,SAAS,EAAE,qCAAM,CAAC,eAAe;YACtC,6BAAK,SAAS,EAAE,SAAS;gBACzB,6BAAK,SAAS,EAAC,aAAa;oBACxB,6BAAM,SAAS,EAAC,qCAAqC;wBAC7C,oBAAC,sBAAa,0BACiB,MAAM,EACzB,IAAI,EAAC,YAAY,EACjB,KAAK,EAAC,MAAM,EACZ,OAAO,EAAG,cAAI,OAAA,KAAI,CAAC,iBAAiB,CAAE,IAAI,CAAC,EAA7B,CAA6B,GACzC,CACZ,CACJ;gBAGT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,EAAC,GAAG,IAAG,OAAA;gBACjC,8BAA8B;gBAC1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAC,CAAC,IAAG,OAAA,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,cAAc,CAAC,EAAhD,CAAgD,CAAC,CAAC,GAAG,CAAC,UAAC,CAAC,EAAC,CAAC,IAAG,OAAA,CAC7C,6BAAK,SAAS,EAAC,aAAa;oBACxB,6BAAM,SAAS,EAAC,qCAAqC;wBACjD,oBAAC,sBAAa,IACF,SAAS,EAAE,qCAAM,CAAC,UAAU,wBACT,MAAM,EACzB,IAAI,EAAE,CAAC,CAAC,cAAc,EACtB,KAAK,EAAC,MAAM,EACZ,OAAO,EAAG,cAAI,OAAA,KAAI,CAAC,iBAAiB,CAAE,CAAC,CAAC,cAAc,CAAC,EAAzC,CAAyC,GACrD,CACZ,CACJ,CAGT,EAdgD,CAchD,CACJ,CACJ,EAlBA,CAkBA,CAEJ,CAO3B,CACxB,CAGe,CAAC;IAEN,CAAC;IACO,uCAAa,GAArB;QACI,IAAI,CAAC,KAAK,CAAC,8BAA8B,EAAE,CAAC;IAChD,CAAC;IACO,2CAAiB,GAAzB,UAA0B,eAAuB;QAC7C,2CAA2C;QAC3C,6BAA6B;QAE7B,8CAA8C;QAC9C,0EAA0E;QAC1E,EAAE,CAAC,CAAC,eAAe,IAAE,IAAI,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,KAAK,CAAC,8BAA8B,EAAE,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,4BAA4B,CAAC,eAAe,CAAC,CAAC;QAC7D,CAAC;IAEL,CAAC;IAGb,sBAAC;AAAD,CAvFJ,AAuFK,CAvFwC,KAAK,CAAC,SAAS,GAuFvD","file":"webparts/handbog/components/RefinementPanel/RefinementPanel.js","sourcesContent":["import * as React from \"react\";\r\nimport * as ReactDom from 'react-dom';\r\nimport styles from './RefinementPanel.module.scss'\r\nimport { PrimaryButton, DefaultButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport {IRefinementFilter} from '../../ISearchResults'\r\nimport { IRefinementPanelProps } from \"./IRefinementPanelProps\";\r\nimport { IRefinementPanelState } from \"./IRefinementPanelState\";\r\nimport { SPComponentLoader } from '@microsoft/sp-loader';\r\n\r\nexport default class RefinementPanel extends React.Component<IRefinementPanelProps, IRefinementPanelState> {\r\n    \r\n    \r\n    public constructor(props:IRefinementPanelProps, state:IRefinementPanelState){  \r\n            super(props);  \r\n            \r\n            this.state = {\r\n                        refinementFilters:[]\r\n                        };  \r\n\r\n                    this.callbackSetRefinementFilters= this.callbackSetRefinementFilters.bind(this)\r\n    }\r\n              \r\n                \r\n                callbackSetRefinementFilters(newState) {\r\n                this.setState({ refinementFilters: newState })\r\n                }\r\n            \r\n                public render(): React.ReactElement<IRefinementPanelProps> {  \r\n                    \r\n                    return(\r\n                        <div className={styles.RefinementPanel}>\r\n                        <div className={\"ms-Grid\"}>\r\n                        <div className=\"ms-Grid-row\">           \r\n                            <div  className=\"ms-Grid-col ms-sm12 ms-md12 ms-lg12\">\r\n                                    <DefaultButton\r\n                                                data-automation-id='test'\r\n                                                text='Ryd filter'\r\n                                                value='asdf'\r\n                                                onClick={ ()=>this._searchBtnClicked (null)}\r\n                                                />           \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        {/* {this.props.refiners.sort((a,b)=>a.FilterName.localeCompare(b.FilterName))}    */}\r\n                        {this.props.refiners.map((item,key)=>(  \r\n                            // item.Values.map((i,k)=>(   \r\n                                item.Values.sort((a,b)=>a.RefinementName.localeCompare(b.RefinementName)).map((i,k)=>(\r\n                                                                        <div className=\"ms-Grid-row\">           \r\n                                                                            <div  className=\"ms-Grid-col ms-sm12 ms-md12 ms-lg12\">\r\n                                                                                <DefaultButton\r\n                                                                                            className={styles.refinerBtn}\r\n                                                                                            data-automation-id='test'\r\n                                                                                            text={i.RefinementName}\r\n                                                                                            value='asdf'\r\n                                                                                            onClick={ ()=>this._searchBtnClicked (i.RefinementName)}\r\n                                                                                            />           \r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        \r\n                                                                    \r\n                                                                    )\r\n                                                                )\r\n                                                            )\r\n                        \r\n                                                        )\r\n                                                        \r\n                        }\r\n\r\n\r\n                            \r\n\r\n                        </div>\r\n</div>\r\n                        \r\n                       \r\n                    );\r\n                    \r\n                }\r\n                private _removeFilter():void{\r\n                    this.props.callbackClearRefinementFilters(); \r\n                }\r\n                private _searchBtnClicked(refinermentName?:string):void{\r\n                    // var str:IRefinementFilter[]=this.state.;\r\n                    // str.push(refinermentName);\r\n                    \r\n                    // //this.setState({refinementFilters:'asdf'})\r\n                    // this.props.callbackSetRefinementFilters(this.state.refinementFilters); \r\n                    if (refinermentName==null) {\r\n                        this.props.callbackClearRefinementFilters();\r\n                    } else {\r\n                        this.props.callbackSetRefinementFilters(refinermentName);     \r\n                    }\r\n                    \r\n                }\r\n\r\n    \r\n    }\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}