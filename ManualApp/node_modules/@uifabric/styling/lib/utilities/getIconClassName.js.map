{"version":3,"file":"getIconClassName.js","sourceRoot":"../src/","sources":["utilities/getIconClassName.ts"],"names":[],"mappings":";;AAAA,+DAEsC;AAEtC,IAAI,iBAA4C,CAAC;AAEjD;;;;;GAKG;AACH,0BAAiC,IAAY;IAC3C,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACV,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,4GAA4G;IAC5G,kEAAkE;IAClE,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAE1B,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACvB,iBAAiB,GAAG,EAAE,CAAC;QAEvB,GAAG,CAAC,CAAC,IAAI,QAAQ,IAAI,+BAAc,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,+BAAc,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC5C,iBAAiB,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,GAAG,QAAQ,CAAC;YACvD,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,CAAC,+BAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;AACrE,CAAC;AApBD,4CAoBC","sourcesContent":["import {\r\n  IconClassNames\r\n} from '../classNames/IconClassNames';\r\n\r\nlet _lowerCaseIconMap: { [key: string]: string };\r\n\r\n/**\r\n * Gets an icon classname, given an icon name (case insensitive.) The class name can be attached to\r\n * an I tag with no additional classnames. This will render the icon code using a ::before pseudo-selector.\r\n *\r\n * @public\r\n */\r\nexport function getIconClassName(name: string): string {\r\n  if (!name) {\r\n    return '';\r\n  }\r\n\r\n  // Make the lookup case insensitive. Note that this implementation is different in Fabric 5, but this method\r\n  // is being added sooner to make it easier to transition products.\r\n  name = name.toLowerCase();\r\n\r\n  if (!_lowerCaseIconMap) {\r\n    _lowerCaseIconMap = {};\r\n\r\n    for (let iconName in IconClassNames) {\r\n      if (IconClassNames.hasOwnProperty(iconName)) {\r\n        _lowerCaseIconMap[iconName.toLowerCase()] = iconName;\r\n      }\r\n    }\r\n  }\r\n\r\n  return IconClassNames[_lowerCaseIconMap[name.toLowerCase()]] || '';\r\n}\r\n"]}