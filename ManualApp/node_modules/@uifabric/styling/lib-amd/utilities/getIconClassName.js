define(["require", "exports", "../classNames/IconClassNames"], function (require, exports, IconClassNames_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var _lowerCaseIconMap;
    /**
     * Gets an icon classname, given an icon name (case insensitive.) The class name can be attached to
     * an I tag with no additional classnames. This will render the icon code using a ::before pseudo-selector.
     *
     * @public
     */
    function getIconClassName(name) {
        if (!name) {
            return '';
        }
        // Make the lookup case insensitive. Note that this implementation is different in Fabric 5, but this method
        // is being added sooner to make it easier to transition products.
        name = name.toLowerCase();
        if (!_lowerCaseIconMap) {
            _lowerCaseIconMap = {};
            for (var iconName in IconClassNames_1.IconClassNames) {
                if (IconClassNames_1.IconClassNames.hasOwnProperty(iconName)) {
                    _lowerCaseIconMap[iconName.toLowerCase()] = iconName;
                }
            }
        }
        return IconClassNames_1.IconClassNames[_lowerCaseIconMap[name.toLowerCase()]] || '';
    }
    exports.getIconClassName = getIconClassName;
});
//# sourceMappingURL=getIconClassName.js.map