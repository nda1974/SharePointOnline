webpackJsonp8be81a5c_af38_4bb2_af97_afa3b64dfbed_1_3_4([3],{

/***/ 350:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ReactDOM = __webpack_require__(17);
var sp_webpart_base_1 = __webpack_require__(14);
var RteStrings_resx_1 = __webpack_require__(21);
var ControlsInOneRow_1 = __webpack_require__(446);
var SPRteColorPicker_1 = __webpack_require__(450);
var SPRtePropertyPaneButton_1 = __webpack_require__(454);
var office_ui_fabric_react_1 = __webpack_require__(0);
var CKTextEditor_1 = __webpack_require__(46);
var BaseRte_1 = __webpack_require__(62);
var FontStyle;
(function (FontStyle) {
    FontStyle["NormalText"] = "normalText";
    FontStyle["H2"] = "h2";
    FontStyle["H3"] = "h3";
    FontStyle["H4"] = "h4";
    FontStyle["Blockquote"] = "blockquote";
})(FontStyle || (FontStyle = {}));
var SPRtePropertyPaneControl = (function (_super) {
    __extends(SPRtePropertyPaneControl, _super);
    function SPRtePropertyPaneControl(sprte) {
        var _this = _super.call(this) || this;
        _this._sprte = sprte;
        _this._palette = office_ui_fabric_react_1.getTheme().palette;
        _this._fontColorMap =
            new Map([
                [_this._palette.redDark, 'RedDark'],
                [_this._palette.red, 'Red'],
                [_this._palette.yellow, 'Yellow'],
                [_this._palette.yellowLight, 'YellowLight'],
                [_this._palette.greenLight, 'GreenLight'],
                [_this._palette.green, 'Green'],
                [_this._palette.blueLight, 'BlueLight'],
                [_this._palette.blue, 'Blue'],
                [_this._palette.blueDark, 'BlueDark'],
                [_this._palette.purple, 'Purple']
            ] );
        _this._highlightColorMap =
            new Map([
                ['#FFFF00', 'HighlightYellow'],
                ['#00FF00', 'HighlightGreen'],
                ['#00FFFF', 'HighlightBlue'],
                ['#FF7321', 'HighlightOrange'],
                ['#FF00FF', 'HighlightMagenta'],
                ['#B51DFC', 'HighlightPurple']
            ] );
        return _this;
    }
    SPRtePropertyPaneControl._getColorPickerCell = function (id, label, color) {
        return { id: id, label: label, color: color };
    };
    SPRtePropertyPaneControl._getArrayOfElements = function (props, component) {
        return props.map(function (prop) { return React.createElement(component, prop); });
    };
    SPRtePropertyPaneControl._controlsInOneRow = function (props, component, spaceInBetween) {
        return sp_webpart_base_1.PropertyPaneCustomField({
            key: 'ControlsInOneRow',
            onRender: function (element) { return ReactDOM.render(React.createElement(ControlsInOneRow_1.default, { spaceInBetween: spaceInBetween }, SPRtePropertyPaneControl._getArrayOfElements(props, component)), element); }
        });
    };
    SPRtePropertyPaneControl.prototype._internalGetPropertyPaneData = function () {
        return {
            webPartId: this._sprte.props.id,
            title: RteStrings_resx_1.default.RTESettingsText,
            configuration: {
                pages: this._getProperyPanePages()
            },
            onPropertyPaneFieldChanged: undefined,
            onConfigurationEvent: undefined,
            onRendered: undefined,
            properties: {},
            isReactive: true
        };
    };
    SPRtePropertyPaneControl.prototype._internalDispose = function () {
    };
    SPRtePropertyPaneControl.prototype._internalOnPropertyPaneFieldChanged = function (propertyPath, newValue) {
        if (propertyPath === 'fontSize') {
            this._sprte.getFormatHandler(BaseRte_1.Format.FontSize)({
                format: BaseRte_1.Format.FontSize,
                value: {
                    'fontSize': newValue
                }
            });
        }
        else {
            this._sprte.getFormatHandler(newValue)();
        }
    };
    SPRtePropertyPaneControl.prototype._propertyPaneButton = function (formatKey, value, disabled) {
        var _this = this;
        var button = this._sprte.config.formats.get(formatKey).button;
        return {
            ariaLabel: button.title,
            fabricIconKey: button.fabricIconKey,
            imageSrc: button.imageSrc,
            isActive: this._sprte.isFormatActive(formatKey),
            isDisabled: disabled,
            key: button.title,
            onClick: value ?
                function () { return _this._sprte.getFormatHandler(formatKey)(value); } :
                this._sprte.getFormatHandler(formatKey),
            text: (!button.fabricIconKey && !button.imageSrc) ? button.label : undefined,
            title: button.title
        };
    };
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_firstRowButtons", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Undo));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Redo));
            buttons.push({
                ariaLabel: RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle,
                fabricIconKey: 'ClearFormatting',
                key: RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle,
                onClick: this._sprte.getFormatHandler(BaseRte_1.Format.ClearFormatting),
                title: RteStrings_resx_1.default.FormattingBarClearFormattingButtonTitle
            });
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_styleCommandButtons", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Bold));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Italic));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Underline));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Strike));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Superscipt));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Subscript));
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_hyperlinkButtons", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Link));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.UnLink, undefined , !this._sprte.isLinkSelected));
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_paragraphButtons", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.AlignLeft));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.AlignCenter));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.AlignRight));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Justify));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Indent));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Outdent));
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_bulletButtons", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.Bullet));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.List));
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_tableButton", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.CustomTable, {
                format: BaseRte_1.Format.CustomTable,
                value: {
                    'customTable': {
                        rows: 3,
                        columns: 3
                    }
                }
            }, this._sprte.isTableSelected));
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_tableOperationButtons", {
        get: function () {
            var buttons = [];
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.RowInserBefore, { format: BaseRte_1.Format.RowInserBefore }));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.RowInsertAfter, { format: BaseRte_1.Format.RowInsertAfter }));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.ColumnInsertBefore, { format: BaseRte_1.Format.ColumnInsertBefore }));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.ColumnInsertAfter, { format: BaseRte_1.Format.ColumnInsertAfter }));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.RowDelete, { format: BaseRte_1.Format.RowDelete }));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.ColumnDelete, { format: BaseRte_1.Format.ColumnDelete }));
            buttons.push(this._propertyPaneButton(BaseRte_1.Format.CellDelete, { format: BaseRte_1.Format.CellDelete }));
            return buttons;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_fontStyleDropDown", {
        get: function () {
            var selectedKey = 'normalText';
            for (var i = 0; i < SPRtePropertyPaneControl._fontStyleOptions.length; i++) {
                if (this._sprte.isFormatActive(SPRtePropertyPaneControl._fontStyleOptions[i].key)) {
                    selectedKey = SPRtePropertyPaneControl._fontStyleOptions[i].key;
                    break;
                }
            }
            return sp_webpart_base_1.PropertyPaneDropdown('fontStyle', {
                label: RteStrings_resx_1.default.FontDropDownText,
                options: SPRtePropertyPaneControl._fontStyleOptions,
                selectedKey: selectedKey
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_fontSizeDropDown", {
        get: function () {
            return sp_webpart_base_1.PropertyPaneDropdown('fontSize', {
                label: RteStrings_resx_1.default.FontSizeDropDownLabel,
                options: SPRtePropertyPaneControl._fontSizeOptions,
                selectedKey: this._sprte.fontSizeStyle ? this._sprte.fontSizeStyle : ''
            });
        },
        enumerable: true,
        configurable: true
    });
    SPRtePropertyPaneControl.prototype._handleFontColorChange = function (id, color) {
        this._sprte.getFormatHandler(BaseRte_1.Format.FontColor)({
            format: BaseRte_1.Format.FontColor,
            value: {
                'fontColor': id
            }
        });
    };
    SPRtePropertyPaneControl.prototype._getColorPickerProps = function (colorPickerGroups, onColorChanged, buttonLabel, previewColor, switchToDefaultColor, defaultButtonLabel, selectedColor, fillThemeColor) {
        return {
            buttonLabel: buttonLabel,
            colorPickerGroups: colorPickerGroups,
            onColorChanged: onColorChanged,
            previewColor: previewColor,
            key: buttonLabel,
            switchToDefaultColor: switchToDefaultColor,
            defaultButtonLabel: defaultButtonLabel,
            selectedColor: selectedColor,
            fillThemeColor: fillThemeColor
        };
    };
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_colorPickers", {
        get: function () {
            var colorPickers = [];
            colorPickers.push(this._getColorPickerProps([this._standardColorGroup], this._handleFontColorChange, RteStrings_resx_1.default.FontColorLabel, this._sprte.fontColor, this._sprte.removeFontColorFormat, RteStrings_resx_1.default.DefaultColorLabel, this._fontColorMap.get(this._sprte.fontColor), true));
            colorPickers.push(this._getColorPickerProps([SPRtePropertyPaneControl._highlightColorGroup], this._handleHighlightColorChange, RteStrings_resx_1.default.HightlightLabel, this._sprte.highlightColor, this._sprte.removeHighlightColor, RteStrings_resx_1.default.RemoveHighlightColor, this._highlightColorMap.get(this._sprte.highlightColor.toUpperCase())));
            return colorPickers;
        },
        enumerable: true,
        configurable: true
    });
    SPRtePropertyPaneControl.prototype._handleHighlightColorChange = function (id, color) {
        this._sprte.getFormatHandler(BaseRte_1.Format.FontColor)({
            format: BaseRte_1.Format.HighlightColor,
            value: {
                'highlightColor': color
            }
        });
    };
    Object.defineProperty(SPRtePropertyPaneControl.prototype, "_standardColorGroup", {
        get: function () {
            return {
                groupText: RteStrings_resx_1.default.StandardColorLabel,
                groupColors: [
                    this._getFontColorPickerCell(RteStrings_resx_1.default.RedDarkLabel, this._palette.redDark),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.RedLabel, this._palette.red),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.YellowLabel, this._palette.yellow),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.YellowLightLabel, this._palette.yellowLight),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.GreenLightLabel, this._palette.greenLight),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.GreenLabel, this._palette.green),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.BlueLightLabel, this._palette.blueLight),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.BlueLabel, this._palette.blue),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.BlueDarkLabel, this._palette.blueDark),
                    this._getFontColorPickerCell(RteStrings_resx_1.default.PurpleLabel, this._palette.purple)
                ]
            };
        },
        enumerable: true,
        configurable: true
    });
    SPRtePropertyPaneControl.prototype._getFontColorPickerCell = function (label, color) {
        var id = this._fontColorMap.get(color);
        return SPRtePropertyPaneControl._getColorPickerCell(id, label, color);
    };
    SPRtePropertyPaneControl.prototype._getProperyPanePages = function () {
        return [{
                groups: [
                    {
                        groupName: '',
                        groupFields: [
                            SPRtePropertyPaneControl._controlsInOneRow(this._firstRowButtons, SPRtePropertyPaneButton_1.default),
                            this._fontStyleDropDown,
                            this._fontSizeDropDown,
                            SPRtePropertyPaneControl._controlsInOneRow(this._styleCommandButtons, SPRtePropertyPaneButton_1.default),
                            SPRtePropertyPaneControl._controlsInOneRow(this._colorPickers, SPRteColorPicker_1.default)
                        ]
                    },
                    {
                        groupName: RteStrings_resx_1.default.ParagraphGroupText,
                        groupFields: [
                            SPRtePropertyPaneControl._controlsInOneRow(this._paragraphButtons, SPRtePropertyPaneButton_1.default),
                            SPRtePropertyPaneControl._controlsInOneRow(this._bulletButtons, SPRtePropertyPaneButton_1.default)
                        ]
                    },
                    {
                        groupName: RteStrings_resx_1.default.HyperlinkGroupLabel,
                        groupFields: [SPRtePropertyPaneControl._controlsInOneRow(this._hyperlinkButtons, SPRtePropertyPaneButton_1.default)]
                    },
                    {
                        groupName: RteStrings_resx_1.default.TableGroupLabel,
                        groupFields: [SPRtePropertyPaneControl._controlsInOneRow(this._tableButton, SPRtePropertyPaneButton_1.default)]
                    },
                    {
                        groupName: RteStrings_resx_1.default.InsertAndDeleteGroupLabel,
                        groupFields: [
                            SPRtePropertyPaneControl._controlsInOneRow(this._tableOperationButtons, SPRtePropertyPaneButton_1.default)
                        ]
                    }
                ]
            }];
    };
    SPRtePropertyPaneControl._fontStyleOptions = [
        { key: FontStyle.NormalText, text: RteStrings_resx_1.default.FormattingBarNormalTextButtonTitle },
        { key: FontStyle.H2, text: RteStrings_resx_1.default.FormattingBarHeading2ButtonTitle },
        { key: FontStyle.H3, text: RteStrings_resx_1.default.FormattingBarHeading3ButtonTitle },
        { key: FontStyle.H4, text: RteStrings_resx_1.default.FormattingBarHeading4ButtonTitle },
        { key: FontStyle.Blockquote, text: RteStrings_resx_1.default.FormattingBarQuoteButtonTitle }
    ];
    SPRtePropertyPaneControl._fontSizeOptions = [
        { key: CKTextEditor_1.FontSizeInPixels.Small, text: CKTextEditor_1.FontSizeInPixels.Small.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.Medium, text: CKTextEditor_1.FontSizeInPixels.Medium.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.MediumPlus, text: CKTextEditor_1.FontSizeInPixels.MediumPlus.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.Large, text: CKTextEditor_1.FontSizeInPixels.Large.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.XLarge, text: CKTextEditor_1.FontSizeInPixels.XLarge.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.XLargePlus, text: CKTextEditor_1.FontSizeInPixels.XLargePlus.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.XxLarge, text: CKTextEditor_1.FontSizeInPixels.XxLarge.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.XxxLarge, text: CKTextEditor_1.FontSizeInPixels.XxxLarge.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.XxLargePlus, text: CKTextEditor_1.FontSizeInPixels.XxLargePlus.toString() },
        { key: CKTextEditor_1.FontSizeInPixels.Super, text: CKTextEditor_1.FontSizeInPixels.Super.toString() }
    ];
    SPRtePropertyPaneControl._highlightColorGroup = {
        groupText: RteStrings_resx_1.default.HightlightColorsLabel,
        groupColors: [
            SPRtePropertyPaneControl._getColorPickerCell('HighlightYellow', RteStrings_resx_1.default.YellowLabel, '#FFFF00'),
            SPRtePropertyPaneControl._getColorPickerCell('HighlightGreen', RteStrings_resx_1.default.GreenLabel, '#00FF00'),
            SPRtePropertyPaneControl._getColorPickerCell('HighlightBlue', RteStrings_resx_1.default.BlueLabel, '#00FFFF'),
            SPRtePropertyPaneControl._getColorPickerCell('HighlightOrange', RteStrings_resx_1.default.OrangeLabel, '#FF7321'),
            SPRtePropertyPaneControl._getColorPickerCell('HighlightMagenta', RteStrings_resx_1.default.MagentaLabel, '#FF00FF'),
            SPRtePropertyPaneControl._getColorPickerCell('HighlightPurple', RteStrings_resx_1.default.PurpleLabel, '#B51DFC')
        ]
    };
    __decorate([
        office_ui_fabric_react_1.autobind
    ], SPRtePropertyPaneControl.prototype, "_handleFontColorChange", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], SPRtePropertyPaneControl.prototype, "_handleHighlightColorChange", null);
    return SPRtePropertyPaneControl;
}(sp_webpart_base_1.BasePropertyPaneControl));
exports.default = SPRtePropertyPaneControl;


/***/ }),

/***/ 371:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(451);
var styles = {
    pickerCallout: 'pickerCallout_6bbf2bed',
    pickerLabel: 'pickerLabel_6bbf2bed',
    previewSvg: 'previewSvg_6bbf2bed',
    border: 'border_6bbf2bed',
    defaultSvg: 'defaultSvg_6bbf2bed',
    fillThemeColor: 'fillThemeColor_6bbf2bed',
    selected: 'selected_6bbf2bed',
    colorPickerButton: 'colorPickerButton_6bbf2bed',
    previewRectangle: 'previewRectangle_6bbf2bed',
    previewIcon: 'previewIcon_6bbf2bed',
};
exports.default = styles;


/***/ }),

/***/ 446:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(1);
var ControlsInOneRow_module_scss_1 = __webpack_require__(447);
var office_ui_fabric_react_1 = __webpack_require__(0);
var ControlsInOneRow = (function (_super) {
    __extends(ControlsInOneRow, _super);
    function ControlsInOneRow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ControlsInOneRow.prototype.render = function () {
        var cssClass = office_ui_fabric_react_1.css(ControlsInOneRow_module_scss_1.default.controlsInOneRow, (_a = {}, _a[ControlsInOneRow_module_scss_1.default.spaceInBetween] = this.props.spaceInBetween, _a));
        return (React.createElement("div", { className: cssClass }, this.props.children));
        var _a;
    };
    return ControlsInOneRow;
}(React.Component));
exports.default = ControlsInOneRow;


/***/ }),

/***/ 447:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(448);
var styles = {
    controlsInOneRow: 'controlsInOneRow_b29b948f',
    spaceInBetween: 'spaceInBetween_b29b948f',
};
exports.default = styles;


/***/ }),

/***/ 448:
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(449);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),

/***/ 449:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)();
// imports


// module
exports.push([module.i, ".controlsInOneRow_b29b948f{display:-webkit-box;display:-ms-flexbox;display:flex}.controlsInOneRow_b29b948f.spaceInBetween_b29b948f{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}", ""]);

// exports


/***/ }),

/***/ 450:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var sp_lodash_subset_1 = __webpack_require__(11);
var SPRteColorPicker_module_scss_1 = __webpack_require__(371);
var ColorPickerGroup_1 = __webpack_require__(453);
var SPRteColorPicker = (function (_super) {
    __extends(SPRteColorPicker, _super);
    function SPRteColorPicker(props) {
        var _this = _super.call(this, props) || this;
        _this._colorPickerGroups = [];
        _this.state = {
            isCalloutVisible: false
        };
        _this._setColorPickerGroups();
        return _this;
    }
    SPRteColorPicker._isColorTransparent = function (previewColor) {
        return previewColor === 'rgba(0, 0, 0, 0)' || previewColor === 'transparent';
    };
    SPRteColorPicker.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        var selectedColor = this.props.selectedColor;
        return (selectedColor !== nextProps.selectedColor ||
            this.state.isCalloutVisible !== nextState.isCalloutVisible ||
            !sp_lodash_subset_1.isEqual(nextProps.colorPickerGroups, this.props.colorPickerGroups));
    };
    SPRteColorPicker.prototype.componentWillUpdate = function (prevProps, prevState) {
        this._setColorPickerGroups();
    };
    SPRteColorPicker.prototype.render = function () {
        var _a = this.props, buttonLabel = _a.buttonLabel, switchToDefaultColor = _a.switchToDefaultColor, defaultButtonLabel = _a.defaultButtonLabel, selectedColor = _a.selectedColor, fillThemeColor = _a.fillThemeColor;
        var isCalloutVisible = this.state.isCalloutVisible;
        var iconClass = office_ui_fabric_react_1.css('ms-Icon ms-Icon--CaretDownSolid8', SPRteColorPicker_module_scss_1.default.previewIcon);
        var previewSvgCss = office_ui_fabric_react_1.css(SPRteColorPicker_module_scss_1.default.previewSvg, (_b = {}, _b[SPRteColorPicker_module_scss_1.default.border] = SPRteColorPicker._isColorTransparent(this.props.previewColor), _b));
        var defaultSvgClassName = office_ui_fabric_react_1.css(SPRteColorPicker_module_scss_1.default.previewSvg, SPRteColorPicker_module_scss_1.default.defaultSvg, (_c = {}, _c[SPRteColorPicker_module_scss_1.default.selected] = !selectedColor, _c), (_d = {}, _d[SPRteColorPicker_module_scss_1.default.fillThemeColor] = fillThemeColor, _d));
        return (React.createElement("div", null,
            React.createElement("div", { ref: this._resolveRef('_buttonContainerRef') },
                React.createElement(office_ui_fabric_react_1.Button, { className: SPRteColorPicker_module_scss_1.default.colorPickerButton, onClick: this._handleShowMenuClicked },
                    React.createElement("svg", { className: previewSvgCss, fill: this.props.previewColor, viewBox: '0 0 20 20' }, this._previewSvgRectangle),
                    buttonLabel,
                    React.createElement("i", { className: iconClass, role: 'presentation' }))),
            isCalloutVisible &&
                React.createElement(office_ui_fabric_react_1.Callout, { className: SPRteColorPicker_module_scss_1.default.pickerCallout, directionalHint: office_ui_fabric_react_1.DirectionalHint.bottomLeftEdge, gapSpace: 0, isBeakVisible: false, onDismiss: this._handleCalloutDismiss, role: 'alertdialog', setInitialFocus: true, targetElement: this._buttonContainerRef },
                    React.createElement(office_ui_fabric_react_1.Button, { className: SPRteColorPicker_module_scss_1.default.colorPickerButton, onClick: switchToDefaultColor },
                        React.createElement("svg", { className: defaultSvgClassName, viewBox: '0 0 20 20' }, this._previewSvgRectangle),
                        defaultButtonLabel),
                    this._colorPickerGroups)));
        var _b, _c, _d;
    };
    Object.defineProperty(SPRteColorPicker.prototype, "_previewSvgRectangle", {
        get: function () {
            return React.createElement("rect", { className: SPRteColorPicker_module_scss_1.default.previewRectangle, width: '100%', height: '100%' });
        },
        enumerable: true,
        configurable: true
    });
    SPRteColorPicker.prototype._setColorPickerGroups = function () {
        var colorPickerGroups = this.props.colorPickerGroups;
        this._colorPickerGroups = [];
        for (var i = 0; i < colorPickerGroups.length; i++) {
            this._colorPickerGroups.push(this._getColorPickerGroup(colorPickerGroups[i]));
        }
    };
    SPRteColorPicker.prototype._getColorPickerGroup = function (colorPickerGroup) {
        return (React.createElement(ColorPickerGroup_1.default, { key: colorPickerGroup.groupText, groupText: colorPickerGroup.groupText, groupColors: colorPickerGroup.groupColors, onColorChanged: this.props.onColorChanged, selectedColor: this.props.selectedColor }));
    };
    SPRteColorPicker.prototype._handleShowMenuClicked = function () {
        this.setState({
            isCalloutVisible: !this.state.isCalloutVisible
        });
    };
    SPRteColorPicker.prototype._handleCalloutDismiss = function () {
        this.setState({
            isCalloutVisible: false
        });
    };
    __decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteColorPicker.prototype, "_handleShowMenuClicked", null);
    __decorate([
        office_ui_fabric_react_1.autobind
    ], SPRteColorPicker.prototype, "_handleCalloutDismiss", null);
    return SPRteColorPicker;
}(office_ui_fabric_react_1.BaseComponent));
exports.default = SPRteColorPicker;


/***/ }),

/***/ 451:
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(452);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),

/***/ 452:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)();
// imports


// module
exports.push([module.i, ".pickerCallout_6bbf2bed{width:158px}.pickerLabel_6bbf2bed{display:block}.previewSvg_6bbf2bed{width:20px;height:20px}.previewSvg_6bbf2bed.border_6bbf2bed{border:1px solid #000}.defaultSvg_6bbf2bed{padding:2px;fill:#fff}.defaultSvg_6bbf2bed.fillThemeColor_6bbf2bed{fill:#333}.defaultSvg_6bbf2bed.selected_6bbf2bed{width:12px;height:12px;border:4px solid #c8c8c8}.colorPickerButton_6bbf2bed{background:0 0}[dir=ltr] .colorPickerButton_6bbf2bed{padding-left:2px}[dir=rtl] .colorPickerButton_6bbf2bed{padding-right:2px}.previewRectangle_6bbf2bed{width:100%;height:100%}.previewIcon_6bbf2bed{font-size:7px;padding-top:8px}[dir=ltr] .previewIcon_6bbf2bed{padding-left:7px}[dir=rtl] .previewIcon_6bbf2bed{padding-right:7px}", ""]);

// exports


/***/ }),

/***/ 453:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var SPRteColorPicker_module_scss_1 = __webpack_require__(371);
var ColorPickerGroup = (function (_super) {
    __extends(ColorPickerGroup, _super);
    function ColorPickerGroup(props) {
        return _super.call(this, props) || this;
    }
    ColorPickerGroup.prototype.render = function () {
        var _a = this.props, groupText = _a.groupText, groupColors = _a.groupColors, onColorChanged = _a.onColorChanged, selectedColor = _a.selectedColor;
        return (React.createElement("div", null,
            React.createElement("label", { htmlFor: groupText, className: SPRteColorPicker_module_scss_1.default.pickerLabel }, groupText),
            React.createElement(office_ui_fabric_react_1.SwatchColorPicker, { id: groupText, key: groupText, columnCount: 5, cellShape: 'square', onColorChanged: onColorChanged, colorCells: groupColors, selectedId: selectedColor })));
    };
    return ColorPickerGroup;
}(React.Component));
exports.default = ColorPickerGroup;


/***/ }),

/***/ 454:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var office_ui_fabric_react_1 = __webpack_require__(0);
var React = __webpack_require__(1);
var SPRtePropertyPaneButton_module_scss_1 = __webpack_require__(455);
var SPRtPropertyPaneButton = (function (_super) {
    __extends(SPRtPropertyPaneButton, _super);
    function SPRtPropertyPaneButton(props) {
        return _super.call(this, props) || this;
    }
    SPRtPropertyPaneButton.prototype.render = function () {
        var _a = this.props, onClick = _a.onClick, fabricIconKey = _a.fabricIconKey, title = _a.title, ariaLabel = _a.ariaLabel, isActive = _a.isActive, imageSrc = _a.imageSrc, isDisabled = _a.isDisabled, text = _a.text;
        var buttonClassName = office_ui_fabric_react_1.css(SPRtePropertyPaneButton_module_scss_1.default.sprtePropertyPaneButton, (_b = {},
            _b[SPRtePropertyPaneButton_module_scss_1.default.sprtePropertyPaneButtonActive] = isActive,
            _b[SPRtePropertyPaneButton_module_scss_1.default.imageButton] = !!imageSrc,
            _b[SPRtePropertyPaneButton_module_scss_1.default.iconButton] = fabricIconKey,
            _b[SPRtePropertyPaneButton_module_scss_1.default.textButton] = !!text,
            _b));
        return (fabricIconKey ?
            React.createElement(office_ui_fabric_react_1.IconButton, { ariaLabel: ariaLabel, onClick: onClick, iconProps: { iconName: fabricIconKey }, title: title, disabled: isDisabled, className: buttonClassName }) :
            React.createElement(office_ui_fabric_react_1.DefaultButton, { ariaLabel: ariaLabel, onClick: onClick, title: title, disabled: isDisabled, className: buttonClassName }, (imageSrc && !fabricIconKey) ?
                React.createElement("img", { className: SPRtePropertyPaneButton_module_scss_1.default.sprtePropertyPaneButtonImage, alt: ariaLabel, src: imageSrc })
                :
                    text));
        var _b;
    };
    return SPRtPropertyPaneButton;
}(React.Component));
exports.default = SPRtPropertyPaneButton;


/***/ }),

/***/ 455:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(456);
var styles = {
    sprtePropertyPaneButton: 'sprtePropertyPaneButton_57e9b9d3',
    iconButton: 'iconButton_57e9b9d3',
    sprtePropertyPaneButtonActive: 'sprtePropertyPaneButtonActive_57e9b9d3',
    imageButton: 'imageButton_57e9b9d3',
    textButton: 'textButton_57e9b9d3',
    sprtePropertyPaneButtonImage: 'sprtePropertyPaneButtonImage_57e9b9d3',
};
exports.default = styles;


/***/ }),

/***/ 456:
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(457);
var loader = __webpack_require__(3);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),

/***/ 457:
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(2)();
// imports


// module
exports.push([module.i, ".sprtePropertyPaneButton_57e9b9d3{background:0 0}.sprtePropertyPaneButton_57e9b9d3.iconButton_57e9b9d3{width:44px;height:44px}.sprtePropertyPaneButton_57e9b9d3 i{font-size:20px}.sprtePropertyPaneButton_57e9b9d3.sprtePropertyPaneButtonActive_57e9b9d3{color:\"[theme:themePrimary, default:#0078d7]\"}.sprtePropertyPaneButton_57e9b9d3:hover{color:\"[theme:themeDark, default:#005a9e]\"}.sprtePropertyPaneButton_57e9b9d3.imageButton_57e9b9d3{min-width:0}.sprtePropertyPaneButton_57e9b9d3.textButton_57e9b9d3{background:\"[theme:themePrimary, default:#0078d7]\"}.sprtePropertyPaneButtonImage_57e9b9d3{height:28px;width:28px}", ""]);

// exports


/***/ })

});
//# sourceMappingURL=3.sp-rte-propertypane_9962aa4a81e3e35673f5.js.map