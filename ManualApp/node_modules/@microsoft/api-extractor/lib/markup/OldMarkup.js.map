{"version":3,"sources":["markup/OldMarkup.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","file":"markup/OldMarkup.js","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n/**\r\n * The following interfaces represent Doc Elements of a\r\n * documentation block.\r\n *\r\n * @remarks if adding a new 'kind', then it is essential that you update the\r\n * methods within DocElementParser (getasText() and parse()).\r\n * @alpha\r\n */\r\nexport interface IBaseDocElement {\r\n  kind: string;\r\n}\r\n\r\n/**\r\n * Any natural language text in a doc comment.\r\n * @alpha\r\n */\r\nexport interface ITextElement extends IBaseDocElement {\r\n  kind: 'textDocElement';\r\n  value: string;\r\n}\r\n\r\n// TODO: This is failing to parse: The {@link} tag contains more than one pipe character (\"|\")\r\n/*\r\n * A link that was specified as \\{@link http://url | optional display text\\}.\r\n * The alternative to the IHrefLinkElement is ICodeLinkElement, where instead\r\n * of a href the reference is to an API definition.\r\n *\r\n * Examples:\r\n * \\{@link http://microsoft.com | Microsoft \\}\r\n * \\{@link http://microsoft.com \\}\r\n */\r\n/**\r\n * @alpha\r\n */\r\nexport interface IHrefLinkElement extends IBaseDocElement {\r\n  /**\r\n   * Used to distinguish from an ICodeLinkElement.\r\n   */\r\n  referenceType: 'href';\r\n\r\n  /**\r\n   * The URL that this link element references.\r\n   */\r\n  targetUrl: string;\r\n\r\n  /**\r\n   * Text to be shown in place of the full link text.\r\n   */\r\n  value?: string;\r\n}\r\n\r\n/**\r\n * A link that references an API definition as \\{@link ApiReference | optional display text \\}.\r\n * The presentation of the reference link is left to the ts-spec tool.\r\n * @alpha\r\n */\r\nexport interface ICodeLinkElement extends IBaseDocElement {\r\n  /**\r\n   * Used to distinguish from an IHrefLinkElement..\r\n   */\r\n  referenceType: 'code';\r\n\r\n  /**\r\n   * Example: 'Guid'\r\n   */\r\n  exportName: string;\r\n\r\n  /**\r\n   * Example: '@microsoft'\r\n   */\r\n  scopeName?: string;\r\n\r\n  /**\r\n   * Example: 'sp-core-library'\r\n   */\r\n  packageName?: string;\r\n\r\n  /**\r\n   * Example: 'newGuid'\r\n   */\r\n  memberName?: string;\r\n\r\n  /**\r\n   * Optional text to display in place of the API reference string URL that is\r\n   * constructed from the ts-spec tool.\r\n   */\r\n  value?: string;\r\n}\r\n\r\n/**\r\n * An element that denotes one of more elements to see for reference.\r\n *\r\n * Example:\r\n * @see\r\n * {@link http://microsoft.com | Microsoft}\r\n * This is a description of the link.\r\n * ->\r\n * {\r\n *  kind: 'seeDocElement,\r\n *  seeElements: [\r\n *      {kind: 'linkDocElement', targetUrl: http://microsoft.com, value: Microsoft},\r\n *      {kind: 'textDocElement', value: 'This is a description of the link.'}\r\n *  ]\r\n * }\r\n * @alpha\r\n */\r\nexport interface ISeeDocElement extends IBaseDocElement {\r\n  kind: 'seeDocElement';\r\n  seeElements: IDocElement[];\r\n}\r\n\r\n/** @alpha */\r\nexport type ILinkDocElement = IHrefLinkElement | ICodeLinkElement;\r\n\r\n/** @alpha */\r\nexport type IDocElement = ITextElement | ILinkDocElement | ISeeDocElement;\r\n"],"sourceRoot":"..\\..\\src"}