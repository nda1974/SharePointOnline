"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var BaseExtension_1 = require("../BaseExtension");
var MockExtension = (function (_super) {
    __extends(MockExtension, _super);
    function MockExtension() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MockExtension;
}(BaseExtension_1.default));
exports.MockExtension = MockExtension;
var MockExtension2 = (function (_super) {
    __extends(MockExtension2, _super);
    function MockExtension2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MockExtension2;
}(BaseExtension_1.default));
exports.MockExtension2 = MockExtension2;
var MockBadExtension = (function (_super) {
    __extends(MockBadExtension, _super);
    function MockBadExtension() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MockBadExtension.prototype.onInit = function () {
        throw new Error();
    };
    return MockBadExtension;
}(BaseExtension_1.default));
exports.MockBadExtension = MockBadExtension;
var MockBadExtensionAsync = (function (_super) {
    __extends(MockBadExtensionAsync, _super);
    function MockBadExtensionAsync() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MockBadExtensionAsync.prototype.onInit = function () {
        return Promise.reject(new Error());
    };
    return MockBadExtensionAsync;
}(BaseExtension_1.default));
exports.MockBadExtensionAsync = MockBadExtensionAsync;
var MockNotExtension = (function () {
    function MockNotExtension() {
    }
    return MockNotExtension;
}());
exports.MockNotExtension = MockNotExtension;
