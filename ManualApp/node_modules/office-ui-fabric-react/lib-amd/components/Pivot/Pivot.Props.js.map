{"version":3,"file":"Pivot.Props.js","sourceRoot":"../src/","sources":["components/Pivot/Pivot.Props.ts"],"names":[],"mappings":";;;IAkEA,IAAY,eAUX;IAVD,WAAY,eAAe;QACzB;;WAEG;QACH,uDAAS,CAAA;QAET;;WAEG;QACH,qDAAQ,CAAA;IACV,CAAC,EAVW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAU1B;IAED,IAAY,aAWX;IAXD,WAAY,aAAa;QAEvB;;WAEG;QACH,qDAAU,CAAA;QAEV;;WAEG;QACH,mDAAS,CAAA;IACX,CAAC,EAXW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAWxB","sourcesContent":["import * as React from 'react';\n\nimport { Pivot } from './Pivot';\nimport { PivotItem } from './PivotItem';\n\nexport interface IPivot {\n\n}\n\nexport interface IPivotProps extends React.Props<Pivot> {\n  /**\n   * Optional callback to access the IPivot interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IPivot) => void;\n\n  /**\n   * The index of the pivot item initially selected.\n   *\n   * It only works when initialSelectedKey is not defined. You must not use them together.\n   */\n  initialSelectedIndex?: number;\n\n  /**\n   * The key of the pivot item initially selected.\n   *\n   * It will make initialSelectedIndex not work. You must not use them together.\n   */\n  initialSelectedKey?: string;\n\n  /**\n   * The key of the selected pivot item.\n   *\n   * If set, this will override the Pivot's selected item state.\n   */\n  selectedKey?: string;\n\n  /**\n   * Callback issued when the selected pivot item is changed\n   */\n  onLinkClick?: (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>) => void;\n\n  /**\n   * Specify the PivotLinkSize to use (normal, large)\n   */\n  linkSize?: PivotLinkSize;\n\n  /**\n   * Specify the PivotLinkFormat to use (links, tabs)\n   */\n  linkFormat?: PivotLinkFormat;\n\n  /**\n   * Specify whether to skip rendering the tabpanel with the content of the selected tab.\n   * Use this prop if you plan to separately render the tab content\n   * and don't want to leave an empty tabpanel in the page that may confuse Screen Readers.\n   */\n  headersOnly?: boolean;\n\n  /**\n   * Optional. Specify how IDs are generated for each tab header.\n   * Useful if you're rendering content outside and need to connect aria-labelledby.\n   */\n  getTabId?: (itemKey: string, index: number) => string;\n}\n\nexport enum PivotLinkFormat {\n  /**\n   * Display Pivot Links as links\n   */\n  links = 0,\n\n  /**\n   * Display Pivot Links as Tabs\n   */\n  tabs = 1\n}\n\nexport enum PivotLinkSize {\n\n  /**\n   * Display Link using normal font size\n   */\n  normal = 0,\n\n  /**\n   * Display links using large font size\n   */\n  large = 1\n}\n"]}