{"version":3,"file":"Pivot.js","sourceRoot":"../src/","sources":["components/Pivot/Pivot.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css,\n  getId,\n  autobind\n} from '../../Utilities';\nimport { CommandButton } from '../../Button';\nimport { IPivotProps } from './Pivot.Props';\nimport { IPivotItemProps } from './PivotItem.Props';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { PivotItem } from './PivotItem';\nimport { PivotLinkFormat } from './Pivot.Props';\nimport { PivotLinkSize } from './Pivot.Props';\nimport { Icon } from '../../Icon';\nimport * as stylesImport from './Pivot.scss';\nconst styles: any = stylesImport;\n\n/**\n *  Usage:\n *\n *   <Pivot>\n *     <PivotItem linkText=\"Foo\">\n *       <Label>Pivot #1</Label>\n *     </PivotItem>\n *     <PivotItem linkText=\"Bar\">\n *       <Label>Pivot #2</Label>\n *     </PivotItem>\n *     <PivotItem linkText=\"Bas\">\n *       <Label>Pivot #3</Label>\n *     </PivotItem>\n *   </Pivot>\n */\n\nexport interface IPivotState {\n  links: IPivotItemProps[];\n  selectedKey: string;\n  selectedTabId: string;\n}\n\nexport class Pivot extends BaseComponent<IPivotProps, IPivotState> {\n  private _keyToIndexMapping: { [key: string]: number };\n  private _keyToTabIds: { [key: string]: string };\n  private _pivotId: string;\n\n  constructor(props: IPivotProps) {\n    super(props);\n    this._pivotId = getId('Pivot');\n    const links: IPivotItemProps[] = this._getPivotLinks(this.props);\n    let selectedKey: string | undefined;\n\n    if (props.initialSelectedKey) {\n      selectedKey = props.initialSelectedKey;\n    } else if (props.initialSelectedIndex) {\n      selectedKey = links[props.initialSelectedIndex].itemKey as string;\n    } else if (props.selectedKey) {\n      selectedKey = props.selectedKey;\n    } else if (links.length) {\n      selectedKey = links[0].itemKey as string;\n    }\n\n    this.state = {\n      links,\n      selectedKey: selectedKey!,\n      selectedTabId: this._keyToTabIds[selectedKey!],\n    } as IPivotState;\n\n    this._renderLink = this._renderLink.bind(this);\n  }\n\n  public componentWillReceiveProps(nextProps: IPivotProps) {\n    const links: IPivotItemProps[] = this._getPivotLinks(nextProps);\n\n    this.setState((prevState, props) => {\n      let selectedKey: string | undefined;\n      if (this._isKeyValid(nextProps.selectedKey)) {\n        selectedKey = nextProps.selectedKey;\n      } else if (this._isKeyValid(prevState.selectedKey)) {\n        selectedKey = prevState.selectedKey;\n      } else if (links.length) {\n        selectedKey = links[0].itemKey;\n      }\n\n      return {\n        links: links,\n        selectedKey,\n        selectedTabId: this._keyToTabIds[selectedKey as string],\n      } as IPivotState;\n    });\n  }\n\n  public render() {\n    return (\n      <div>\n        { this._renderPivotLinks() }\n        { this._renderPivotItem() }\n      </div>\n    );\n  }\n\n  /**\n   * Renders the set of links to route between pivots\n   */\n  private _renderPivotLinks() {\n    return (\n      <FocusZone direction={ FocusZoneDirection.horizontal }>\n        <ul className={ css('ms-Pivot', styles.root,\n          { ['ms-Pivot--large ' + styles.rootIsLarge]: this.props.linkSize === PivotLinkSize.large },\n          { ['ms-Pivot--tabs ' + styles.rootIsTabs]: this.props.linkFormat === PivotLinkFormat.tabs }) }\n          role='tablist'>\n          { this.state.links.map(this._renderLink) }\n        </ul>\n      </FocusZone>\n    );\n  }\n\n  /**\n   * Renders a pivot link\n   */\n  @autobind\n  private _renderLink(link: IPivotItemProps) {\n    const { itemKey } = link;\n    const tabId = this._keyToTabIds[itemKey as string];\n    const { onRenderItemLink } = link;\n    let linkContent: JSX.Element | null;\n\n    if (onRenderItemLink) {\n      linkContent = onRenderItemLink(link, this._renderLinkContent);\n    } else {\n      linkContent = this._renderLinkContent(link);\n    }\n\n    return (\n      <CommandButton\n        id={ tabId }\n        key={ itemKey }\n        className={ css(\n          'ms-Pivot-link',\n          styles.link,\n          {\n            ['is-selected ' + styles.linkIsSelected]: this.state.selectedKey === itemKey\n          }\n        ) }\n        onClick={ this._onLinkClick.bind(this, itemKey) }\n        onKeyPress={ this._onKeyPress.bind(this, itemKey) }\n        ariaLabel={ link.ariaLabel }\n        role='tab'\n        aria-selected={ this.state.selectedKey === itemKey }>\n        { linkContent }\n      </CommandButton>\n    );\n  }\n\n  @autobind\n  private _renderLinkContent(link: IPivotItemProps): JSX.Element {\n    const { itemCount, itemIcon, linkText } = link;\n\n    return <span className={ css('ms-Pivot-link-content') }>\n      { itemIcon !== undefined && (\n        <span className={ css('ms-Pivot-icon', styles.icon) }>\n          <Icon iconName={ itemIcon } />\n        </span>\n      ) }\n      { linkText !== undefined && <span className={ css('ms-Pivot-text', styles.text) }> { link.linkText }</span> }\n      { itemCount !== undefined && <span className={ css('ms-Pivot-count', styles.count) } > ({ itemCount })</span> }\n    </span>;\n  }\n\n  /**\n   * Renders the current Pivot Item\n   */\n  private _renderPivotItem() {\n    if (this.props.headersOnly) {\n      return null;\n    }\n\n    const itemKey: string = this.state.selectedKey;\n    const index = this._keyToIndexMapping[itemKey];\n    let { selectedTabId } = this.state;\n\n    return (\n      <div\n        role='tabpanel'\n        aria-labelledby={ selectedTabId }>\n        { React.Children.toArray(this.props.children)[index] }\n      </div>\n    );\n  }\n\n  /**\n   * Gets the set of PivotLinks as arrary of IPivotItemProps\n   * The set of Links is determined by child components of type PivotItem\n   */\n  private _getPivotLinks(props: IPivotProps): IPivotItemProps[] {\n    const links: IPivotItemProps[] = [];\n    this._keyToIndexMapping = {};\n    this._keyToTabIds = {};\n\n    React.Children.map(props.children, (child: any, index: number) => {\n      if (typeof child === 'object' && child.type === PivotItem) {\n        const pivotItem = child as PivotItem;\n        const itemKey = pivotItem.props.itemKey || index.toString();\n\n        links.push({\n          linkText: pivotItem.props.linkText,\n          ariaLabel: pivotItem.props.ariaLabel,\n          itemKey: itemKey,\n          itemCount: pivotItem.props.itemCount,\n          itemIcon: pivotItem.props.itemIcon,\n          onRenderItemLink: pivotItem.props.onRenderItemLink\n        });\n        this._keyToIndexMapping[itemKey] = index;\n        this._keyToTabIds[itemKey] = this._getTabId(itemKey, index);\n      }\n    });\n\n    return links;\n  }\n\n  /**\n   * Generates the Id for the tab button.\n   */\n  private _getTabId(itemKey: string, index: number): string {\n    if (this.props.getTabId) {\n      return this.props.getTabId(itemKey, index);\n    }\n\n    return this._pivotId + `-Tab${index}`;\n  }\n\n  /**\n   * whether the key exists in the pivot items.\n   */\n  private _isKeyValid(itemKey: string | undefined) {\n    return itemKey !== undefined && this._keyToIndexMapping[itemKey] !== undefined;\n  }\n\n  /**\n   * Handles the onClick event on PivotLinks\n   */\n  private _onLinkClick(itemKey: string, ev: React.MouseEvent<HTMLElement>) {\n    ev.preventDefault();\n    this._updateSelectedItem(itemKey, ev);\n  }\n\n  /**\n   * Handle the onKeyPress eventon the PivotLinks\n   */\n  private _onKeyPress(itemKey: string, ev: React.KeyboardEvent<HTMLElement>) {\n    ev.preventDefault();\n    if (ev.which === KeyCodes.enter) {\n      this._updateSelectedItem(itemKey);\n    }\n  }\n\n  /**\n   * Updates the state with the new selected index\n   */\n  private _updateSelectedItem(itemKey: string, ev?: React.MouseEvent<HTMLElement>) {\n    this.setState({\n      selectedKey: itemKey,\n      selectedTabId: this._keyToTabIds[itemKey]\n    } as IPivotState);\n\n    if (this.props.onLinkClick && this._keyToIndexMapping[itemKey] >= 0) {\n      const index = this._keyToIndexMapping[itemKey];\n\n      // React.Element<any> cannot directly convert to PivotItem.\n      const item = React.Children.toArray(this.props.children)[index] as any;\n\n      if (typeof item === 'object' && item.type === PivotItem) {\n        this.props.onLinkClick(item as PivotItem, ev);\n      }\n    }\n  }\n}\n"]}