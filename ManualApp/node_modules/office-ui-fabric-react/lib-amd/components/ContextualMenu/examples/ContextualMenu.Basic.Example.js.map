{"version":3,"file":"ContextualMenu.Basic.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { getRTL } from 'office-ui-fabric-react/lib/Utilities';\nimport './ContextualMenuExample.scss';\n\nexport class ContextualMenuBasicExample extends React.Component<any, any> {\n\n  constructor() {\n    super();\n    this.state = {\n      isContextMenuVisible: false,\n      showCallout: false\n    };\n    this._onClick = this._onClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n  }\n\n  public render() {\n    let { showCallout } = this.state;\n\n    return (\n      <div>\n        <DefaultButton onClick={ this._onClick } id='ContextualMenuButton1' text='Click for ContextualMenu' />\n        { this.state.isContextMenuVisible ? (\n          <ContextualMenu\n            shouldFocusOnMount={ true }\n            target={ this.state.target }\n            onDismiss={ this._onDismiss }\n            directionalHint={ getRTL() ? DirectionalHint.bottomRightEdge : DirectionalHint.bottomLeftEdge }\n            items={\n              [\n                {\n                  key: 'newItem',\n                  iconProps: {\n                    iconName: 'Add'\n                  },\n                  subMenuProps: {\n                    items: [\n                      {\n                        key: 'emailMessage',\n                        name: 'Email message',\n                        title: 'Create an email'\n                      },\n                      {\n                        key: 'calendarEvent',\n                        name: 'Calendar event',\n                        title: 'Create a calendar event',\n                      }\n                    ],\n                  },\n                  name: 'New'\n                },\n                {\n                  key: 'upload',\n                  onClick: () => {\n                    this.setState({ showCallout: true });\n                  },\n                  iconProps: {\n                    iconName: 'Upload',\n                    style: {\n                      color: 'salmon'\n                    }\n                  },\n                  name: 'Upload (Custom Color)',\n                  title: 'Upload a file'\n                },\n                {\n                  key: 'divider_1',\n                  itemType: ContextualMenuItemType.Divider\n                },\n                {\n                  key: 'rename',\n                  name: 'Rename'\n                },\n                {\n                  key: 'properties',\n                  name: 'Properties'\n                },\n                {\n                  key: 'disabled',\n                  name: 'Disabled item',\n                  disabled: true,\n                },\n                {\n                  key: 'divider_2',\n                  itemType: ContextualMenuItemType.Divider\n                },\n                {\n                  key: 'share',\n                  iconProps: {\n                    iconName: 'Share'\n                  },\n                  subMenuProps: {\n                    items: [\n                      {\n                        key: 'sharetoemail',\n                        name: 'Share to Email',\n                        iconProps: {\n                          iconName: 'Mail'\n                        },\n                      },\n                      {\n                        key: 'sharetofacebook',\n                        name: 'Share to Facebook',\n                      },\n                      {\n                        key: 'sharetotwitter',\n                        name: 'Share to Twitter',\n                        iconProps: {\n                          iconName: 'Share'\n                        },\n                        subMenuProps: {\n                          items: [\n                            {\n                              key: 'sharetoemail_1',\n                              name: 'Share to Email',\n                              title: 'Share to Email',\n                              iconProps: {\n                                iconName: 'Mail'\n                              },\n                            },\n                            {\n                              key: 'sharetofacebook_1',\n                              name: 'Share to Facebook',\n                              title: 'Share to Facebook',\n                            },\n                            {\n                              key: 'sharetotwitter_1',\n                              name: 'Share to Twitter',\n                              title: 'Share to Twitter',\n                              iconProps: {\n                                iconName: 'Share'\n                              }\n                            },\n                          ],\n                        },\n                      },\n                    ],\n                  },\n                  name: 'Share'\n                },\n                {\n                  key: 'print',\n                  iconProps: {\n                    iconName: 'Print'\n                  },\n                  name: 'Print'\n                },\n                {\n                  key: 'music',\n                  iconProps: {\n                    iconName: 'MusicInCollectionFill'\n                  },\n                  name: 'Music',\n                },\n                {\n                  key: 'divider_3',\n                  itemType: ContextualMenuItemType.Divider,\n                },\n                {\n                  key: 'Bing',\n                  name: 'Go to Bing',\n                  target: '_blank',\n                  href: 'http://www.bing.com'\n                },\n              ]\n            }\n          />) : (null) }\n\n        { showCallout && (\n          <Callout\n            setInitialFocus={ true }\n            onDismiss={ () => this.setState({ showCallout: false }) }\n          >\n            <DefaultButton\n              onClick={ () => this.setState({ showCallout: false }) }\n              text='Hello world'\n            />\n          </Callout>\n        ) }\n      </div>\n    );\n  }\n\n  private _onClick(event: React.MouseEvent<any>) {\n    this.setState({ target: event.currentTarget, isContextMenuVisible: true });\n  }\n\n  private _onDismiss(event: any) {\n    this.setState({ isContextMenuVisible: false });\n  }\n}\n"]}