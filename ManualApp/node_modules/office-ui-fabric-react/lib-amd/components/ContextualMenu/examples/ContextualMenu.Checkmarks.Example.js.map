{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, IContextualMenuItem, DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuMultiselectExampleState {\n  selection?: { [key: string]: boolean };\n  isContextMenuVisible?: boolean;\n}\n\nlet keys: string[] = ['newItem', 'share', 'mobile', 'enablePrint', 'enableMusic', 'newSub', 'emailMessage', 'calendarEvent'];\n\nexport class ContextualMenuCheckmarksExample extends React.Component<any, IContextualMenuMultiselectExampleState> {\n\n  constructor() {\n    super();\n\n    this._onToggleSelect = this._onToggleSelect.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n\n    this.state = {\n      selection: {},\n      isContextMenuVisible: false\n    };\n  }\n\n  public render() {\n    let { selection } = this.state;\n\n    return (\n      <div>\n        <DefaultButton\n          onClick={ this._onClick } id='ContextualMenuButton2'\n          text='Click for ContextualMenu'\n        />\n        { this.state.isContextMenuVisible ? (\n          <ContextualMenu\n            target='#ContextualMenuButton2'\n            shouldFocusOnMount={ false }\n            onDismiss={ this._onDismiss }\n            directionalHint={ DirectionalHint.bottomLeftEdge }\n            items={\n              [\n                {\n                  key: keys[0],\n                  name: 'New',\n                  canCheck: true,\n                  isChecked: selection![keys[0]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[1],\n                  name: 'Share',\n                  canCheck: true,\n                  isChecked: selection![keys[1]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[2],\n                  name: 'Mobile',\n                  canCheck: true,\n                  isChecked: selection![keys[2]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: 'divider_1',\n                  itemType: ContextualMenuItemType.Divider\n                },\n\n                {\n                  key: keys[3],\n                  name: 'Print',\n                  canCheck: true,\n                  isChecked: selection![keys[3]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[4],\n                  name: 'Music',\n                  canCheck: true,\n                  isChecked: selection![keys[4]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[5],\n                  subMenuProps: {\n                    items: [\n                      {\n                        key: keys[6],\n                        name: 'Email message',\n                        canCheck: true,\n                        isChecked: selection![keys[6]],\n                        onClick: this._onToggleSelect\n                      },\n                      {\n                        key: keys[7],\n                        name: 'Calendar event',\n                        canCheck: true,\n                        isChecked: selection![keys[7]],\n                        onClick: this._onToggleSelect\n                      }\n                    ],\n                  },\n                  name: 'New'\n                },\n              ]\n            }\n          />) : (null) }\n      </div>\n    );\n  }\n\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem) {\n    let { selection } = this.state;\n\n    selection![item!.key] = !selection![item!.key];\n\n    this.setState({\n      selection: selection\n    });\n  }\n\n  private _onClick(event: React.MouseEvent<HTMLButtonElement>) {\n    this.setState({ isContextMenuVisible: true });\n  }\n\n  private _onDismiss() {\n    this.setState({ isContextMenuVisible: false });\n  }\n\n}\n"]}