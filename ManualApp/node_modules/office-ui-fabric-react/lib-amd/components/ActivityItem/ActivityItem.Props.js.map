{"version":3,"file":"ActivityItem.Props.js","sourceRoot":"../src/","sources":["components/ActivityItem/ActivityItem.Props.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IStyle } from '../../Styling';\nimport { IRenderFunction } from '../../Utilities';\nimport { IPersonaProps } from 'office-ui-fabric-react/lib/Persona';\n\n// Please keep alphabetized\nexport interface IActivityItemProps extends React.AllHTMLAttributes<HTMLElement> {\n  /**\n   * Text describing the activity that occurred and naming the people involved in it.\n   */\n  activityDescriptionText?: string;\n\n  /**\n   * If onRenderIcon is not, then the persona props in this array will be used as the icon for the this activity item.\n   */\n  activityPersonas?: Array<IPersonaProps>;\n\n  /**\n   * Text of comments or @mention messages.\n   */\n  commentText?: string;\n\n  /**\n   * Gets ref to component interface.\n   */\n  componentRef?: () => void;\n\n  /**\n   * Indicated if the compact styling should be used.\n   */\n  isCompact?: boolean;\n\n  /**\n   * A renderer for the description of the current activity.\n   */\n  onRenderActivityDescription?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * A renderer that adds the text of a comment below the activity description.\n   */\n  onRenderComments?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * A renderer to create the icon next to the activity item.\n   */\n  onRenderIcon?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * A renderer adds a time stamp. If not included, timeStamp is shown as plain text below the activity.\n   */\n  onRenderTimeStamp?: IRenderFunction<IActivityItemProps>;\n\n  /**\n   * Optional styling for the elements within the Activity Item.\n   */\n  styles?: IActivityItemStyles;\n\n  /**\n   * Text shown as a timestamp on this activity. If not included, no timestamp is shown.\n   */\n  timeStamp?: string;\n}\n\nexport interface IActivityItemStyles {\n  /**\n   * Styles applied to the root activity item container.\n   */\n  root?: IStyle;\n\n  /**\n   * Styles applied to the main container of the activity's description.\n   */\n  activityContent?: IStyle;\n\n  /**\n   * Styles applied to the persona of the user that did this activity.\n   */\n  activityPersona?: IStyle;\n\n  /**\n   * Styles applied to the activity's description.\n   */\n  activityText?: IStyle;\n\n  /**\n   * Styles applied to the icon indicating the type of the activity. Only shown when personas are unavailable.\n   */\n  activityTypeIcon?: IStyle;\n\n  /**\n   * Styles applied to the text of comments.\n   */\n  commentText?: IStyle;\n\n  /**\n   * Styles applied to personas when two users are involved in a single activity.\n   */\n  doublePersona?: IStyle;\n\n  /**\n   * Styles applied to root in the compact variant.\n   */\n  isCompactRoot?: IStyle;\n\n  /**\n   * Styles applied to personas and icons in the compact variant.\n   */\n  isCompactIcon?: IStyle;\n\n  /**\n   * Styles applied to main text container in the compact variant.\n   */\n  isCompactContent?: IStyle;\n\n  /**\n   * Styles applied to personas in the compact variant.\n   */\n  isCompactPersona?: IStyle;\n\n  /**\n   * Styles applied to a wrapper around personas in the compact variant.\n   */\n  isCompactPersonaContainer?: IStyle;\n\n  /**\n   * Styles applied to the container of the persona image or activity type icon.\n   */\n  personaContainer?: IStyle;\n\n  /**\n   * Styles applied to the timestamp at the end of each activity item.\n   */\n  timeStamp?: IStyle;\n}"]}