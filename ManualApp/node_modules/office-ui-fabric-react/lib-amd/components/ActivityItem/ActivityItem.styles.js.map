{"version":3,"file":"ActivityItem.styles.js","sourceRoot":"../src/","sources":["components/ActivityItem/ActivityItem.styles.ts"],"names":[],"mappings":";;;IAUA,IAAM,oBAAoB,GAAG,MAAM,CAAC;IACpC,IAAM,oBAAoB,GAAG,MAAM,CAAC;IACpC,IAAM,iBAAiB,GAAG,MAAM,CAAC;IACjC,IAAM,iBAAiB,GAAG,MAAM,CAAC;IAEpB,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAA0B,EAC1B,YAAyD;QADzD,sBAAA,EAAA,QAAgB,kBAAQ,EAAE;QAC1B,6BAAA,EAAA,wBAAyD;QAEzD,IAAI,kBAAkB,GAAG;YAEvB,IAAI,EAAE;gBACJ,KAAK,CAAC,KAAK,CAAC,KAAK;gBACjB;oBACE,OAAO,EAAE,MAAM;oBACf,cAAc,EAAE,YAAY;oBAC5B,UAAU,EAAE,YAAY;oBACxB,UAAU,EAAE,MAAM;oBAClB,SAAS,EAAE,YAAY;oBACvB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;iBACtC;aACF;YAED,aAAa,EAAE;gBACb,UAAU,EAAE,QAAQ;aACrB;YAED,gBAAgB,EAAE;gBAChB,OAAO,EAAE,MAAM;gBACf,QAAQ,EAAE,MAAM;gBAChB,QAAQ,EAAE,oBAAoB;gBAC9B,KAAK,EAAE,oBAAoB;gBAC3B,MAAM,EAAE,oBAAoB;aAC7B;YAED,yBAAyB,EAAE;gBACzB,OAAO,EAAE,aAAa;gBACtB,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE,MAAM;gBACjB,MAAM,EAAE,oBAAoB;gBAC5B,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,GAAG;gBACb,YAAY,EAAE,KAAK;aACpB;YAED,gBAAgB,EAAE;gBAChB,MAAM,EAAE,oBAAoB;gBAC5B,QAAQ,EAAE,iBAAiB;gBAC3B,UAAU,EAAE,iBAAiB;aAC9B;YAED,aAAa,EAAE;gBACb,MAAM,EAAE,oBAAoB;gBAC5B,QAAQ,EAAE,iBAAiB;gBAC3B,UAAU,EAAE,iBAAiB;gBAC7B,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY;aAClC;YAED,eAAe,EAAE;gBACf,OAAO,EAAE,OAAO;aACjB;YAED,aAAa,EAAE;gBACb,eAAe,EAAE;oBACf,SAAS,EAAE,UAAU;iBACtB;aACF;YAED,gBAAgB,EAAE;gBAChB,OAAO,EAAE,cAAc;gBACvB,KAAK,EAAE,KAAK;gBACZ,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,SAAS;aACpB;YAED,eAAe,EAAE;gBACf,OAAO,EAAE,OAAO;aACjB;YAED,YAAY,EAAE;gBACZ,OAAO,EAAE,QAAQ;aAClB;YAED,gBAAgB,EAAE;gBAChB,IAAI,EAAE,GAAG;gBACT,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,UAAU;gBACxB,SAAS,EAAE,QAAQ;aACpB;YAED,WAAW,EAAE;gBACX,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;aACpC;YAED,SAAS,EAAE;gBACT,KAAK,CAAC,KAAK,CAAC,IAAI;gBAChB;oBACE,UAAU,EAAE,KAAK;oBACjB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;iBACtC;aACF;SACF,CAAC;QAEF,MAAM,CAAC,wBAAc,CAAC,kBAAkB,EAAE,YAAY,CAAE,CAAC;IAC3D,CAAC,CAAC,CAAC","sourcesContent":["import {\n  mergeStyleSets,\n  ITheme,\n  getTheme\n} from '../../Styling';\nimport {\n  memoizeFunction\n} from '../../Utilities';\nimport { IActivityItemStyles } from './ActivityItem.Props';\n\nconst DEFAULT_PERSONA_SIZE = '32px';\nconst COMPACT_PERSONA_SIZE = '16px';\nconst DEFAULT_ICON_SIZE = '24px';\nconst COMPACT_ICON_SIZE = '13px';\n\nexport const getStyles = memoizeFunction((\n  theme: ITheme = getTheme(),\n  customStyles: IActivityItemStyles | undefined = undefined\n): IActivityItemStyles => {\n  let ActivityItemStyles = {\n\n    root: [\n      theme.fonts.small,\n      {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        lineHeight: '17px',\n        boxSizing: 'border-box',\n        color: theme.palette.neutralSecondary\n      }\n    ],\n\n    isCompactRoot: {\n      alignItems: 'center'\n    },\n\n    personaContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      minWidth: DEFAULT_PERSONA_SIZE,\n      width: DEFAULT_PERSONA_SIZE,\n      height: DEFAULT_PERSONA_SIZE\n    },\n\n    isCompactPersonaContainer: {\n      display: 'inline-flex',\n      flexWrap: 'nowrap',\n      flexBasis: 'auto',\n      height: COMPACT_PERSONA_SIZE,\n      width: 'auto',\n      minWidth: '0',\n      paddingRight: '6px'\n    },\n\n    activityTypeIcon: {\n      height: DEFAULT_PERSONA_SIZE,\n      fontSize: DEFAULT_ICON_SIZE,\n      lineHeight: DEFAULT_ICON_SIZE,\n    },\n\n    isCompactIcon: {\n      height: COMPACT_PERSONA_SIZE,\n      fontSize: COMPACT_ICON_SIZE,\n      lineHeight: COMPACT_ICON_SIZE,\n      color: theme.palette.themePrimary\n    },\n\n    activityPersona: {\n      display: 'block'\n    },\n\n    doublePersona: {\n      '&:first-child': {\n        alignSelf: 'flex-end'\n      }\n    },\n\n    isCompactPersona: {\n      display: 'inline-block',\n      width: '8px',\n      minWidth: '8px',\n      overflow: 'visible'\n    },\n\n    activityContent: {\n      padding: '0 8px'\n    },\n\n    activityText: {\n      display: 'inline'\n    },\n\n    isCompactContent: {\n      flex: '1',\n      padding: '0 4px',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      overflowX: 'hidden'\n    },\n\n    commentText: {\n      color: theme.palette.neutralPrimary\n    },\n\n    timeStamp: [\n      theme.fonts.tiny,\n      {\n        fontWeight: '400',\n        color: theme.palette.neutralSecondary\n      }\n    ]\n  };\n\n  return mergeStyleSets(ActivityItemStyles, customStyles)!;\n});\n"]}