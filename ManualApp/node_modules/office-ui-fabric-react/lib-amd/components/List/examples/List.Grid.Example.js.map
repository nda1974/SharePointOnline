{"version":3,"file":"List.Grid.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Grid.Example.tsx"],"names":[],"mappings":";;;IAUA,IAAM,aAAa,GAAG,CAAC,CAAC;IACxB,IAAM,cAAc,GAAG,GAAG,CAAC;IAE3B;QAAqC,2CAA2C;QAM9E;YAAA,YACE,iBAAO,SAKR;YAHC,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,KAAI,CAAC,oBAAoB,GAAG,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjE,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QACvD,CAAC;QAEM,gCAAM,GAAb;YAAA,iBA6BC;YA5BC,MAAM,CAAC,CACL,oBAAC,qBAAS;gBACR,oBAAC,WAAI,IACH,SAAS,EAAC,oBAAoB,EAC9B,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,mBAAmB,EAAG,IAAI,CAAC,oBAAoB,EAC/C,aAAa,EAAG,IAAI,CAAC,cAAc,EACnC,oBAAoB,EAAG,CAAC,EACxB,YAAY,EAAG,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,CAC9B,6BACE,SAAS,EAAC,yBAAyB,uBACf,IAAI,EACxB,KAAK,EAAG;4BACN,KAAK,EAAE,CAAC,GAAG,GAAG,KAAI,CAAC,YAAY,CAAC,GAAG,GAAG;yBACvC;wBACD,6BAAK,SAAS,EAAC,0BAA0B;4BACvC,6BAAK,SAAS,EAAC,0BAA0B;gCACvC,6BAAK,GAAG,EAAG,IAAI,CAAC,SAAS,EAAG,SAAS,EAAC,0BAA0B,GAAG;gCACnE,8BAAM,SAAS,EAAC,0BAA0B,IACtC,UAAQ,KAAO,CACZ,CACH,CACF,CACF,CACP,EAhB+B,CAgB/B,GACD,CACQ,CACb,CAAC;QACJ,CAAC;QAEO,8CAAoB,GAA5B,UAA6B,SAAiB,EAAE,WAAuB;YACrE,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;gBAClE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;YACtC,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAC3C,CAAC;QAEO,wCAAc,GAAtB,UAAuB,SAAiB,EAAE,WAAuB;YAC/D,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QACzC,CAAC;QACH,sBAAC;IAAD,CAAC,AA1DD,CAAqC,KAAK,CAAC,SAAS,GA0DnD;IA1DY,0CAAe","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport './List.Grid.Example.scss';\nimport { IRectangle } from '../../../Utilities';\n\nexport interface IListGridExampleProps {\n  items: any[];\n}\n\nconst ROWS_PER_PAGE = 3;\nconst MAX_ROW_HEIGHT = 250;\n\nexport class ListGridExample extends React.Component<IListGridExampleProps, any> {\n  private _positions: any;\n  private _columnCount: number;\n  private _columnWidth: number;\n  private _rowHeight: number;\n\n  constructor() {\n    super();\n\n    this._positions = {};\n    this._getItemCountForPage = this._getItemCountForPage.bind(this);\n    this._getPageHeight = this._getPageHeight.bind(this);\n  }\n\n  public render() {\n    return (\n      <FocusZone>\n        <List\n          className='ms-ListGridExample'\n          items={ this.props.items }\n          getItemCountForPage={ this._getItemCountForPage }\n          getPageHeight={ this._getPageHeight }\n          renderedWindowsAhead={ 4 }\n          onRenderCell={ (item, index) => (\n            <div\n              className='ms-ListGridExample-tile'\n              data-is-focusable={ true }\n              style={ {\n                width: (100 / this._columnCount) + '%'\n              } }>\n              <div className='ms-ListGridExample-sizer'>\n                <div className='msListGridExample-padder'>\n                  <img src={ item.thumbnail } className='ms-ListGridExample-image' />\n                  <span className='ms-ListGridExample-label'>\n                    { `item ${index}` }\n                  </span>\n                </div>\n              </div>\n            </div>\n          ) }\n        />\n      </FocusZone>\n    );\n  }\n\n  private _getItemCountForPage(itemIndex: number, surfaceRect: IRectangle) {\n    if (itemIndex === 0) {\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\n      this._rowHeight = this._columnWidth;\n    }\n\n    return this._columnCount * ROWS_PER_PAGE;\n  }\n\n  private _getPageHeight(itemIndex: number, surfaceRect: IRectangle) {\n    return this._rowHeight * ROWS_PER_PAGE;\n  }\n}"]}