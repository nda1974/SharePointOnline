{"version":3,"file":"Layer.js","sourceRoot":"../src/","sources":["components/Layer/Layer.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n/* tslint:enable:no-unused-variable */\n\nimport { Fabric } from '../../Fabric';\nimport { ILayerProps } from './Layer.Props';\nimport { css, BaseComponent, getDocument, setVirtualParent } from '../../Utilities';\nimport * as stylesImport from './Layer.scss';\nconst styles: any = stylesImport;\n\nlet _layersByHostId: { [hostId: string]: Layer[] } = {};\n\nexport class Layer extends BaseComponent<ILayerProps, {}> {\n\n  public static defaultProps: ILayerProps = {\n    onLayerDidMount: () => undefined,\n    onLayerWillUnmount: () => undefined\n  };\n\n  private _rootElement: HTMLElement;\n  private _host: Node;\n  private _layerElement: HTMLElement | undefined;\n  private _hasMounted: boolean;\n  /**\n   * Used for notifying applicable Layers that a host is available/unavailable and to re-evaluate Layers that\n   * care about the specific host.\n   */\n  public static notifyHostChanged(id: string) {\n    if (_layersByHostId[id]) {\n      _layersByHostId[id].forEach(layer => layer.forceUpdate());\n    }\n  }\n\n  constructor(props: ILayerProps) {\n    super(props);\n\n    this._warnDeprecations({\n      onLayerMounted: 'onLayerDidMount'\n    });\n\n    if (this.props.hostId) {\n      if (!_layersByHostId[this.props.hostId]) {\n        _layersByHostId[this.props.hostId] = [];\n      }\n\n      _layersByHostId[this.props.hostId].push(this);\n    }\n  }\n\n  public componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  public componentWillUnmount() {\n    this._removeLayerElement();\n\n    if (this.props.hostId) {\n      _layersByHostId[this.props.hostId] = _layersByHostId[this.props.hostId].filter(layer => layer !== this);\n      if (!_layersByHostId[this.props.hostId].length) {\n        delete _layersByHostId[this.props.hostId];\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    let host = this._getHost();\n\n    if (host !== this._host) {\n      this._removeLayerElement();\n    }\n\n    if (host) {\n      this._host = host;\n\n      if (!this._layerElement) {\n        let doc = getDocument(this._rootElement) as Document;\n\n        this._layerElement = doc.createElement('div');\n        this._layerElement.className = css('ms-Layer', {\n          ['ms-Layer--fixed ' + styles.rootIsFixed]: !this.props.hostId\n        });\n\n        host.appendChild(this._layerElement);\n        setVirtualParent(this._layerElement, this._rootElement);\n      }\n\n      // Using this 'unstable' method allows us to retain the React context across the layer projection.\n      ReactDOM.unstable_renderSubtreeIntoContainer(\n        this,\n        <Fabric className={ css('ms-Layer-content', styles.content) }>\n          { this.props.children }\n        </Fabric>,\n        this._layerElement,\n        () => {\n          if (!this._hasMounted) {\n            this._hasMounted = true;\n\n            // TODO: @deprecated cleanup required.\n            if (this.props.onLayerMounted) {\n              this.props.onLayerMounted();\n            }\n\n            this.props.onLayerDidMount!();\n          }\n        });\n    }\n  }\n\n  public render() {\n    return (\n      <span\n        className='ms-Layer'\n        ref={ this._resolveRef('_rootElement') }\n      />\n    );\n  }\n\n  private _removeLayerElement() {\n    if (this._layerElement) {\n      this.props.onLayerWillUnmount!();\n\n      ReactDOM.unmountComponentAtNode(this._layerElement);\n      let parentNode = this._layerElement.parentNode;\n      if (parentNode) {\n        parentNode.removeChild(this._layerElement);\n      }\n      this._layerElement = undefined;\n      this._hasMounted = false;\n    }\n  }\n\n  private _getHost(): Node {\n    let { hostId } = this.props;\n    let doc = getDocument(this._rootElement) as Document;\n\n    if (hostId) {\n      return doc.getElementById(hostId) as Node;\n    } else {\n      return doc.body;\n    }\n  }\n\n}\n"]}