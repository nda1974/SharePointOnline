{"version":3,"file":"Rating.js","sourceRoot":"../src/","sources":["components/Rating/Rating.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  css,\n  getId\n} from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport { IRatingProps, RatingSize } from './Rating.Props';\nimport * as stylesImport from './Rating.scss';\nconst styles: any = stylesImport;\n\nexport interface IRatingState {\n  rating: number | null | undefined;\n  focusedRating: number | null;\n}\n\nexport class Rating extends BaseComponent<IRatingProps, IRatingState> {\n  public static defaultProps: IRatingProps = {\n    min: 1,\n    max: 5\n  };\n\n  private _id: string;\n  private _labelId: string;\n\n  constructor(props: IRatingProps) {\n    super(props);\n\n    this.state = {\n      rating: this._getInitialValue(props),\n      focusedRating: null\n    };\n\n    this._id = getId('Rating');\n    this._labelId = getId('RatingLabel');\n  }\n\n  public componentWillReceiveProps(nextProps: IRatingProps) {\n    if (typeof nextProps.rating !== 'undefined' && nextProps.rating !== this.state.rating) {\n      this.setState({\n        rating: this._getClampedRating(nextProps.rating)\n      } as IRatingState);\n    }\n  }\n\n  public render() {\n    let stars: JSX.Element[] = [];\n    for (let i = this.props.min as number; i <= (this.props.max as number); ++i) {\n      stars.push(this._renderStar(i));\n    }\n\n    return <div className={ css('ms-Rating', this.props.className, {\n      ['ms-Rating--large ' + styles.rootIsLarge]: this.props.size === RatingSize.Large\n    }) } role='application'>\n      <div className={ css('ms-Rating-container', styles.container) } role='radiogroup' aria-labelledby={ this.props.ariaLabelId }>\n        { stars }\n      </div>\n    </div>;\n  }\n\n  private _renderStar(rating: number): JSX.Element {\n    const inputId = `${this._id}-${rating}`;\n\n    return <div className={ css('ms-Rating-star', styles.star, {\n      ['is-selected ' + styles.starIsSelected]: rating <= (this.state.rating as number),\n      ['is-inFocus ' + styles.starIsInFocus]: rating === this.state.focusedRating,\n      ['is-disabled ' + styles.starIsDisabled]: this.props.disabled\n    }) } key={ rating }>\n      <input\n        className={ css('ms-Rating-input', styles.input) }\n        type='radio'\n        name={ this._id }\n        id={ inputId }\n        value={ rating }\n        aria-labelledby={ `${this._labelId}-${rating}` }\n        disabled={ this.props.disabled }\n        checked={ rating === this.state.rating }\n        onChange={ this._onChange.bind(this, rating) }\n        onFocus={ this._onFocus.bind(this, rating) }\n        onBlur={ this._onBlur.bind(this, rating) }\n      />\n      <label className={ css('ms-Rating-label', styles.label) } htmlFor={ inputId }>\n        { this._getLabel(rating) }\n        { this._getIcon() }\n      </label>\n    </div>;\n  }\n\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\n    this.setState({\n      focusedRating: value\n    } as IRatingState);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(ev);\n    }\n  }\n\n  private _onBlur(option: number, ev: React.FocusEvent<HTMLElement>): void {\n    this.setState({\n      focusedRating: null\n    } as IRatingState);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  }\n\n  private _onChange(rating: number, evt: React.FormEvent<HTMLInputElement>) {\n    this.setState({\n      rating: rating\n    } as IRatingState);\n\n    const { onChanged } = this.props;\n    if (onChanged) {\n      onChanged(rating);\n    }\n  }\n\n  private _getLabel(rating: number): JSX.Element {\n    const text = this.props.ariaLabelIcon || 'Star';\n\n    return (\n      <span\n        id={ `${this._labelId}-${rating}` }\n        className={ css('ms-Rating-labelText', styles.labelText) }\n      >\n        { `${rating} ${text}` }\n      </span>\n    );\n  }\n\n  private _getIcon(): JSX.Element {\n    return <Icon iconName={ this.props.icon || 'favoriteStarFill' } />;\n  }\n\n  private _getInitialValue(props: IRatingProps) {\n    if (typeof props.rating === 'undefined') {\n      return props.min;\n    }\n\n    if (props.rating === null) {\n      return null;\n    }\n\n    return this._getClampedRating(props.rating);\n  }\n\n  private _getClampedRating(rating: number): number {\n    rating = Math.floor(rating);\n\n    return Math.min(Math.max(rating, this.props.min as number), this.props.max as number);\n  }\n}"]}