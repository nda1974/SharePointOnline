{"version":3,"file":"Callout.Nested.Example.js","sourceRoot":"../src/","sources":["components/Callout/examples/Callout.Nested.Example.tsx"],"names":[],"mappings":";;;IAYA;QAA0C,gDAA+C;QAGvF;YAAA,YACE,iBAAO,SAOR;YALC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAE7C,KAAI,CAAC,KAAK,GAAG;gBACX,gBAAgB,EAAE,KAAK;aACxB,CAAC;;QACJ,CAAC;QAEM,qCAAM,GAAb;YAAA,iBAwCC;YAvCO,IAAA,8CAAgB,CAAgB;YAEtC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,mBAAmB;gBAChC,6BAAK,SAAS,EAAC,mCAAmC,EAAC,GAAG,EAAG,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,kBAAkB,GAAG,UAAW,EAArC,CAAqC;oBAC5G,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,CAAC,UAAU,EACzB,IAAI,EAAG,gBAAgB,GAAG,cAAc,GAAG,cAAc,GACzD,CACE;gBACJ,gBAAgB,GAAG,CACnB;oBACE,oBAAC,iBAAO,IACN,IAAI,EAAG,aAAa,EACpB,cAAc,EAAG,iBAAiB,EAClC,SAAS,EAAC,2BAA2B,EACrC,QAAQ,EAAG,CAAC,EACZ,aAAa,EAAG,IAAI,CAAC,kBAAkB,EACvC,SAAS,EAAG,UAAC,EAAO,IAAO,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EACjD,eAAe,EAAG,IAAI;wBAEtB,6BAAK,SAAS,EAAC,0BAA0B;4BACvC,2BAAG,SAAS,EAAC,yBAAyB,EAAC,EAAE,EAAG,iBAAiB,yBAEzD,CACA;wBACN,6BAAK,SAAS,EAAC,yBAAyB;4BACtC,6BAAK,SAAS,EAAC,2BAA2B;gCACxC,2BAAG,SAAS,EAAC,2BAA2B,wHAEpC,CACA,CACF;wBACN,oBAAC,uBAAU,IAAC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAK,CACjC,CACN,CACP,GAAG,CAAC,IAAI,CAAC,CACN,CACP,CAAC;QACJ,CAAC;QAEO,yCAAU,GAAlB,UAAmB,EAAO;YACxB,IAAI,CAAC,QAAQ,CAAC;gBACZ,gBAAgB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB;aAC/C,CAAC,CAAC;QACL,CAAC;QACH,2BAAC;IAAD,CAAC,AA5DD,CAA0C,KAAK,CAAC,SAAS,GA4DxD;IA5DY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Callout } from 'office-ui-fabric-react/lib/Callout';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport './CalloutExample.scss';\n\nimport { items } from '../../CommandBar/examples/data';\n\nexport interface ICalloutBaiscExampleState {\n  isCalloutVisible?: boolean;\n}\n\nexport class CalloutNestedExample extends React.Component<any, ICalloutBaiscExampleState> {\n  private _menuButtonElement: HTMLElement;\n\n  public constructor() {\n    super();\n\n    this._onDismiss = this._onDismiss.bind(this);\n\n    this.state = {\n      isCalloutVisible: false,\n    };\n  }\n\n  public render() {\n    let { isCalloutVisible } = this.state;\n\n    return (\n      <div className='ms-CalloutExample'>\n        <div className='ms-CalloutBasicExample-buttonArea' ref={ (menuButton) => this._menuButtonElement = menuButton! }>\n          <DefaultButton\n            onClick={ this._onDismiss }\n            text={ isCalloutVisible ? 'Hide callout' : 'Show callout' }\n          />\n        </div>\n        { isCalloutVisible ? (\n          <div>\n            <Callout\n              role={ 'alertdialog' }\n              ariaLabelledBy={ 'callout-label-2' }\n              className='ms-CalloutExample-callout'\n              gapSpace={ 0 }\n              targetElement={ this._menuButtonElement }\n              onDismiss={ (ev: any) => { this._onDismiss(ev); } }\n              setInitialFocus={ true }\n            >\n              <div className='ms-CalloutExample-header'>\n                <p className='ms-CalloutExample-title' id={ 'callout-label-2' }>\n                  Callout title here\n                </p>\n              </div>\n              <div className='ms-CalloutExample-inner'>\n                <div className='ms-CalloutExample-content'>\n                  <p className='ms-CalloutExample-subText'>\n                    Message body is optional. If help documentation is available, consider adding a link to learn more at the bottom.\n                  </p>\n                </div>\n              </div>\n              <CommandBar items={ this.props.items } />\n            </Callout>\n          </div>\n        ) : (null) }\n      </div>\n    );\n  }\n\n  private _onDismiss(ev: any) {\n    this.setState({\n      isCalloutVisible: !this.state.isCalloutVisible\n    });\n  }\n}\n"]}