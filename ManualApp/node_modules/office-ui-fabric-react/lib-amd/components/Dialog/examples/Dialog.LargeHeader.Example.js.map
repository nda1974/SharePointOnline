{"version":3,"file":"Dialog.LargeHeader.Example.js","sourceRoot":"../src/","sources":["components/Dialog/examples/Dialog.LargeHeader.Example.tsx"],"names":[],"mappings":";;;IAMA;QAA8C,oDAAyB;QAErE;YAAA,YACE,iBAAO,SAIR;YAHC,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,IAAI;aACjB,CAAC;;QACJ,CAAC;QAEM,yCAAM,GAAb;YACE,MAAM,CAAC,CACL;gBACE,oBAAC,sBAAa,IACZ,WAAW,EAAC,yBAAyB,EACrC,OAAO,EAAG,IAAI,CAAC,WAAW,EAC1B,IAAI,EAAC,aAAa,GAClB;gBACF,oBAAC,eAAM,IACL,MAAM,EAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAC9B,SAAS,EAAG,IAAI,CAAC,YAAY,EAC7B,kBAAkB,EAAG;wBACnB,IAAI,EAAE,mBAAU,CAAC,WAAW;wBAC5B,KAAK,EAAE,qBAAqB;wBAC5B,OAAO,EAAE,4GAA4G;qBACtH,EACD,UAAU,EAAG;wBACX,UAAU,EAAE,KAAK;wBACjB,kBAAkB,EAAE,uBAAuB;qBAC5C;oBAED,oBAAC,yBAAW,IACV,OAAO,EAAG;4BACR;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;6BACjB;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,OAAO,EAAE,IAAI;6BACd;4BACD;gCACE,GAAG,EAAE,GAAG;gCACR,IAAI,EAAE,UAAU;gCAChB,QAAQ,EAAE,IAAI;6BACf;yBACF,EACD,QAAQ,EAAG,IAAI,CAAC,gBAAgB,GAChC;oBACF,oBAAC,qBAAY;wBACX,oBAAC,sBAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,EAAG,IAAI,EAAC,MAAM,GAAG;wBAC3D,oBAAC,sBAAa,IAAC,OAAO,EAAG,IAAI,CAAC,YAAY,EAAG,IAAI,EAAC,QAAQ,GAAG,CAChD,CACR,CACL,CACP,CAAC;QACJ,CAAC;QAGO,8CAAW,GAAnB;YACE,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC;QAGO,+CAAY,GAApB;YACE,IAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;QACtC,CAAC;QAEO,mDAAgB,GAAxB;YACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACtC,CAAC;QAXD;YADC,oBAAQ;mEAGR;QAGD;YADC,oBAAQ;oEAGR;QAKH,+BAAC;KAAA,AAvED,CAA8C,KAAK,CAAC,SAAS,GAuE5D;IAvEY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { autobind } from '../../../Utilities';\nimport { Dialog, DialogType, DialogFooter } from 'office-ui-fabric-react/lib/Dialog';\nimport { PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { ChoiceGroup } from 'office-ui-fabric-react/lib/ChoiceGroup';\n\nexport class DialogLargeHeaderExample extends React.Component<any, any> {\n\n  constructor() {\n    super();\n    this.state = {\n      hideDialog: true\n    };\n  }\n\n  public render() {\n    return (\n      <div>\n        <DefaultButton\n          description='Opens the Sample Dialog'\n          onClick={ this._showDialog }\n          text='Open Dialog'\n        />\n        <Dialog\n          hidden={ this.state.hideDialog }\n          onDismiss={ this._closeDialog }\n          dialogContentProps={ {\n            type: DialogType.largeHeader,\n            title: 'All emails together',\n            subText: 'Your Inbox has changed. No longer does it include favorites, it is a singular destination for your emails.'\n          } }\n          modalProps={ {\n            isBlocking: false,\n            containerClassName: 'ms-dialogMainOverride'\n          } }\n        >\n          <ChoiceGroup\n            options={ [\n              {\n                key: 'A',\n                text: 'Option A'\n              },\n              {\n                key: 'B',\n                text: 'Option B',\n                checked: true\n              },\n              {\n                key: 'C',\n                text: 'Option C',\n                disabled: true\n              }\n            ] }\n            onChange={ this._onChoiceChanged }\n          />\n          <DialogFooter>\n            <PrimaryButton onClick={ this._closeDialog } text='Save' />\n            <DefaultButton onClick={ this._closeDialog } text='Cancel' />\n          </DialogFooter>\n        </Dialog>\n      </div>\n    );\n  }\n\n  @autobind\n  private _showDialog() {\n    this.setState({ hideDialog: false });\n  }\n\n  @autobind\n  private _closeDialog() {\n    this.setState({ hideDialog: true });\n  }\n\n  private _onChoiceChanged() {\n    console.log('Choice option change');\n  }\n}\n"]}