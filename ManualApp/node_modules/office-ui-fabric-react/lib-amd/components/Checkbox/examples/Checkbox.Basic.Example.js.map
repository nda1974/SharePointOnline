{"version":3,"file":"Checkbox.Basic.Example.js","sourceRoot":"../src/","sources":["components/Checkbox/examples/Checkbox.Basic.Example.tsx"],"names":[],"mappings":";;;IAcA;QAA0C,gDAA+C;QACvF;YAAA,YACE,iBAAO,SAOR;YALC,KAAI,CAAC,KAAK,GAAG;gBACX,SAAS,EAAE,KAAK;aACjB,CAAC;YAEF,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QAC7D,CAAC;QAEM,qCAAM,GAAb;YAAA,iBAkEC;YAjEO,IAAA,gCAAS,CAAgB;YAE/B,IAAI,MAAM,GAAoB;gBAC5B,IAAI,EAAE;oBACJ,SAAS,EAAE,IAAI;iBAChB;aACF,CAAC;YAEF,MAAM,CAAC,CACL;gBACE,oBAAC,mBAAQ,IACP,KAAK,EAAC,uBAAuB,EAC7B,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,UAAU,EAAG;wBACX,OAAO,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC,CAAC,CAAC;wBACnE,MAAM,EAAE,cAAQ,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC;qBAClE,EACD,MAAM,EAAG,MAAM,EACf,eAAe,EAAG,eAAe,GACjC;gBACF,+BAAO,EAAE,EAAC,eAAe,EAAC,SAAS,EAAC,kBAAkB,wCAA0C;gBAEhG,oBAAC,mBAAQ,IACP,KAAK,EAAC,gDAAgD,EACtD,cAAc,EAAG,IAAI,EACrB,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,MAAM,EAAG,MAAM,GACf;gBAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,gCAAgC,EACtC,QAAQ,EAAG,IAAI,EACf,MAAM,EAAG,MAAM,GACf;gBAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,yDAAyD,EAC/D,QAAQ,EAAG,IAAI,EACf,cAAc,EAAG,IAAI,EACrB,QAAQ,EAAG,IAAI,CAAC,iBAAiB,EACjC,MAAM,EAAG,MAAM,GACf;gBAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAG,SAAS,EACnB,QAAQ,EAAG,UAAC,EAAE,EAAE,OAAO;wBACrB,KAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAQ,EAAE,CAAC,CAAC;oBACzC,CAAC,EACD,MAAM,EAAG,MAAM,GACf;gBAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,sCAAsC,EAC5C,OAAO,EAAC,KAAK,EACb,MAAM,EAAG,MAAM,GACf;gBAEF,oBAAC,mBAAQ,IACP,KAAK,EAAC,kBAAkB,EACxB,MAAM,EAAG,MAAM,EACf,aAAa,EAAG,IAAI,CAAC,mBAAmB,GACxC,CACE,CACP,CAAC;QACJ,CAAC;QAEO,gDAAiB,GAAzB,UAA0B,EAAgC,EAAE,SAAkB;YAC5E,OAAO,CAAC,GAAG,CAAC,oCAAkC,SAAS,MAAG,CAAC,CAAC;QAC9D,CAAC;QAEO,kDAAmB,GAA3B,UAA4B,KAAqB;YAC/C,IAAM,iBAAiB,GAAG,iDAAiD,CAAC;YAC5E,MAAM,CAAC,oBAAC,iBAAO,IAAC,WAAW,EAAG,KAAK,CAAC,KAAK,EAAG,QAAQ,EAAG,iBAAiB,EAAG,IAAI,EAAG,qBAAW,CAAC,UAAU,GAAK,CAAC;QAChH,CAAC;QACH,2BAAC;IAAD,CAAC,AAvFD,CAA0C,KAAK,CAAC,SAAS,GAuFxD;IAvFY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport {\n  Checkbox,\n  ICheckboxStyles,\n  ICheckboxProps\n} from 'office-ui-fabric-react/lib/Checkbox';\nimport {\n  Persona,\n  PersonaSize\n} from 'office-ui-fabric-react/lib/Persona';\nexport interface ICheckboxBasicExampleState {\n  isChecked: boolean;\n}\n\nexport class CheckboxBasicExample extends React.Component<{}, ICheckboxBasicExampleState> {\n  constructor() {\n    super();\n\n    this.state = {\n      isChecked: false\n    };\n\n    this._onCheckboxChange = this._onCheckboxChange.bind(this);\n  }\n\n  public render() {\n    let { isChecked } = this.state;\n\n    let styles: ICheckboxStyles = {\n      root: {\n        marginTop: '10'\n      }\n    };\n\n    return (\n      <div>\n        <Checkbox\n          label='Uncontrolled checkbox'\n          onChange={ this._onCheckboxChange }\n          inputProps={ {\n            onFocus: () => { console.log('Uncontrolled checkbox is focused'); },\n            onBlur: () => { console.log('Uncontrolled checkbox is blured'); }\n          } }\n          styles={ styles }\n          ariaDescribedBy={ 'descriptionID' }\n        />\n        <label id='descriptionID' className='screenReaderOnly'>Uncontroller checkbox description</label>\n\n        <Checkbox\n          label='Uncontrolled checkbox with defaultChecked true'\n          defaultChecked={ true }\n          onChange={ this._onCheckboxChange }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Disabled uncontrolled checkbox'\n          disabled={ true }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Disabled uncontrolled checkbox with defaultChecked true'\n          disabled={ true }\n          defaultChecked={ true }\n          onChange={ this._onCheckboxChange }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Controlled checkbox'\n          checked={ isChecked }\n          onChange={ (ev, checked) => {\n            this.setState({ isChecked: checked! });\n          } }\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Checkbox rendered with boxSide \"end\"'\n          boxSide='end'\n          styles={ styles }\n        />\n\n        <Checkbox\n          label='Persona Checkbox'\n          styles={ styles }\n          onRenderLabel={ this._renderPersonaLabel }\n        />\n      </div>\n    );\n  }\n\n  private _onCheckboxChange(ev: React.FormEvent<HTMLElement>, isChecked: boolean) {\n    console.log(`The option has been changed to ${isChecked}.`);\n  }\n\n  private _renderPersonaLabel(props: ICheckboxProps) {\n    const DEFAULT_IMAGE_URL = '/_layouts/15/userphoto.aspx?size=S&accountname=';\n    return <Persona primaryText={ props.label } imageUrl={ DEFAULT_IMAGE_URL } size={ PersonaSize.extraSmall } />;\n  }\n}\n"]}