{"version":3,"file":"Fabric.styles.js","sourceRoot":"../src/","sources":["components/Fabric/Fabric.styles.ts"],"names":[],"mappings":";;;IAUA,IAAM,WAAW,GAAG,EAAE,UAAU,EAAE,SAAS,EAAE,CAAC;IAMjC,QAAA,SAAS,GAAG,2BAAe,CAAC,UACvC,KAAa;QAEb,MAAM,CAAC;YACL,IAAI,EAAE,qBAAW,CAAC;gBAChB,KAAK,CAAC,KAAK,CAAC,MAAM;gBAClB;oBACE,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;oBACnC,UAAU,EAAE,WAAW;oBACvB,SAAS,EAAE,WAAW;oBACtB,YAAY,EAAE,WAAW;iBAC1B;aACF,CAAC;SACH,CAAC;IACJ,CAAC,CAAC,CAAC","sourcesContent":["\nimport {\n  memoizeFunction\n} from '../../Utilities';\nimport {\n  ITheme,\n  IStyle,\n  mergeStyles\n} from '../../Styling';\n\nconst inheritFont = { fontFamily: 'inherit' };\n\nexport interface IFabricStyles {\n  root: IStyle;\n}\n\nexport const getStyles = memoizeFunction((\n  theme: ITheme\n): IFabricStyles => {\n  return {\n    root: mergeStyles([\n      theme.fonts.medium,\n      {\n        color: theme.palette.neutralPrimary,\n        '& button': inheritFont,\n        '& input': inheritFont,\n        '& textarea': inheritFont\n      }\n    ])\n  };\n});\n"]}