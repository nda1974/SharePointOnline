{"version":3,"file":"HoverCard.js","sourceRoot":"../src/","sources":["components/HoverCard/HoverCard.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport {\n  BaseComponent,\n  autobind,\n  css,\n  divProperties,\n  getNativeProps,\n  getId,\n  getDocument\n} from '../../Utilities';\nimport { IHoverCardProps, IHoverCardStyles } from './HoverCard.Props';\nimport { ExpandingCard } from './ExpandingCard';\nimport { ExpandingCardMode } from './ExpandingCard.Props';\n\nimport { getStyles } from './HoverCard.styles';\n\nexport interface IHoverCardState {\n  isHoverCardVisible: boolean;\n  mode: ExpandingCardMode;\n}\n\nexport class HoverCard extends BaseComponent<IHoverCardProps, IHoverCardState> {\n  public static defaultProps = {\n    cardOpenDelay: 500,\n    cardDismissDelay: 100,\n    expandedCardOpenDelay: 1500,\n    instantOpenOnClick: false\n  };\n\n  // The wrapping div that gets the hover events\n  private _hoverCard: HTMLElement;\n  private _expandingCard: ExpandingCard;\n  private _dismissTimerId: number;\n  private _openTimerId: number;\n  private _currentMouseTarget: EventTarget;\n\n  private _styles: IHoverCardStyles;\n\n  // Constructor\n  constructor(props: IHoverCardProps) {\n    super(props);\n\n    this.state = {\n      isHoverCardVisible: false,\n      mode: ExpandingCardMode.compact\n    };\n  }\n\n  public componentDidMount() {\n    const target = this._getTargetElement();\n\n    this._events.on(target, 'mouseenter', this._cardOpen);\n    this._events.on(target, 'mouseleave', this._cardDismiss);\n    this._events.on(target, 'focus', this._cardOpen);\n    this._events.on(target, 'blur', this._cardDismiss);\n    if (this.props.instantOpenOnClick) {\n      this._events.on(target, 'click', this._instantOpenExpanded);\n    } else {\n      this._events.on(target, 'mousedown', this._cardDismiss);\n      this._events.on(target, 'keydown', this._cardDismiss);\n    }\n  }\n\n  public componentWillUpdate(newProps: IHoverCardProps, newState: IHoverCardState) {\n    if (newState.isHoverCardVisible !== this.state.isHoverCardVisible) {\n      if (newState.isHoverCardVisible) {\n        this._async.setTimeout(() => {\n          this.setState({\n            mode: ExpandingCardMode.expanded\n          });\n        }, this.props.expandedCardOpenDelay!);\n        this.props.onCardVisible && this.props.onCardVisible();\n      } else {\n        this.setState({\n          mode: ExpandingCardMode.compact\n        });\n        this.props.onCardHide && this.props.onCardHide();\n      }\n    }\n  }\n\n  // Render\n  public render() {\n    const {\n      expandingCardProps,\n      children,\n      id,\n      instantOpenOnClick,\n      setAriaDescribedBy = true,\n      styles: customStyles\n    } = this.props;\n    const { isHoverCardVisible, mode } = this.state;\n    const hoverCardId = id || getId('hoverCard');\n\n    this._styles = getStyles(customStyles);\n\n    return (\n      <div\n        className={ css(this._styles.host) }\n        ref={ this._resolveRef('_hoverCard') }\n        aria-describedby={ setAriaDescribedBy && isHoverCardVisible ? hoverCardId : undefined }\n      >\n        { children }\n        { isHoverCardVisible &&\n          <ExpandingCard\n            componentRef={ this._resolveRef('_expandingCard') }\n            { ...getNativeProps(this.props, divProperties) }\n            id={ hoverCardId }\n            targetElement={ this._getTargetElement() }\n            onEnter={ this._cardOpen }\n            onLeave={ this._cardDismiss }\n            mode={ mode }\n            { ...expandingCardProps }\n          />\n        }\n      </div>\n    );\n  }\n\n  private _getTargetElement(): HTMLElement {\n    const { target } = this.props;\n\n    switch (typeof target) {\n      case 'string':\n        return getDocument()!.querySelector(target as string) as HTMLElement;\n\n      case 'object':\n        return target as HTMLElement;\n\n      default:\n        return this._hoverCard;\n    }\n  }\n\n  // Show HoverCard\n  @autobind\n  private _cardOpen(ev: MouseEvent) {\n    this._async.clearTimeout(this._dismissTimerId);\n    this._currentMouseTarget = ev.currentTarget;\n\n    this._openTimerId = this._async.setTimeout(() => {\n      if (!this.state.isHoverCardVisible) {\n        this.setState({\n          isHoverCardVisible: true,\n          mode: ExpandingCardMode.compact\n        });\n      }\n    }, this.props.cardOpenDelay!);\n  }\n\n  // Hide HoverCard\n  @autobind\n  private _cardDismiss(ev: MouseEvent) {\n    this._async.clearTimeout(this._openTimerId);\n\n    // Dismiss if not sticky and currentTarget is the same element that mouse last entered\n    if (!this.props.sticky && this._currentMouseTarget === ev.currentTarget) {\n      this._dismissTimerId = this._async.setTimeout(() => {\n        this.setState({\n          isHoverCardVisible: false,\n          mode: ExpandingCardMode.compact\n        });\n      }, this.props.cardDismissDelay!);\n    }\n  }\n\n  // Instant Open the card in Expanded mode\n  @autobind\n  private _instantOpenExpanded(ev: React.MouseEvent<HTMLDivElement>) {\n    this.setState({\n      isHoverCardVisible: true,\n      mode: ExpandingCardMode.expanded\n    });\n  }\n}\n"]}