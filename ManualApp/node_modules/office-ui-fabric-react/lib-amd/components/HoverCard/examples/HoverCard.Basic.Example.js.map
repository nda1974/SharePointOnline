{"version":3,"file":"HoverCard.Basic.Example.js","sourceRoot":"../src/","sources":["components/HoverCard/examples/HoverCard.Basic.Example.tsx"],"names":[],"mappings":";;;IAaA,IAAI,MAAa,CAAC;IAOlB;QAA2C,iDAAyC;QAElF,+BAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAQb;YANC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,EAAE,CAAC,CAAC;YAEvC,KAAI,CAAC,KAAK,GAAG;gBACX,KAAK,EAAE,MAAM;gBACb,OAAO,EAAE,aAAa,EAAE;aACzB,CAAC;;QACJ,CAAC;QAEM,sCAAM,GAAb;YACM,IAAA,eAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;YAEpC,MAAM,CAAC,CACL;gBACE,qFAA0D;gBAC1D,oBAAC,yBAAW,IACV,MAAM,EAAC,UAAU,EACjB,KAAK,EAAG,KAAM,EACd,OAAO,EAAG,OAAO,EACjB,kBAAkB,EAAG,IAAI,CAAC,mBAAmB,GAC7C,CACE,CACP,CAAC;QACJ,CAAC;QAGO,mDAAmB,GAA3B,UAA4B,IAAS,EAAE,KAAa,EAAE,MAAe;YACnE,IAAM,kBAAkB,GAAwB;gBAC9C,mBAAmB,EAAE,IAAI,CAAC,oBAAoB;gBAC9C,oBAAoB,EAAE,IAAI,CAAC,qBAAqB;gBAChD,UAAU,EAAE,IAAI;aACjB,CAAC;YAEF,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,KAAK,UAAU,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,CACL,oBAAC,qBAAS,IAAC,EAAE,EAAC,OAAO,EAAC,kBAAkB,EAAG,kBAAkB,EAAG,kBAAkB,EAAG,IAAI;oBACvF,6BAAK,SAAS,EAAC,gBAAgB,IAC3B,IAAI,CAAC,QAAQ,CACX,CACI,CACb,CAAC;YACJ,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAGO,oDAAoB,GAA5B,UAA6B,IAAS;YACpC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,8BAA8B;gBAC3C,2BAAG,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAG,+BAA6B,IAAI,CAAC,QAAU,IAClE,IAAI,CAAC,QAAQ,CACb,CACA,CACP,CAAC;QACJ,CAAC;QAGO,qDAAqB,GAA7B,UAA8B,IAAS;YACjC,IAAA,eAA+B,EAA7B,gBAAK,EAAE,oBAAO,CAAgB;YACpC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,+BAA+B;gBAC1C,IAAI,CAAC,WAAW;gBAClB,oBAAC,yBAAW,IACV,MAAM,EAAC,iBAAiB,EACxB,KAAK,EAAG,KAAM,EACd,OAAO,EAAG,OAAO,GACjB,CACE,CACP,CAAC;QACJ,CAAC;QA5CD;YADC,oBAAQ;wEAmBR;QAGD;YADC,oBAAQ;yEASR;QAGD;YADC,oBAAQ;0EAaR;QACH,4BAAC;KAAA,AA3ED,CAA2C,yBAAa,GA2EvD;IA3EY,sDAAqB;IA6ElC;QACE,MAAM,CAAC,0BAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,KAAK,EAAnD,CAAmD,CAAC,CAAC;IACpG,CAAC","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport { BaseComponent, IRenderFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport {\n  HoverCard,\n  IExpandingCardProps\n} from 'office-ui-fabric-react/lib/HoverCard';\nimport { DetailsList, buildColumns, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\nimport { autobind, css } from 'office-ui-fabric-react/lib/Utilities';\nimport { createListItems } from '@uifabric/example-app-base';\nimport './HoverCard.Example.scss';\n\nlet _items: any[];\n\nexport interface IHoverCardExampleState {\n  items?: any[];\n  columns?: IColumn[];\n}\n\nexport class HoverCardBasicExample extends BaseComponent<{}, IHoverCardExampleState> {\n\n  constructor(props: {}) {\n    super(props);\n\n    _items = _items || createListItems(10);\n\n    this.state = {\n      items: _items,\n      columns: _buildColumns()\n    };\n  }\n\n  public render() {\n    let { items, columns } = this.state;\n\n    return (\n      <div>\n        <p> Hover over location of a row item to see the card </p>\n        <DetailsList\n          setKey='hoverSet'\n          items={ items! }\n          columns={ columns }\n          onRenderItemColumn={ this._onRenderItemColumn }\n        />\n      </div>\n    );\n  }\n\n  @autobind\n  private _onRenderItemColumn(item: any, index: number, column: IColumn) {\n    const expandingCardProps: IExpandingCardProps = {\n      onRenderCompactCard: this._onRenderCompactCard,\n      onRenderExpandedCard: this._onRenderExpandedCard,\n      renderData: item\n    };\n\n    if (column.key === 'location') {\n      return (\n        <HoverCard id='myID1' expandingCardProps={ expandingCardProps } instantOpenOnClick={ true }>\n          <div className='HoverCard-item'>\n            { item.location }\n          </div>\n        </HoverCard>\n      );\n    }\n\n    return item[column.key];\n  }\n\n  @autobind\n  private _onRenderCompactCard(item: any): JSX.Element {\n    return (\n      <div className='hoverCardExample-compactCard'>\n        <a target='_blank' href={ `http://wikipedia.org/wiki/${item.location}` }>\n          { item.location }\n        </a>\n      </div>\n    );\n  }\n\n  @autobind\n  private _onRenderExpandedCard(item: any): JSX.Element {\n    let { items, columns } = this.state;\n    return (\n      <div className='hoverCardExample-expandedCard'>\n        { item.description }\n        <DetailsList\n          setKey='expandedCardSet'\n          items={ items! }\n          columns={ columns }\n        />\n      </div>\n    );\n  }\n}\n\nfunction _buildColumns() {\n  return buildColumns(_items).filter(column => column.name === 'location' || column.name === 'key');\n}"]}