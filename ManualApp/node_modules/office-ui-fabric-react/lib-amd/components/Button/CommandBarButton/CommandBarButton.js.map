{"version":3,"file":"CommandBarButton.js","sourceRoot":"../src/","sources":["components/Button/CommandBarButton/CommandBarButton.tsx"],"names":[],"mappings":";;;IAQA;QAAsC,4CAA+B;QADrE;YAAA,qEAmBC;YAjBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAc9C,CAAC;QAZQ,iCAAM,GAAb;YACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YAEnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,uBAAuB,EACxC,MAAM,EAAG,mCAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;QACJ,CAAC;QAjBU,gBAAgB;YAD5B,wBAAY,CAAC,CAAC,0BAAgB,CAAC,CAAC;WACpB,gBAAgB,CAkB5B;QAAD,uBAAC;KAAA,AAlBD,CAAsC,yBAAa,GAkBlD;IAlBY,4CAAgB","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { ThemeSettingName } from '../../../Styling';\nimport { IButtonProps } from '../Button.Props';\nimport { getStyles } from './CommandBarButton.styles';\n\n@customizable([ThemeSettingName])\nexport class CommandBarButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render() {\n    let { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        { ...this.props }\n        variantClassName='ms-Button--commandBar'\n        styles={ getStyles(theme!, styles) }\n        onRenderDescription={ nullRender }\n      />\n    );\n  }\n}"]}