{"version":3,"file":"Button.Split.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":";;;IAIA;QAAwC,8CAAiC;QACvE;mBACE,iBAAO;QACT,CAAC;QAEM,mCAAM,GAAb;YACM,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;YAEvC,MAAM,CAAC,CACL;gBACE,oBAAC,aAAK,uBAAqB;gBAC3B,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAG,QAAQ,EACnB,OAAO,EAAG,OAAO,EACjB,IAAI,EAAC,gBAAgB,EACrB,OAAO,EAAG,cAAM,OAAA,KAAK,CAAC,SAAS,CAAC,EAAhB,CAAgB,EAChC,KAAK,EAAG,IAAI,EACZ,SAAS,EAAG;wBACV,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,IAAI,EAAE,MAAM;6BACb;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,IAAI,EAAE,UAAU;6BACjB;yBACF;qBACF,GACD,CACE,CACP,CAAC;QACJ,CAAC;QACH,yBAAC;IAAD,CAAC,AApCD,CAAwC,KAAK,CAAC,SAAS,GAoCtD;IApCY,gDAAkB;IAsC/B;QAA8C,oDAAiC;QAC7E;mBACE,iBAAO;QACT,CAAC;QAEM,yCAAM,GAAb;YACM,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;YACvC,IAAM,KAAK,GAAkB,EAAE,qBAAqB,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,mBAAmB,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC;YAE9I,MAAM,CAAC,CACL;gBACE,oBAAC,aAAK,8BAA4B;gBAClC,oBAAC,mBAAU,0BACU,MAAM,EACzB,QAAQ,EAAG,QAAQ,EACnB,OAAO,EAAG,OAAO,EACjB,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAClC,IAAI,EAAC,gBAAgB,EACrB,OAAO,EAAG,cAAM,OAAA,KAAK,CAAC,SAAS,CAAC,EAAhB,CAAgB,EAChC,KAAK,EAAG,IAAI,EACZ,MAAM,EAAG,KAAK,EACd,SAAS,EAAG;wBACV,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,IAAI,EAAE,MAAM;6BACb;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,IAAI,EAAE,UAAU;6BACjB;yBACF;qBACF,GACD,CACE,CACP,CAAC;QACJ,CAAC;QACH,+BAAC;IAAD,CAAC,AAvCD,CAA8C,KAAK,CAAC,SAAS,GAuC5D;IAvCY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, IconButton, IButtonProps, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\n\nexport class ButtonSplitExample extends React.Component<IButtonProps, {}> {\n  public constructor() {\n    super();\n  }\n\n  public render() {\n    let { disabled, checked } = this.props;\n\n    return (\n      <div>\n        <Label>Split button</Label>\n        <DefaultButton\n          data-automation-id='test'\n          disabled={ disabled }\n          checked={ checked }\n          text='Create account'\n          onClick={ () => alert('Clicked') }\n          split={ true }\n          menuProps={ {\n            items: [\n              {\n                key: 'emailMessage',\n                name: 'Email message',\n                icon: 'Mail'\n              },\n              {\n                key: 'calendarEvent',\n                name: 'Calendar event',\n                icon: 'Calendar'\n              }\n            ]\n          } }\n        />\n      </div>\n    );\n  }\n}\n\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps, {}> {\n  public constructor() {\n    super();\n  }\n\n  public render() {\n    let { disabled, checked } = this.props;\n    const style: IButtonStyles = { splitButtonMenuButton: { backgroundColor: 'white', width: '10px' }, splitButtonMenuIcon: { fontSize: '7px' } };\n\n    return (\n      <div>\n        <Label>Custom Split button</Label>\n        <IconButton\n          data-automation-id='test'\n          disabled={ disabled }\n          checked={ checked }\n          iconProps={ { iconName: 'Emoji2' } }\n          text='Create account'\n          onClick={ () => alert('Clicked') }\n          split={ true }\n          styles={ style }\n          menuProps={ {\n            items: [\n              {\n                key: 'emailMessage',\n                name: 'Email message',\n                icon: 'Mail'\n              },\n              {\n                key: 'calendarEvent',\n                name: 'Calendar event',\n                icon: 'Calendar'\n              }\n            ]\n          } }\n        />\n      </div>\n    );\n  }\n}"]}