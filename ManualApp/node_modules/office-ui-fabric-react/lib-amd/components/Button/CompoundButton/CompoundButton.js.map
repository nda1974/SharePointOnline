{"version":3,"file":"CompoundButton.js","sourceRoot":"../src/","sources":["components/Button/CompoundButton/CompoundButton.tsx"],"names":[],"mappings":";;;IAQA;QAAoC,0CAA+B;QADnE;YAAA,qEAkBC;YAhBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAa9C,CAAC;QAXQ,+BAAM,GAAb;YACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YACnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,qBAAqB,EACtC,MAAM,EAAG,iCAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,YAAY,EAAG,sBAAU,IACzB,CACH,CAAC;QACJ,CAAC;QAhBU,cAAc;YAD1B,wBAAY,CAAC,CAAC,0BAAgB,CAAC,CAAC;WACpB,cAAc,CAiB1B;QAAD,qBAAC;KAAA,AAjBD,CAAoC,yBAAa,GAiBhD;IAjBY,wCAAc","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { ThemeSettingName } from '../../../Styling';\nimport { IButtonProps } from '../Button.Props';\nimport { getStyles } from './CompoundButton.styles';\n\n@customizable([ThemeSettingName])\nexport class CompoundButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render() {\n    let { styles, theme } = this.props;\n    return (\n      <BaseButton\n        { ...this.props }\n        variantClassName='ms-Button--compound'\n        styles={ getStyles(theme!, styles) }\n        onRenderIcon={ nullRender }\n      />\n    );\n  }\n}\n"]}