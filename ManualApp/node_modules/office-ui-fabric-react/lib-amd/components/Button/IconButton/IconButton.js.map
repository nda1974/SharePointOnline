{"version":3,"file":"IconButton.js","sourceRoot":"../src/","sources":["components/Button/IconButton/IconButton.tsx"],"names":[],"mappings":";;;IAQA;QAAgC,sCAA+B;QAD/D;YAAA,qEAoBC;YAlBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAe9C,CAAC;QAbQ,2BAAM,GAAb;YACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YAEnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,iBAAiB,EAClC,MAAM,EAAG,6BAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,YAAY,EAAG,sBAAU,EACzB,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;QACJ,CAAC;QAlBU,UAAU;YADtB,wBAAY,CAAC,CAAC,0BAAgB,CAAC,CAAC;WACpB,UAAU,CAmBtB;QAAD,iBAAC;KAAA,AAnBD,CAAgC,yBAAa,GAmB5C;IAnBY,gCAAU","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { ThemeSettingName } from '../../../Styling';\nimport { IButtonProps } from '../Button.Props';\nimport { getStyles } from './IconButton.styles';\n\n@customizable([ThemeSettingName])\nexport class IconButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render() {\n    let { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        { ...this.props }\n        variantClassName='ms-Button--icon'\n        styles={ getStyles(theme!, styles) }\n        onRenderText={ nullRender }\n        onRenderDescription={ nullRender }\n      />\n    );\n  }\n}\n"]}