{"version":3,"file":"DefaultButton.js","sourceRoot":"../src/","sources":["components/Button/DefaultButton/DefaultButton.tsx"],"names":[],"mappings":";;;IAQA;QAAmC,yCAA+B;QADlE;YAAA,qEAmBC;YAjBC;;eAEG;YACO,+BAAyB,GAAG,KAAK,CAAC;;QAc9C,CAAC;QAZQ,8BAAM,GAAb;YACQ,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;YAErC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,oBAAoB,EACrC,MAAM,EAAG,gCAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;QACJ,CAAC;QAjBU,aAAa;YADzB,wBAAY,CAAC,CAAC,0BAAgB,CAAC,CAAC;WACpB,aAAa,CAkBzB;QAAD,oBAAC;KAAA,AAlBD,CAAmC,yBAAa,GAkB/C;IAlBY,sCAAa","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { ThemeSettingName } from '../../../Styling';\nimport { IButtonProps } from '../Button.Props';\nimport { getStyles } from './DefaultButton.styles';\n\n@customizable([ThemeSettingName])\nexport class DefaultButton extends BaseComponent<IButtonProps, {}> {\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render() {\n    const { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        { ...this.props }\n        variantClassName='ms-Button--default'\n        styles={ getStyles(theme!, styles) }\n        onRenderDescription={ nullRender }\n      />\n    );\n  }\n}\n"]}