{"version":3,"file":"Persona.Props.js","sourceRoot":"../src/","sources":["components/Persona/Persona.Props.ts"],"names":[],"mappings":";;;IA0HA,IAAY,WAUX;IAVD,WAAY,WAAW;QACrB,6CAAQ,CAAA;QACR,mEAAmB,CAAA;QACnB,yDAAc,CAAA;QACd,+CAAS,CAAA;QACT,mDAAW,CAAA;QACX,+CAAS,CAAA;QACT,yDAAc,CAAA;QACd,iDAAU,CAAA;QACV,iDAAU,CAAA;IACZ,CAAC,EAVW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAUtB;IAED,IAAY,eAQX;IARD,WAAY,eAAe;QACzB,qDAAQ,CAAA;QACR,2DAAW,CAAA;QACX,yDAAU,CAAA;QACV,qDAAQ,CAAA;QACR,mDAAO,CAAA;QACP,2DAAW,CAAA;QACX,qDAAQ,CAAA;IACV,CAAC,EARW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAQ1B;IAED,IAAY,oBAgBX;IAhBD,WAAY,oBAAoB;QAC9B,yEAAa,CAAA;QACb,+DAAQ,CAAA;QACR,uEAAY,CAAA;QACZ,+DAAQ,CAAA;QACR,2EAAc,CAAA;QACd,iEAAS,CAAA;QACT,yEAAa,CAAA;QACb,yEAAa,CAAA;QACb,+DAAQ,CAAA;QACR,qEAAW,CAAA;QACX,oEAAW,CAAA;QACX,kEAAU,CAAA;QACV,oEAAW,CAAA;QACX,8DAAQ,CAAA;QACR,sEAAY,CAAA;IACd,CAAC,EAhBW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAgB/B","sourcesContent":["import * as React from 'react';\nimport { IRenderFunction } from '../../Utilities';\nimport { Persona } from './Persona';\n\nexport interface IPersona {\n\n}\n\nexport interface IPersonaProps extends React.HTMLAttributes<Persona> {\n  /**\n   * Optional callback to access the IPersona interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IPersona) => void;\n\n  /**\n   * Primary text to display, usually the name of the person.\n   */\n  primaryText?: string;\n\n  /**\n   * Optional custom renderer for the primary text.\n   */\n  onRenderPrimaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.regular\n   */\n  size?: PersonaSize;\n\n  /**\n   * If true, adds the css class 'is-fadeIn' to the image.\n   */\n  imageShouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables imageShouldFadeIn.\n   * @defaultvalue false\n   */\n  imageShouldStartVisible?: boolean;\n\n  /**\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\n   */\n  imageUrl?: string;\n\n  /**\n   * Alt text for the image to use. Defaults to an empty string.\n   */\n  imageAlt?: string;\n\n  /**\n   * The user's initials to display in the image area when there is no image.\n   * @defaultvalue [Derived from primaryText]\n   */\n  imageInitials?: string;\n\n  /**\n   * Optional custom renderer for the initials\n   */\n  onRenderInitials?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * The background color when the user's initials are displayed.\n   * @defaultvalue [Derived from primaryText]\n   */\n  initialsColor?: PersonaInitialsColor;\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /**\n   * Secondary text to display, usually the role of the user.\n   */\n  secondaryText?: string;\n\n  /**\n   * Optional custom renderer for the secondary text.\n   */\n  onRenderSecondaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Tertiary text to display, usually the status of the user.\n   */\n  tertiaryText?: string;\n\n  /**\n   * Optional custom renderer for the tertiary text.\n   */\n  onRenderTertiaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional text to display, usually a custom message set.\n   */\n  optionalText?: string;\n\n  /**\n   * Optional custom renderer for the optional text.\n   */\n  onRenderOptionalText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Whether to not render persona details, and just render the persona image/initials.\n   */\n  hidePersonaDetails?: boolean;\n\n  /**\n   * Additional CSS class(es) to apply to the Persona\n   */\n  className?: string;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n}\n\nexport enum PersonaSize {\n  tiny = 0,\n  extraExtraSmall = 1,\n  extraSmall = 2,\n  small = 3,\n  regular = 4,\n  large = 5,\n  extraLarge = 6,\n  size28 = 7,\n  size16 = 8\n}\n\nexport enum PersonaPresence {\n  none = 0,\n  offline = 1,\n  online = 2,\n  away = 3,\n  dnd = 4,\n  blocked = 5,\n  busy = 6\n}\n\nexport enum PersonaInitialsColor {\n  lightBlue = 0,\n  blue = 1,\n  darkBlue = 2,\n  teal = 3,\n  lightGreen = 4,\n  green = 5,\n  darkGreen = 6,\n  lightPink = 7,\n  pink = 8,\n  magenta = 9,\n  purple = 10,\n  black = 11,\n  orange = 12,\n  red = 13,\n  darkRed = 14\n}\n"]}