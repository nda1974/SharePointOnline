{"version":3,"file":"BasePicker.js","sourceRoot":"../src/","sources":["components/pickers/BasePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes,\n  autobind,\n  css,\n  getRTL\n} from '../../Utilities';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { Callout, DirectionalHint } from '../../Callout';\nimport { Selection, SelectionZone, SelectionMode } from '../../utilities/selection/index';\nimport { Suggestions } from './Suggestions/Suggestions';\nimport { ISuggestionsProps } from './Suggestions/Suggestions.Props';\nimport { SuggestionsController } from './Suggestions/SuggestionsController';\nimport { IBasePicker, IBasePickerProps, ValidationState } from './BasePicker.Props';\nimport { BaseAutoFill } from './AutoFill/BaseAutoFill';\nimport { IPickerItemProps } from './PickerItem.Props';\nimport { IPersonaProps } from '../Persona/Persona.Props';\nimport * as stylesImport from './BasePicker.scss';\nconst styles: any = stylesImport;\n\nexport interface IBasePickerState {\n  items?: any;\n  suggestedDisplayValue?: string;\n  moreSuggestionsAvailable?: boolean;\n  isSearching?: boolean;\n  isMostRecentlyUsedVisible?: boolean;\n  suggestionsVisible?: boolean;\n  suggestionsLoading?: boolean;\n  isResultsFooterVisible?: boolean;\n}\n\nexport class BasePicker<T, P extends IBasePickerProps<T>> extends BaseComponent<P, IBasePickerState> implements IBasePicker<T> {\n\n  protected selection: Selection;\n\n  protected root: HTMLElement;\n  protected input: BaseAutoFill;\n  protected focusZone: FocusZone;\n  protected suggestionElement: Suggestions<T>;\n\n  protected suggestionStore: SuggestionsController<T>;\n  protected SuggestionOfProperType = Suggestions as new (props: ISuggestionsProps<T>) => Suggestions<T>;\n  protected loadingTimer: number | undefined;\n  protected currentPromise: PromiseLike<any>;\n\n  constructor(basePickerProps: P) {\n    super(basePickerProps);\n\n    let items: T[] = basePickerProps.selectedItems || basePickerProps.defaultSelectedItems || [];\n\n    this.suggestionStore = new SuggestionsController<T>();\n    this.selection = new Selection({ onSelectionChanged: () => this.onSelectionChange() });\n    this.selection.setItems(items);\n    this.state = {\n      items: items,\n      suggestedDisplayValue: '',\n      isMostRecentlyUsedVisible: false,\n      moreSuggestionsAvailable: false,\n      isSearching: false\n    };\n  }\n\n  public get items(): T[] {\n    return this.state.items;\n  }\n\n  public componentWillUpdate(newProps: P, newState: IBasePickerState) {\n    if (newState.items && newState.items !== this.state.items) {\n      this.selection.setItems(newState.items);\n    }\n  }\n\n  public componentDidMount() {\n    this.selection.setItems(this.state.items);\n  }\n\n  public componentWillReceiveProps(newProps: P) {\n    let newItems = newProps.selectedItems;\n\n    if (newItems) {\n      let focusIndex: number;\n\n      // If there are less new items than old items then something was removed and we\n      // should try to keep focus consistent\n      if (newItems.length < this.state.items.length) {\n        focusIndex = this.state.items.indexOf(this.selection.getSelection()[0]);\n      }\n\n      this.setState({\n        items: newProps.selectedItems\n      }, () => {\n        if (focusIndex >= 0) {\n          this.resetFocus(focusIndex);\n        }\n      });\n    }\n  }\n\n  public focus() {\n    this.focusZone.focus();\n  }\n\n  @autobind\n  public dismissSuggestions() {\n    // Select the first suggestion if one is available when user leaves.\n    let selectItemFunction = () => {\n      if (this.suggestionStore.hasSelectedSuggestion() && this.state.suggestedDisplayValue) {\n        this.addItemByIndex(0);\n      }\n    };\n    if (this.currentPromise) {\n      this.currentPromise.then(() => selectItemFunction());\n    } else {\n      selectItemFunction();\n    }\n    this.setState({ suggestionsVisible: false });\n  }\n\n  public completeSuggestion() {\n    if (this.suggestionStore.hasSelectedSuggestion()) {\n      this.addItem(this.suggestionStore.currentSuggestion!.item);\n      this.updateValue('');\n      this.input.clear();\n    }\n  }\n\n  @autobind\n  public refocusSuggestions(keyCode: KeyCodes) {\n    this.resetFocus();\n    if (keyCode === KeyCodes.up) {\n      this.suggestionStore.setSelectedSuggestion(this.suggestionStore.suggestions.length - 1);\n    } else if (keyCode === KeyCodes.down) {\n      this.suggestionStore.setSelectedSuggestion(0);\n    }\n  }\n\n  public render() {\n    let { suggestedDisplayValue } = this.state;\n    let {\n      className,\n      inputProps,\n      disabled\n    } = this.props;\n    return (\n      <div\n        ref={ this._resolveRef('root') }\n        className={ css(\n          'ms-BasePicker',\n          className ? className : '') }\n        onKeyDown={ this.onKeyDown } >\n        <FocusZone\n          ref={ this._resolveRef('focusZone') }\n          direction={ FocusZoneDirection.bidirectional }\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke }>\n          <SelectionZone selection={ this.selection } selectionMode={ SelectionMode.multiple }>\n            <div className={ css('ms-BasePicker-text', styles.pickerText) } role={ 'list' }>\n              { this.renderItems() }\n              { this.canAddItems() && (<BaseAutoFill\n                { ...inputProps as any }\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\n                ref={ this._resolveRef('input') }\n                onFocus={ this.onInputFocus }\n                onInputValueChange={ this.onInputChange }\n                suggestedDisplayValue={ suggestedDisplayValue }\n                aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\n                aria-owns='suggestion-list'\n                aria-expanded='true'\n                aria-haspopup='true'\n                autoCapitalize='off'\n                autoComplete='off'\n                role='combobox'\n                disabled={ disabled }\n              />) }\n            </div>\n          </SelectionZone>\n        </FocusZone>\n        { this.renderSuggestions() }\n      </div>\n    );\n  }\n\n  protected canAddItems(): boolean {\n    const { items } = this.state;\n    const { itemLimit } = this.props;\n    return itemLimit === undefined || items.length < itemLimit;\n  }\n\n  protected renderSuggestions(): JSX.Element | null {\n    let TypedSuggestion = this.SuggestionOfProperType;\n    return this.state.suggestionsVisible ? (\n      <Callout\n        isBeakVisible={ false }\n        gapSpace={ 5 }\n        targetElement={ this.input.inputElement }\n        onDismiss={ this.dismissSuggestions }\n        directionalHint={ getRTL() ? DirectionalHint.bottomRightEdge : DirectionalHint.bottomLeftEdge }>\n        <TypedSuggestion\n          onRenderSuggestion={ this.props.onRenderSuggestionsItem }\n          onSuggestionClick={ this.onSuggestionClick }\n          onSuggestionRemove={ this.onSuggestionRemove }\n          suggestions={ this.suggestionStore.getSuggestions() }\n          ref={ this._resolveRef('suggestionElement') }\n          onGetMoreResults={ this.onGetMoreResults }\n          moreSuggestionsAvailable={ this.state.moreSuggestionsAvailable }\n          isLoading={ this.state.suggestionsLoading }\n          isSearching={ this.state.isSearching }\n          isMostRecentlyUsedVisible={ this.state.isMostRecentlyUsedVisible }\n          isResultsFooterVisible={ this.state.isResultsFooterVisible }\n          refocusSuggestions={ this.refocusSuggestions }\n          { ...this.props.pickerSuggestionsProps as any }\n        />\n      </Callout>\n    ) : (null);\n  }\n\n  protected renderItems(): JSX.Element[] {\n    let { disabled, removeButtonAriaLabel } = this.props;\n    let onRenderItem = this.props.onRenderItem as (props: IPickerItemProps<T>) => JSX.Element;\n\n    let { items } = this.state;\n    return items.map((item: any, index: number) => onRenderItem({\n      item,\n      index,\n      key: item.key ? item.key : index,\n      selected: this.selection.isIndexSelected(index),\n      onRemoveItem: () => this.removeItem(item),\n      disabled: disabled,\n      onItemChange: this.onItemChange,\n      removeButtonAriaLabel: removeButtonAriaLabel\n    }));\n  }\n\n  protected resetFocus(index?: number) {\n    let { items } = this.state;\n\n    if (items.length && index! >= 0) {\n      let newEl: HTMLElement = this.root.querySelectorAll('[data-selection-index]')[Math.min(index!, items.length - 1)] as HTMLElement;\n      if (newEl) {\n        this.focusZone.focusElement(newEl);\n      }\n    } else if (!this.canAddItems()) {\n      (items[items.length - 1] as IPickerItemProps<T>).selected = true;\n      this.resetFocus(items.length - 1);\n    } else {\n      this.input.focus();\n    }\n  }\n\n  protected onSuggestionSelect() {\n    if (this.suggestionStore.currentSuggestion) {\n      let currentValue: string = this.input.value;\n      let itemValue: string = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, currentValue);\n      this.setState({ suggestedDisplayValue: itemValue });\n    }\n  }\n\n  protected onSelectionChange() {\n    this.forceUpdate();\n  }\n\n  protected updateSuggestions(suggestions: any[]) {\n    this.suggestionStore.updateSuggestions(suggestions, 0);\n    this.forceUpdate();\n  }\n\n  protected onEmptyInputFocus() {\n    let onEmptyInputFocus = this.props.onEmptyInputFocus as (selectedItems?: T[]) => T[] | PromiseLike<T[]>;\n    let suggestions: T[] | PromiseLike<T[]> = onEmptyInputFocus(this.state.items);\n    this.updateSuggestionsList(suggestions);\n  }\n\n  protected updateValue(updatedValue: string) {\n    let suggestions: T[] | PromiseLike<T[]> = this.props.onResolveSuggestions(updatedValue, this.state.items);\n    this.updateSuggestionsList(suggestions, updatedValue);\n  }\n\n  protected updateSuggestionsList(suggestions: T[] | PromiseLike<T[]>, updatedValue?: string) {\n    let suggestionsArray: T[] = suggestions as T[];\n    let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n    // Check to see if the returned value is an array, if it is then just pass it into the next function.\n    // If the returned value is not an array then check to see if it's a promise or PromiseLike. If it is then resolve it asynchronously.\n    if (Array.isArray(suggestionsArray)) {\n      if (updatedValue !== undefined) {\n        this.resolveNewValue(updatedValue, suggestionsArray);\n      } else {\n        this.suggestionStore.updateSuggestions(suggestionsArray, 0);\n      }\n    } else if (suggestionsPromiseLike && suggestionsPromiseLike.then) {\n      if (!this.loadingTimer) {\n        this.loadingTimer = this._async.setTimeout(() => this.setState({\n          suggestionsLoading: true\n        }), 500);\n      }\n\n      // Clear suggestions\n      this.suggestionStore.updateSuggestions([]);\n\n      if (updatedValue !== undefined) {\n        this.setState({\n          suggestionsVisible: this.input.value !== '' && this.input.inputElement === document.activeElement\n        });\n      } else {\n        this.setState({\n          suggestionsVisible: this.input.inputElement === document.activeElement\n        });\n      }\n\n      // Ensure that the promise will only use the callback if it was the most recent one.\n      let promise: PromiseLike<T[]> = this.currentPromise = suggestionsPromiseLike;\n      promise.then((newSuggestions: T[]) => {\n        if (promise === this.currentPromise) {\n          if (updatedValue !== undefined) {\n            this.resolveNewValue(updatedValue, newSuggestions);\n          } else {\n            this.suggestionStore.updateSuggestions(newSuggestions);\n            this.setState({\n              suggestionsLoading: false\n            });\n          }\n          if (this.loadingTimer) {\n            this._async.clearTimeout(this.loadingTimer);\n            this.loadingTimer = undefined;\n          }\n        }\n      });\n    }\n  }\n\n  protected resolveNewValue(updatedValue: string, suggestions: T[]) {\n    this.suggestionStore.updateSuggestions(suggestions, 0);\n    let itemValue: string | undefined = undefined;\n\n    if (this.suggestionStore.currentSuggestion) {\n      itemValue = this._getTextFromItem(this.suggestionStore.currentSuggestion.item, updatedValue);\n    }\n\n    this.setState({\n      suggestionsLoading: false,\n      suggestedDisplayValue: itemValue,\n      suggestionsVisible: this.input.value !== '' && this.input.inputElement === document.activeElement\n    });\n  }\n\n  protected onChange(items?: T[]) {\n    if (this.props.onChange) {\n      (this.props.onChange as any)(items);\n    }\n  }\n\n  @autobind\n  protected onInputChange(value: string) {\n    this.updateValue(value);\n    this.setState({\n      moreSuggestionsAvailable: true,\n      isMostRecentlyUsedVisible: false\n    });\n  }\n\n  @autobind\n  protected onSuggestionClick(ev: React.MouseEvent<HTMLElement>, item: any, index: number) {\n    this.addItemByIndex(index);\n    this.setState({ suggestionsVisible: false });\n  }\n\n  @autobind\n  protected onSuggestionRemove(ev: React.MouseEvent<HTMLElement>, item: IPersonaProps, index: number) {\n    if (this.props.onRemoveSuggestion) {\n      (this.props.onRemoveSuggestion as any)(item);\n    }\n    this.suggestionStore.removeSuggestion(index);\n  }\n\n  @autobind\n  protected onInputFocus(ev: React.FocusEvent<HTMLInputElement | BaseAutoFill>) {\n    this.selection.setAllSelected(false);\n    if (this.input.value === '' && this.props.onEmptyInputFocus) {\n      this.onEmptyInputFocus();\n      this.setState({\n        isMostRecentlyUsedVisible: true,\n        moreSuggestionsAvailable: false,\n        suggestionsVisible: true\n      });\n    } else if (this.input.value) {\n      this.setState({\n        isMostRecentlyUsedVisible: false,\n        suggestionsVisible: true\n      });\n    }\n    if (this.props.inputProps && this.props.inputProps.onFocus) {\n      this.props.inputProps.onFocus(ev as React.FocusEvent<HTMLInputElement>);\n    }\n  }\n\n  @autobind\n  protected onKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    switch (ev.which) {\n      case KeyCodes.escape:\n        if (this.state.suggestionsVisible) {\n          this.setState({ suggestionsVisible: false });\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      case KeyCodes.tab:\n      case KeyCodes.enter:\n        if (!ev.shiftKey && this.suggestionStore.hasSelectedSuggestion() && this.state.suggestionsVisible) {\n          this.completeSuggestion();\n          ev.preventDefault();\n          ev.stopPropagation();\n        } else {\n          this._onValidateInput();\n        }\n\n        break;\n\n      case KeyCodes.backspace:\n        this.onBackspace(ev);\n        break;\n\n      case KeyCodes.del:\n        if (this.input && ev.target === this.input.inputElement && this.state.suggestionsVisible && this.suggestionStore.currentIndex !== -1) {\n          if (this.props.onRemoveSuggestion) {\n            (this.props.onRemoveSuggestion as any)(this.suggestionStore.currentSuggestion!.item);\n          }\n          this.suggestionStore.removeSuggestion(this.suggestionStore.currentIndex);\n          this.forceUpdate();\n        } else {\n          this.onBackspace(ev);\n        }\n        break;\n\n      case KeyCodes.up:\n        if (ev.target === this.input.inputElement && this.state.suggestionsVisible) {\n          if (this.state.moreSuggestionsAvailable && this.suggestionElement.props.searchForMoreText && this.suggestionStore.currentIndex === 0) {\n            this.suggestionElement.focusSearchForMoreButton();\n            this.suggestionStore.deselectAllSuggestions();\n            this.forceUpdate();\n          } else {\n            if (this.suggestionStore.previousSuggestion()) {\n              ev.preventDefault();\n              ev.stopPropagation();\n              this.onSuggestionSelect();\n            }\n          }\n        }\n        break;\n\n      case KeyCodes.down:\n        if (ev.target === this.input.inputElement && this.state.suggestionsVisible) {\n          if (this.state.moreSuggestionsAvailable && this.suggestionElement.props.searchForMoreText && (this.suggestionStore.currentIndex + 1) === this.suggestionStore.suggestions.length) {\n            this.suggestionElement.focusSearchForMoreButton();\n            this.suggestionStore.deselectAllSuggestions();\n            this.forceUpdate();\n          } else {\n            if (this.suggestionStore.nextSuggestion()) {\n              ev.preventDefault();\n              ev.stopPropagation();\n              this.onSuggestionSelect();\n            }\n          }\n\n        }\n        break;\n    }\n  }\n\n  @autobind\n  protected onItemChange(changedItem: T, index: number) {\n    let { items } = this.state;\n\n    if (index >= 0) {\n      let newItems: T[] = items;\n      newItems[index] = changedItem;\n\n      this._updateSelectedItems(newItems);\n    }\n  }\n\n  @autobind\n  protected onGetMoreResults() {\n    this.setState({\n      isSearching: true\n    }, () => {\n      if (this.props.onGetMoreResults) {\n        let suggestions: T[] | PromiseLike<T[]> = (this.props.onGetMoreResults as any)(this.input.value, this.state.items);\n        let suggestionsArray: T[] = suggestions as T[];\n        let suggestionsPromiseLike: PromiseLike<T[]> = suggestions as PromiseLike<T[]>;\n\n        if (Array.isArray(suggestionsArray)) {\n          this.updateSuggestions(suggestionsArray);\n          this.setState({ isSearching: false });\n        } else if (suggestionsPromiseLike.then) {\n          suggestionsPromiseLike.then((newSuggestions: T[]) => {\n            this.updateSuggestions(newSuggestions);\n            this.setState({ isSearching: false });\n          });\n        }\n      } else {\n        this.setState({ isSearching: false });\n      }\n      this.input.focus();\n      this.setState({\n        moreSuggestionsAvailable: false,\n        isResultsFooterVisible: true\n      });\n    });\n  }\n\n  @autobind\n  protected addItemByIndex(index: number): void {\n    this.addItem(this.suggestionStore.getSuggestionAtIndex(index).item);\n    this.input.clear();\n    this.updateValue('');\n  }\n\n  @autobind\n  protected addItem(item: T) {\n    let processedItem: T | PromiseLike<T> = this.props.onItemSelected ? (this.props.onItemSelected as any)(item) : item;\n\n    let processedItemObject: T = processedItem as T;\n    let processedItemPromiseLike: PromiseLike<T> = processedItem as PromiseLike<T>;\n\n    if (processedItemPromiseLike && processedItemPromiseLike.then) {\n      processedItemPromiseLike.then((resolvedProcessedItem: T) => {\n        let newItems: T[] = this.state.items.concat([resolvedProcessedItem]);\n        this._updateSelectedItems(newItems);\n      });\n    } else {\n      let newItems: T[] = this.state.items.concat([processedItemObject]);\n      this._updateSelectedItems(newItems);\n    }\n    this.setState({ suggestedDisplayValue: '' });\n  }\n\n  @autobind\n  protected removeItem(item: IPickerItemProps<T>) {\n    let { items } = this.state;\n    let index: number = items.indexOf(item);\n\n    if (index >= 0) {\n      let newItems: T[] = items.slice(0, index).concat(items.slice(index + 1));\n      this._updateSelectedItems(newItems);\n    }\n  }\n\n  @autobind\n  protected removeItems(itemsToRemove: any[]) {\n    let { items } = this.state;\n    let newItems: T[] = items.filter((item: any) => itemsToRemove.indexOf(item) === -1);\n    let firstItemToRemove = itemsToRemove[0];\n    let index: number = items.indexOf(firstItemToRemove);\n\n    this._updateSelectedItems(newItems, index);\n  }\n\n  // This is protected because we may expect the backspace key to work differently in a different kind of picker.\n  // This lets the subclass override it and provide it's own onBackspace. For an example see the BasePickerListBelow\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\n    if (this.state.items.length && !this.input || (!this.input.isValueSelected && this.input.cursorLocation === 0)) {\n      if (this.selection.getSelectedCount() > 0) {\n        this.removeItems(this.selection.getSelection());\n      } else {\n        this.removeItem(this.state.items[this.state.items.length - 1]);\n      }\n    }\n  }\n\n  @autobind\n  protected _isFocusZoneInnerKeystroke(ev: React.KeyboardEvent<HTMLElement>): boolean {\n    // If suggestions are shown let up/down keys control them, otherwise allow them through to control the focusZone.\n    if (this.state.suggestionsVisible) {\n      switch (ev.which) {\n        case KeyCodes.up:\n        case KeyCodes.down:\n          return true;\n      }\n    }\n\n    if (ev.which === KeyCodes.enter) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Controls what happens whenever there is an action that impacts the selected items.\n   * If selectedItems is provided as a property then this will act as a controlled component and it will not update it's own state.\n  */\n  private _updateSelectedItems(items: T[], focusIndex?: number) {\n    if (this.props.selectedItems) {\n      // If the component is a controlled component then the controlling component will need\n      this.onChange(items);\n    } else {\n      this.setState({ items: items }, () => {\n        this._onSelectedItemsUpdated(items, focusIndex);\n      });\n    }\n  }\n\n  private _onSelectedItemsUpdated(items?: T[], focusIndex?: number) {\n    this.resetFocus(focusIndex);\n    this.onChange(items);\n  }\n\n  private _onValidateInput() {\n    if (this.props.onValidateInput && (this.props.onValidateInput as any)(this.input.value) !== ValidationState.invalid && this.props.createGenericItem) {\n      let itemToConvert = (this.props.createGenericItem as any)(this.input.value, (this.props.onValidateInput as any)(this.input.value));\n      this.suggestionStore.createGenericSuggestion(itemToConvert);\n      this.completeSuggestion();\n    }\n  }\n\n  private _getTextFromItem(item: T, currentValue?: string): string {\n    if (this.props.getTextFromItem) {\n      return (this.props.getTextFromItem as any)(item, currentValue);\n    } else {\n      return '';\n    }\n  }\n}\n\nexport class BasePickerListBelow<T, P extends IBasePickerProps<T>> extends BasePicker<T, P> {\n  public render() {\n    let { suggestedDisplayValue } = this.state;\n    let {\n      className,\n      inputProps,\n      disabled\n    } = this.props;\n\n    return (\n      <div>\n        <div ref={ this._resolveRef('root') }\n          className={ css('ms-BasePicker', className ? className : '') }\n          onKeyDown={ this.onKeyDown } >\n          <SelectionZone selection={ this.selection }\n            selectionMode={ SelectionMode.multiple }>\n            <div className={ css('ms-BasePicker-text', styles.pickerText) }>\n              <BaseAutoFill\n                { ...inputProps as any }\n                className={ css('ms-BasePicker-input', styles.pickerInput) }\n                ref={ this._resolveRef('input') }\n                onFocus={ this.onInputFocus }\n                onInputValueChange={ this.onInputChange }\n                suggestedDisplayValue={ suggestedDisplayValue }\n                aria-activedescendant={ 'sug-' + this.suggestionStore.currentIndex }\n                aria-owns='suggestion-list'\n                aria-expanded='true'\n                aria-haspopup='true'\n                autoCapitalize='off'\n                autoComplete='off'\n                role='combobox'\n                disabled={ disabled }\n              />\n            </div>\n          </SelectionZone>\n        </div>\n        { this.renderSuggestions() }\n        <FocusZone ref={ this._resolveRef('focusZone') }\n          className='ms-BasePicker-selectedItems'\n          isCircularNavigation={ true }\n          direction={ FocusZoneDirection.bidirectional }\n          isInnerZoneKeystroke={ this._isFocusZoneInnerKeystroke } >\n          { this.renderItems() }\n        </FocusZone>\n\n      </div>\n    );\n  }\n\n  protected onBackspace(ev: React.KeyboardEvent<HTMLElement>) {\n    // override the existing backspace method to not do anything because the list items appear below.\n  }\n}\n"]}