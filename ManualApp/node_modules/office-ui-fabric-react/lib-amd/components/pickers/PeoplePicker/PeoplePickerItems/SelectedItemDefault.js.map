{"version":3,"file":"SelectedItemDefault.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/PeoplePickerItems/SelectedItemDefault.tsx"],"names":[],"mappings":";;;IASA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEpB,QAAA,mBAAmB,GAAmD,UAAC,qBAA6C;QAE7H,IAAA,iCAAI,EACJ,iDAAY,EACZ,mCAAK,EACL,yCAAQ,EACR,mEAAqB,CACG;QAE1B,IAAM,MAAM,GAAG,iBAAK,EAAE,CAAC;QAEvB,MAAM,CAAC,CACL,6BACE,SAAS,EAAG,eAAG,CACb,4BAA4B,EAC5B,MAAM,CAAC,gBAAgB,YACrB,GAAC,cAAc,GAAG,MAAM,CAAC,0BAA0B,IAAG,QAAQ,iBAC9D,GAAC,aAAa,GAAG,MAAM,CAAC,eAAe,IAAG,IAAI,CAAC,eAAe,KAAK,kCAAe,CAAC,OAAO,MAC7F,uBACmB,IAAI,2BACA,IAAI,0BACL,KAAK,EAC5B,IAAI,EAAG,UAAU,qBACC,sBAAsB,GAAG,MAAM;YACjD,6BACE,SAAS,EAAG,eAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,WAAW,CAAC,EAC5D,EAAE,EAAG,sBAAsB,GAAG,MAAM;gBACpC,oBAAC,iBAAO,uBACD,IAAI,IACT,QAAQ,EAAG,IAAI,CAAC,QAAQ,KAAK,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,yBAAe,CAAC,IAAI,EAC7E,IAAI,EAAG,qBAAW,CAAC,MAAM,IACzB,CACE;YACN,oBAAC,mBAAU,IACT,OAAO,EAAG,cAAQ,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;oBAAC,YAAY,EAAE,CAAC;gBAAC,CAAC,CAAC,CAAC,EACzD,SAAS,EAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,EAAE,EAC/D,SAAS,EAAG,eAAG,CAAC,4BAA4B,EAAE,MAAM,CAAC,YAAY,CAAC,EAClE,SAAS,EAAG,qBAAqB,GACjC,CACG,CACR,CAAC;;IACJ,CAAC,CAAC","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport { css, getId } from '../../../../Utilities';\nimport { Persona, PersonaSize, PersonaPresence } from '../../../../Persona';\nimport { IPeoplePickerItemProps } from './PeoplePickerItem.Props';\nimport { ValidationState } from '../../BasePicker.Props';\nimport { IconButton } from '../../../../Button';\nimport * as stylesImport from './PickerItemsDefault.scss';\nconst styles: any = stylesImport;\n\nexport const SelectedItemDefault: (props: IPeoplePickerItemProps) => JSX.Element = (peoplePickerItemProps: IPeoplePickerItemProps) => {\n  let {\n    item,\n    onRemoveItem,\n    index,\n    selected,\n    removeButtonAriaLabel\n  } = peoplePickerItemProps;\n\n  const itemId = getId();\n\n  return (\n    <div\n      className={ css(\n        'ms-PickerPersona-container',\n        styles.personaContainer,\n        { ['is-selected ' + styles.personaContainerIsSelected]: selected },\n        { ['is-invalid ' + styles.validationError]: item.ValidationState === ValidationState.warning }\n      ) }\n      data-is-focusable={ true }\n      data-is-sub-focuszone={ true }\n      data-selection-index={ index }\n      role={ 'listitem' }\n      aria-labelledby={ 'selectedItemPersona-' + itemId } >\n      <div\n        className={ css('ms-PickerItem-content', styles.itemContent) }\n        id={ 'selectedItemPersona-' + itemId } >\n        <Persona\n          { ...item }\n          presence={ item.presence !== undefined ? item.presence : PersonaPresence.none }\n          size={ PersonaSize.size28 }\n        />\n      </div>\n      <IconButton\n        onClick={ () => { if (onRemoveItem) { onRemoveItem(); } } }\n        iconProps={ { iconName: 'Cancel', style: { fontSize: '12px' } } }\n        className={ css('ms-PickerItem-removeButton', styles.removeButton) }\n        ariaLabel={ removeButtonAriaLabel }\n      />\n    </div >\n  );\n};\n"]}