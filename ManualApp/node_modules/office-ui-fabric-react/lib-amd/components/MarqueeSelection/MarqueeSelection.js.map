{"version":3,"file":"MarqueeSelection.js","sourceRoot":"../src/","sources":["components/MarqueeSelection/MarqueeSelection.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  AutoScroll,\n  BaseComponent,\n  IPoint,\n  IRectangle,\n  autobind,\n  css,\n  findScrollableParent,\n  getDistanceBetweenPoints,\n  getRTL\n} from '../../Utilities';\nimport { IMarqueeSelectionProps } from './MarqueeSelection.Props';\nimport * as stylesImport from './MarqueeSelection.scss';\nconst styles: any = stylesImport;\n\nexport interface IMarqueeSelectionState {\n  dragOrigin?: IPoint;\n  dragRect?: IRectangle;\n}\n\n// We want to make the marquee selection start when the user drags a minimum distance. Otherwise we'd start\n// the drag even if they just click an item without moving.\nconst MIN_DRAG_DISTANCE = 5;\n\n/**\n * MarqueeSelection component abstracts managing a draggable rectangle which sets items selected/not selected.\n * Elements which have data-selectable-index attributes are queried and measured once to determine if they\n * fall within the bounds of the rectangle. The measure is memoized during the drag as a performance optimization\n * so if the items change sizes while dragging, that could cause incorrect results.\n */\nexport class MarqueeSelection extends BaseComponent<IMarqueeSelectionProps, IMarqueeSelectionState> {\n  public static defaultProps = {\n    rootTagName: 'div',\n    rootProps: {},\n    isEnabled: true\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n  };\n\n  private _dragOrigin: IPoint | undefined;\n  private _rootRect: IRectangle;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _autoScroll: AutoScroll | undefined;\n  private _selectedIndicies: { [key: string]: boolean } | undefined;\n  private _itemRectCache: { [key: string]: IRectangle } | undefined;\n  private _scrollableParent: HTMLElement;\n  private _scrollableSurface: HTMLElement;\n  private _scrollTop: number;\n\n  constructor(props: IMarqueeSelectionProps) {\n    super(props);\n\n    this.state = {\n      dragRect: undefined\n    };\n  }\n\n  public componentDidMount() {\n    this._scrollableParent = findScrollableParent(this.refs.root) as HTMLElement;\n    this._scrollableSurface = this._scrollableParent === window as any ? document.body : this._scrollableParent;\n    // When scroll events come from window, we need to read scrollTop values from the body.\n\n    this._events.on(\n      this.props.isDraggingConstrainedToRoot ? this.refs.root : this._scrollableSurface,\n      'mousedown',\n      this._onMouseDown);\n  }\n\n  public componentWillUnmount() {\n    if (this._autoScroll) {\n      this._autoScroll.dispose();\n    }\n  }\n\n  public render(): JSX.Element {\n    let { rootProps, children } = this.props;\n    let { dragRect } = this.state;\n\n    return (\n      <div\n        { ...rootProps }\n        className={ css(\n          'ms-MarqueeSelection',\n          styles.root,\n          rootProps && rootProps.className\n        ) }\n        ref='root'\n      >\n        { children }\n        { dragRect && (<div className={ css('ms-MarqueeSelection-dragMask', styles.dragMask) } />) }\n        { dragRect && (\n          <div\n            className={ css(\n              'ms-MarqueeSelection-box',\n              styles.box\n            ) }\n            style={ dragRect }\n          >\n            <div className={ css(\n              'ms-MarqueeSelection-boxFill',\n              styles.boxFill\n            ) } />\n          </div>\n        ) }\n      </div>\n    );\n  }\n\n  /** Determine if the mouse event occured on a scrollbar of the target element. */\n  private _isMouseEventOnScrollbar(ev: MouseEvent) {\n    let targetElement = ev.target as HTMLElement;\n    let targetScrollbarWidth = (targetElement.offsetWidth - targetElement.clientWidth);\n\n    if (targetScrollbarWidth) {\n      let targetRect = targetElement.getBoundingClientRect();\n\n      // Check vertical scroll\n      if (getRTL()) {\n        if (ev.clientX < (targetRect.left + targetScrollbarWidth)) {\n          return true;\n        }\n      } else {\n        if (ev.clientX > (targetRect.left + targetElement.clientWidth)) {\n          return true;\n        }\n      }\n\n      // Check horizontal scroll\n      if (ev.clientY > (targetRect.top + targetElement.clientHeight)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @autobind\n  private _onMouseDown(ev: MouseEvent) {\n    let { isEnabled, onShouldStartSelection } = this.props;\n\n    // Ensure the mousedown is within the boundaries of the target. If not, it may have been a click on a scrollbar.\n    if (this._isMouseEventOnScrollbar(ev)) {\n      return;\n    }\n\n    if (isEnabled && !this._isDragStartInSelection(ev) && (!onShouldStartSelection || onShouldStartSelection(ev))) {\n      if (this._scrollableSurface && ev.button === 0) {\n        this._selectedIndicies = {};\n        this._events.on(window, 'mousemove', this._onAsyncMouseMove);\n        this._events.on(this._scrollableParent, 'scroll', this._onAsyncMouseMove);\n        this._events.on(window, 'click', this._onMouseUp, true);\n\n        this._autoScroll = new AutoScroll(this.refs.root);\n        this._scrollTop = this._scrollableSurface.scrollTop;\n        this._rootRect = this.refs.root.getBoundingClientRect();\n\n        this._onMouseMove(ev);\n      }\n    }\n  }\n\n  private _getRootRect(): IRectangle {\n    return {\n      left: this._rootRect.left,\n      top: this._rootRect.top + (this._scrollTop - this._scrollableSurface.scrollTop),\n      width: this._rootRect.width,\n      height: this._rootRect.height\n    };\n  }\n\n  private _onAsyncMouseMove(ev: MouseEvent) {\n    this._async.requestAnimationFrame(() => {\n      this._onMouseMove(ev);\n    });\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n  private _onMouseMove(ev: MouseEvent) {\n    if (!this._autoScroll) {\n      return;\n    }\n\n    if (ev.clientX !== undefined) {\n      this._lastMouseEvent = ev;\n    }\n\n    let rootRect = this._getRootRect();\n    let currentPoint = { x: ev.clientX - rootRect.left, y: ev.clientY - rootRect.top };\n\n    if (!this._dragOrigin) {\n      this._dragOrigin = currentPoint;\n    }\n\n    if (ev.buttons !== undefined && ev.buttons === 0) {\n      this._onMouseUp(ev);\n    } else {\n      if (this.state.dragRect || getDistanceBetweenPoints(this._dragOrigin, currentPoint) > MIN_DRAG_DISTANCE) {\n        // We need to constrain the current point to the rootRect boundaries.\n        let constrainedPoint = this.props.isDraggingConstrainedToRoot ? {\n          x: Math.max(0, Math.min(rootRect.width, this._lastMouseEvent!.clientX - rootRect.left)),\n          y: Math.max(0, Math.min(rootRect.height, this._lastMouseEvent!.clientY - rootRect.top))\n        } : {\n            x: this._lastMouseEvent!.clientX - rootRect.left,\n            y: this._lastMouseEvent!.clientY - rootRect.top\n          };\n\n        let dragRect = {\n          left: Math.min(this._dragOrigin.x, constrainedPoint.x),\n          top: Math.min(this._dragOrigin.y, constrainedPoint.y),\n          width: Math.abs(constrainedPoint.x - this._dragOrigin.x),\n          height: Math.abs(constrainedPoint.y - this._dragOrigin.y)\n        };\n\n        this._evaluateSelection(dragRect, rootRect);\n\n        this.setState({ dragRect });\n      }\n    }\n\n    return false;\n  }\n\n  private _onMouseUp(ev: MouseEvent) {\n    this._events.off(window);\n    this._events.off(this._scrollableParent, 'scroll');\n\n    if (this._autoScroll) {\n      this._autoScroll.dispose();\n    }\n\n    this._autoScroll = this._dragOrigin = this._lastMouseEvent = this._selectedIndicies = this._itemRectCache = undefined;\n\n    if (this.state.dragRect) {\n\n      this.setState({\n        dragRect: undefined\n      });\n\n      ev.preventDefault();\n      ev.stopPropagation();\n    }\n  }\n\n  private _isPointInRectangle(rectangle: IRectangle, point: IPoint): boolean {\n    return rectangle.top < point.y &&\n      rectangle.bottom! > point.y &&\n      rectangle.left < point.x &&\n      rectangle.right! > point.x;\n  }\n\n  /**\n   * We do not want to start the marquee if we're trying to marquee\n   * from within an existing marquee selection.\n   */\n  private _isDragStartInSelection(ev: MouseEvent): boolean {\n    const selection = this.props.selection;\n    if (selection && selection.getSelectedCount() === 0) {\n      return false;\n    }\n\n    const allElements = this.refs.root.querySelectorAll('[data-selection-index]');\n    for (let i = 0; i < allElements.length; i++) {\n      const element = allElements[i];\n      const index = Number(element.getAttribute('data-selection-index'));\n      if (selection.isIndexSelected(index)) {\n        const itemRect = element.getBoundingClientRect();\n        if (this._isPointInRectangle(itemRect, { x: ev.x, y: ev.y })) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private _evaluateSelection(dragRect: IRectangle, rootRect: IRectangle) {\n    // Break early if we don't need to evaluate.\n    if (!dragRect) {\n      return;\n    }\n\n    let { selection } = this.props;\n    let allElements = this.refs.root.querySelectorAll('[data-selection-index]');\n\n    if (!this._itemRectCache) {\n      this._itemRectCache = {};\n    }\n\n    // Stop change events, clear selection to re-populate.\n    selection.setChangeEvents(false);\n    selection.setAllSelected(false);\n\n    for (let i = 0; i < allElements.length; i++) {\n      let element = allElements[i];\n      let index = element.getAttribute('data-selection-index') as string;\n\n      // Pull the memoized rectangle for the item, or the get the rect and memoize.\n      let itemRect = this._itemRectCache[index];\n\n      if (!itemRect) {\n        itemRect = element.getBoundingClientRect();\n\n        // Normalize the item rect to the dragRect coordinates.\n        itemRect = {\n          left: itemRect.left - rootRect.left,\n          top: itemRect.top - rootRect.top,\n          width: itemRect.width,\n          height: itemRect.height,\n          right: (itemRect.left - rootRect.left) + itemRect.width,\n          bottom: (itemRect.top - rootRect.top) + itemRect.height\n        };\n\n        if (itemRect.width > 0 && itemRect.height > 0) {\n          this._itemRectCache[index] = itemRect;\n        }\n      }\n\n      if (\n        itemRect.top < (dragRect.top + dragRect.height) &&\n        itemRect.bottom! > dragRect.top &&\n        itemRect.left < (dragRect.left + dragRect.width) &&\n        itemRect.right! > dragRect.left\n      ) {\n        this._selectedIndicies![index] = true;\n      } else {\n        delete this._selectedIndicies![index];\n      }\n    }\n\n    for (let index in this._selectedIndicies!) {\n      if (this._selectedIndicies!.hasOwnProperty(index)) {\n        selection.setIndexSelected(Number(index), true, false);\n      }\n    }\n\n    selection.setChangeEvents(true);\n  }\n}\n"]}