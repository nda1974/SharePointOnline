{"version":3,"file":"Check.js","sourceRoot":"../src/","sources":["components/Check/Check.tsx"],"names":[],"mappings":";;;IAIA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAsBjC;QAA2B,iCAA8B;QAAzD;;QA+BA,CAAC;QA1BQ,qCAAqB,GAA5B,UAA6B,QAAqB;YAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC,OAAO,CAAC;QAChG,CAAC;QAEM,sBAAM,GAAb;YACM,IAAA,eAAmC,EAAjC,wBAAS,EAAE,oBAAO,CAAgB;YAExC,SAAS,GAAG,SAAS,IAAI,OAAO,CAAC;YAEjC,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAClB,UAAU,EACV,MAAM,CAAC,IAAI,EACX,SAAS,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,CACpD;gBACG,WAAI,CAAC;oBACL,SAAS,EAAE,kBAAkB,GAAG,MAAM,CAAC,MAAM;oBAC7C,QAAQ,EAAE,YAAY;iBACvB,CAAC;gBACA,WAAI,CAAC;oBACL,SAAS,EAAE,iBAAiB,GAAG,MAAM,CAAC,KAAK;oBAC3C,QAAQ,EAAE,uBAAuB;iBAClC,CAAC,CACE,CACP,CAAC;QACJ,CAAC;QA7Ba,kBAAY,GAAG;YAC3B,SAAS,EAAE,KAAK;SACjB,CAAC;QA4BJ,YAAC;KAAA,AA/BD,CAA2B,yBAAa,GA+BvC;IA/BY,sBAAK","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, css } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport * as stylesImport from './Check.scss';\nconst styles: any = stylesImport;\n\nexport interface ICheckProps extends React.Props<Check> {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: () => void;\n\n  /**\n   * Whether or not this menu item is currently checked.\n   * @defaultvalue false\n   */\n  checked?: boolean;\n  /**\n   * Deprecated at v0.65.1 and will be removed by v 1.0. Use 'checked' instead.\n   * @deprecated\n   */\n  isChecked?: boolean;\n\n  alwaysShowCheck?: boolean;\n}\n\nexport class Check extends BaseComponent<ICheckProps, {}> {\n  public static defaultProps = {\n    isChecked: false\n  };\n\n  public shouldComponentUpdate(newProps: ICheckProps) {\n    return this.props.isChecked !== newProps.isChecked || this.props.checked !== newProps.checked;\n  }\n\n  public render() {\n    let { isChecked, checked } = this.props;\n\n    isChecked = isChecked || checked;\n\n    return (\n      <div className={ css(\n        'ms-Check',\n        styles.root,\n        isChecked && ('is-checked ' + styles.rootIsChecked)\n      ) }>\n        { Icon({\n          className: 'ms-Check-circle ' + styles.circle,\n          iconName: 'CircleRing'\n        }) }\n        { Icon({\n          className: 'ms-Check-check ' + styles.check,\n          iconName: 'StatusCircleCheckmark'\n        }) }\n      </div>\n    );\n  }\n}\n"]}