{"version":3,"file":"DocumentCardPreview.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardPreview.tsx"],"names":[],"mappings":";;;IAUA,IAAM,MAAM,GAAQ,YAAY,CAAC;IAEjC,IAAM,eAAe,GAAG,CAAC,CAAC;IAE1B;QAAyC,+CAA6C;QAAtF;;QAsGA,CAAC;QArGQ,oCAAM,GAAb;YACQ,IAAA,wCAAa,CAAgB;YACnC,IAAI,KAAK,EAAE,OAAO,CAAC;YACnB,IAAI,UAAU,GAAG,KAAK,CAAC;YAEvB,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,yBAAyB;gBACzB,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;gBACjD,UAAU,GAAG,IAAI,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtC,0BAA0B;gBAC1B,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;gBAErD,4DAA4D;gBAC5D,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;oBACjC,KAAK,GAAG;wBACN,iBAAiB,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW;qBAChD,CAAC;gBACJ,CAAC;YACH,CAAC;YAED,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,wBAAwB,EAAE,MAAM,CAAC,OAAO,EAAE,UAAU,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,EACvH,KAAK,EAAG,KAAK,IACX,OAAO,CACL,CACP,CAAC;QACJ,CAAC;QAEO,iDAAmB,GAA3B,UAA4B,YAAuC;YAC3D,IAAA,0BAAK,EAAE,4BAAM,EAAE,gCAAQ,EAAE,gDAAgB,CAAkB;YAEjE,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,sCAAsC,EAAE,MAAM,CAAC,oBAAoB,CAAC,EAAG,KAAK,EAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;oBAClI,oBAAC,WAAI,uBAAM,gBAAgB,EAAK,CAC5B,CACP,CAAC;YACJ,CAAC;YAED,IAAI,KAAK,GAAG,CACV,oBAAC,aAAK,IACJ,KAAK,EAAG,KAAK,EACb,MAAM,EAAG,MAAM,EACf,QAAQ,EAAG,QAAQ,EACnB,GAAG,EAAG,YAAY,CAAC,eAAe,EAClC,IAAI,EAAC,cAAc,EAAC,GAAG,EAAC,EAAE,GAAG,CAChC,CAAC;YAEF,IAAI,IAAI,CAAC;YACT,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACzB,IAAI,GAAG,oBAAC,aAAK,IAAC,SAAS,EAAG,eAAG,CAAC,6BAA6B,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,GAAG,EAAG,YAAY,CAAC,OAAO,EAAG,IAAI,EAAC,cAAc,EAAC,GAAG,EAAC,EAAE,GAAG,CAAC;YACzI,CAAC;YAED,MAAM,CAAC,CACL;gBACI,KAAK;gBACL,IAAI,CACF,CACP,CAAC;QACJ,CAAC;QAGO,gDAAkB,GAA1B,UAA2B,aAA0C;YAC7D,IAAA,sEAA4B,CAAgB;YAElD,mDAAmD;YACnD,IAAI,qBAAqB,GAAG,aAAa,CAAC,MAAM,GAAG,eAAe,CAAC;YAEnE,4EAA4E;YAC5E,IAAI,YAAY,GAAG,qBAAqB;gBACtC,CAAC,4BAA4B;oBAC3B,4BAA4B,CAAC,qBAAqB,CAAC;oBACnD,GAAG,GAAG,qBAAqB,CAAC,GAAG,IAAI,CAAC;YAExC,kDAAkD;YAClD,IAAI,aAAa,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,SAAS,IAAK,OAAA,CACnF,4BAAI,GAAG,EAAG,SAAS;gBACjB,oBAAC,aAAK,IACJ,SAAS,EAAG,eAAG,CAAC,qCAAqC,EAAE,MAAM,CAAC,YAAY,CAAC,EAC3E,GAAG,EAAG,IAAI,CAAC,OAAO,EAClB,IAAI,EAAC,cAAc,EACnB,GAAG,EAAC,EAAE,EACN,KAAK,EAAC,MAAM,EACZ,MAAM,EAAC,MAAM,GAAG;gBAClB,2BAAG,IAAI,EAAG,IAAI,CAAC,GAAG,IAAK,IAAI,CAAC,IAAI,CAAM,CACnC,CACN,EAXoF,CAWpF,CAAC,CAAC;YAEH,MAAM,CAAC,CACL;gBACE,4BAAI,SAAS,EAAG,eAAG,CAAC,iCAAiC,EAAE,MAAM,CAAC,QAAQ,CAAC,IACnE,aAAa,CACZ;gBACH,YAAY;oBACZ,8BAAM,SAAS,EAAG,eAAG,CAAC,qCAAqC,EAAE,MAAM,CAAC,YAAY,CAAC,IAAK,YAAY,CAAS,CAEzG,CACP,CAAC;QACJ,CAAC;QApCD;YADC,oBAAQ;qEAqCR;QAEH,0BAAC;KAAA,AAtGD,CAAyC,yBAAa,GAsGrD;IAtGY,kDAAmB","sourcesContent":["import * as React from 'react';\nimport { IDocumentCardPreviewProps, IDocumentCardPreviewImage } from './DocumentCard.Props';\nimport { Image } from '../../Image';\nimport { Icon } from '../../Icon';\nimport {\n  BaseComponent,\n  autobind,\n  css\n} from '../../Utilities';\nimport * as stylesImport from './DocumentCard.scss';\nconst styles: any = stylesImport;\n\nconst LIST_ITEM_COUNT = 3;\n\nexport class DocumentCardPreview extends BaseComponent<IDocumentCardPreviewProps, any> {\n  public render() {\n    let { previewImages } = this.props;\n    let style, preview;\n    let isFileList = false;\n\n    if (previewImages.length > 1) {\n      // Render a list of files\n      preview = this._renderPreviewList(previewImages);\n      isFileList = true;\n    } else if (previewImages.length === 1) {\n      // Render a single preview\n      preview = this._renderPreviewImage(previewImages[0]);\n\n      // Override the border color if an accent color was provided\n      if (previewImages[0].accentColor) {\n        style = {\n          borderBottomColor: previewImages[0].accentColor\n        };\n      }\n    }\n\n    return (\n      <div className={ css('ms-DocumentCardPreview', styles.preview, isFileList && ('is-fileList ' + styles.previewIsFileList)) }\n        style={ style }>\n        { preview }\n      </div>\n    );\n  }\n\n  private _renderPreviewImage(previewImage: IDocumentCardPreviewImage): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> {\n    let { width, height, imageFit, previewIconProps } = previewImage;\n\n    if (previewIconProps) {\n      return (\n        <div className={ css('ms-DocumentCardPreview-iconContainer', styles.previewIconContainer) } style={ { width: width, height: height } } >\n          <Icon { ...previewIconProps } />\n        </div>\n      );\n    }\n\n    let image = (\n      <Image\n        width={ width }\n        height={ height }\n        imageFit={ imageFit }\n        src={ previewImage.previewImageSrc }\n        role='presentation' alt='' />\n    );\n\n    let icon;\n    if (previewImage.iconSrc) {\n      icon = <Image className={ css('ms-DocumentCardPreview-icon', styles.icon) } src={ previewImage.iconSrc } role='presentation' alt='' />;\n    }\n\n    return (\n      <div>\n        { image }\n        { icon }\n      </div>\n    );\n  }\n\n  @autobind\n  private _renderPreviewList(previewImages: IDocumentCardPreviewImage[]): React.ReactElement<React.HTMLAttributes<HTMLDivElement>> {\n    let { getOverflowDocumentCountText } = this.props;\n\n    // Determine how many documents we won't be showing\n    let overflowDocumentCount = previewImages.length - LIST_ITEM_COUNT;\n\n    // Determine the overflow text that will be rendered after the preview list.\n    let overflowText = overflowDocumentCount ?\n      (getOverflowDocumentCountText ?\n        getOverflowDocumentCountText(overflowDocumentCount) :\n        '+' + overflowDocumentCount) : null;\n\n    // Create list items for the documents to be shown\n    let fileListItems = previewImages.slice(0, LIST_ITEM_COUNT).map((file, fileIndex) => (\n      <li key={ fileIndex }>\n        <Image\n          className={ css('ms-DocumentCardPreview-fileListIcon', styles.fileListIcon) }\n          src={ file.iconSrc }\n          role='presentation'\n          alt=''\n          width='16px'\n          height='16px' />\n        <a href={ file.url }>{ file.name }</a>\n      </li>\n    ));\n\n    return (\n      <div>\n        <ul className={ css('ms-DocumentCardPreview-fileList', styles.fileList) }>\n          { fileListItems }\n        </ul>\n        { overflowText &&\n          <span className={ css('ms-DocumentCardPreview-fileListMore', styles.fileListMore) }>{ overflowText }</span>\n        }\n      </div>\n    );\n  }\n\n}\n"]}