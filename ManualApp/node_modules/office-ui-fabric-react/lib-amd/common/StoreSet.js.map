{"version":3,"file":"StoreSet.js","sourceRoot":"../src/","sources":["common/StoreSet.ts"],"names":[],"mappings":";;;IAIA;QAKE;YACE,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC;QAEM,sBAAG,GAAV,UAAoC,GAAc,EAAE,KAAQ;YAC1D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;YAC7B,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAEM,2BAAQ,GAAf,UAAyC,GAAc;YACrD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC;QAEM,wBAAK,GAAZ,UAAa,MAAgB;YAC3B,IAAI,cAAc,GAAG,IAAI,QAAQ,EAAE,CAAC;YAEpC,cAAc,CAAC,OAAO,GAAG,kBAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAE1D,MAAM,CAAC,cAAc,CAAC;QACxB,CAAC;QACH,eAAC;IAAD,CAAC,AAzBD,IAyBC;IAzBY,4BAAQ","sourcesContent":["import { IStoreKey } from './storeKey';\nimport { ISubscribable } from './ISubscribable';\nimport { assign } from '../Utilities';\n\nexport class StoreSet {\n  private _stores: {\n    [key: string]: any;\n  };\n\n  constructor() {\n    this._stores = {};\n  }\n\n  public add<T extends ISubscribable>(key: IStoreKey, value: T): StoreSet {\n    this._stores[key.id] = value;\n    return this;\n  }\n\n  public getStore<T extends ISubscribable>(key: IStoreKey): T {\n    return this._stores[key.id];\n  }\n\n  public merge(stores: StoreSet) {\n    let mergedStoreSet = new StoreSet();\n\n    mergedStoreSet._stores = assign({}, this._stores, stores);\n\n    return mergedStoreSet;\n  }\n}"]}