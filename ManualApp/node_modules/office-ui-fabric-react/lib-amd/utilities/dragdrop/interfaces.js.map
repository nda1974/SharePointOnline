{"version":3,"file":"interfaces.js","sourceRoot":"../src/","sources":["utilities/dragdrop/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { EventGroup } from '../../Utilities';\n\nexport interface IDragDropHelper {\n  subscribe: (root: HTMLElement, events: EventGroup, options: IDragDropOptions) => {\n    key: string;\n    dispose: () => void;\n  };\n  unsubscribe: (root: HTMLElement, key: string) => void;\n  dispose: () => void;\n}\n\nexport interface IDragDropEvents {\n  canDrop?: (dropContext?: IDragDropContext, dragContext?: IDragDropContext) => boolean;\n  canDrag?: (item?: any) => boolean;\n  onDragEnter?: (item?: any, event?: DragEvent) => string; // return string is the css classes that will be added to the enterring element.\n  onDragLeave?: (item?: any, event?: DragEvent) => void;\n  onDrop?: (item?: any, event?: DragEvent) => void;\n  onDragStart?: (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent) => void;\n  onDragEnd?: (item?: any, event?: DragEvent) => void;\n}\n\nexport interface IDragDropContext {\n  data: any;\n  index: number;\n  isGroup?: boolean;\n}\n\nexport interface IDragDropTarget {\n  root: React.ReactInstance;\n  options: IDragDropOptions;\n  key: string;\n}\n\nexport interface IDragDropOptions {\n  key?: string;\n  eventMap?: { eventName: string, callback: (context: IDragDropContext, event?: any) => void }[];\n  selectionIndex: number;\n  context: IDragDropContext;\n  updateDropState: (isDropping: boolean, event: DragEvent) => void;\n  canDrop?: (dropContext?: IDragDropContext, dragContext?: IDragDropContext) => boolean;\n  canDrag?: (item?: any) => boolean;\n  onDragStart?: (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent) => void;\n  onDrop?: (item?: any, event?: DragEvent) => void;\n  onDragEnd?: (item?: any, event?: DragEvent) => void;\n}\n\nexport interface IDragDropEvent {\n  isHandled?: boolean;\n}\n"]}