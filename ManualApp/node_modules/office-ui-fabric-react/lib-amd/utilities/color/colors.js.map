{"version":3,"file":"colors.js","sourceRoot":"../src/","sources":["utilities/color/colors.ts"],"names":[],"mappings":"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","sourcesContent":["import { assign } from '../../Utilities';\nimport { COLOR_VALUES } from './colorValues';\n\nexport const MAX_COLOR_SATURATION = 100;\nexport const MAX_COLOR_HUE = 359;\nexport const MAX_COLOR_VALUE = 100;\nexport const MAX_COLOR_RGBA = 255;\n\nexport interface IRGB {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\nexport interface IHSV {\n  h: number;\n  s: number;\n  v: number;\n}\n\nexport interface IColor extends IRGB, IHSV {\n  hex: string;\n  str: string;\n}\n\nexport function cssColor(color: string): IRGB {\n  return (_named(color)\n    || _hex3(color)\n    || _hex6(color)\n    || _rgb(color)\n    || _rgba(color)\n    || _hsl(color)\n    || _hsla(color) as IRGB);\n}\n\nexport function rgb2hex(r: number, g: number, b: number): string {\n  return [\n    _numberToPaddedHex(r),\n    _numberToPaddedHex(g),\n    _numberToPaddedHex(b)\n  ].join('');\n}\n\nexport function hsv2hex(h: number, s: number, v: number): string {\n  const { r, g, b } = hsv2rgb(h, s, v);\n\n  return rgb2hex(r, g, b);\n}\n\nexport function rgb2hsv(r: number, g: number, b: number): IHSV {\n  let h = NaN;\n  let s;\n  let v;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n\n  // hue\n  if (delta === 0) {\n    h = 0;\n  } else if (r === max) {\n    h = ((g - b) / delta) % 6;\n  } else if (g === max) {\n    h = (b - r) / delta + 2;\n  } else if (b === max) {\n    h = (r - g) / delta + 4;\n  }\n\n  h = Math.round(h * 60);\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  // saturation\n  s = Math.round((max === 0 ? 0 : (delta / max)) * 100);\n\n  // value\n  v = Math.round(max / 255 * 100);\n\n  return { h, s, v };\n}\n\nexport function hsl2hsv(h: number, s: number, l: number): IHSV {\n  s *= ((l < 50) ? l : (100 - l)) / 100;\n\n  return {\n    h: h,\n    s: 2 * s / (l + s) * 100,\n    v: l + s\n  };\n}\n\nexport function hsv2hsl(h: number, s: number, v: number): { h: number, s: number, l: number } {\n  s /= MAX_COLOR_SATURATION;\n  v /= MAX_COLOR_VALUE;\n\n  let l = (2 - s) * v;\n  let sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n\n  return { h: h, s: sl * 100, l: l * 100 };\n}\n\nexport function hsl2rgb(h: number, s: number, l: number): IRGB {\n  const hsv = hsl2hsv(h, s, l);\n\n  return hsv2rgb(hsv.h, hsv.s, hsv.v);\n}\n\nexport function hsv2rgb(h: number, s: number, v: number): IRGB {\n  s = s / 100;\n  v = v / 100;\n\n  let rgb: number[] = [];\n\n  const c = v * s;\n  const hh = h / 60;\n  const x = c * (1 - Math.abs(hh % 2 - 1));\n  const m = v - c;\n\n  switch (Math.floor(hh)) {\n    case 0:\n      rgb = [c, x, 0];\n      break;\n\n    case 1:\n      rgb = [x, c, 0];\n      break;\n\n    case 2:\n      rgb = [0, c, x];\n      break;\n\n    case 3:\n      rgb = [0, x, c];\n      break;\n\n    case 4:\n      rgb = [x, 0, c];\n      break;\n\n    case 5:\n      rgb = [c, 0, x];\n      break;\n  }\n\n  return {\n    r: Math.round(MAX_COLOR_RGBA * (rgb[0] + m)),\n    g: Math.round(MAX_COLOR_RGBA * (rgb[1] + m)),\n    b: Math.round(MAX_COLOR_RGBA * (rgb[2] + m))\n  };\n}\n\nexport function getColorFromString(color: string): IColor {\n  let { a, b, g, r } = cssColor(color);\n  let { h, s, v } = rgb2hsv(r, g, b);\n\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: rgb2hex(r, g, b),\n    r: r,\n    s: s,\n    str: color,\n    v: v\n  };\n}\n\nexport function getColorFromRGBA(rgba: { r: number, g: number, b: number, a: number }): IColor {\n  let { a, b, g, r } = rgba;\n  let { h, s, v } = rgb2hsv(r, g, b);\n\n  let hex = rgb2hex(r, g, b);\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: (a === 100) ? `#${hex}` : `rgba(${r}, ${g}, ${b}, ${a / 100})`,\n    v: v\n  };\n}\n\nexport function getFullColorString(color: IColor): string {\n  return `#${hsv2hex(color.h, MAX_COLOR_SATURATION, MAX_COLOR_VALUE)}`;\n}\n\nexport function updateSV(color: IColor, s: number, v: number): IColor {\n  let { r, g, b } = hsv2rgb(color.h, s, v);\n  let hex = rgb2hex(r, g, b);\n\n  return {\n    a: color.a,\n    b: b,\n    g: g,\n    h: color.h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: (color.a === 100) ? `#${hex}` : `rgba(${r}, ${g}, ${b}, ${(color.a as number) / 100})`,\n    v: v\n  };\n}\n\nexport function updateH(color: IColor, h: number): IColor {\n  let { r, g, b } = hsv2rgb(h, color.s, color.v);\n  let hex = rgb2hex(r, g, b);\n\n  return {\n    a: color.a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: color.s,\n    str: (color.a === 100) ? `#${hex}` : `rgba(${r}, ${g}, ${b}, ${(color.a as number) / 100})`,\n    v: color.v\n  };\n}\n\nexport function updateA(color: IColor, a: number): IColor {\n  return assign({}, color, {\n    a: a,\n    str: (a === 100) ? `#${color.hex}` : `rgba(${color.r}, ${color.g}, ${color.b}, ${a / 100})`\n  });\n}\n\nfunction _numberToPaddedHex(num: number) {\n  const hex = num.toString(16);\n\n  return hex.length === 1 ? '0' + hex : hex;\n}\n\nfunction _named(str: string) {\n  const c = (COLOR_VALUES as any)[str.toLowerCase()];\n\n  if (c) {\n    return {\n      r: c[0],\n      g: c[1],\n      b: c[2],\n      a: 100\n    };\n  }\n}\n\nfunction _rgb(str: string) {\n  if (0 === str.indexOf('rgb(')) {\n    str = (str.match(/rgb\\(([^)]+)\\)/)!)[1];\n\n    const parts = str.split(/ *, */).map(Number);\n\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 100\n    };\n  }\n}\n\nfunction _rgba(str: string) {\n  if (str.indexOf('rgba(') === 0) {\n    str = (str.match(/rgba\\(([^)]+)\\)/)!)[1];\n\n    const parts = str.split(/ *, */).map(Number);\n\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3] * 100\n    };\n  }\n}\n\nfunction _hex6(str: string) {\n  if ('#' === str[0] && 7 === str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 100\n    };\n  }\n}\n\nfunction _hex3(str: string) {\n  if ('#' === str[0] && 4 === str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 100\n    };\n  }\n}\n\nfunction _hsl(str: string) {\n  if (str.indexOf('hsl(') === 0) {\n    str = (str.match(/hsl\\(([^)]+)\\)/)!)[1];\n    const parts = str.split(/ *, */);\n\n    const h = parseInt(parts[0], 10);\n    const s = parseInt(parts[1], 10);\n    const l = parseInt(parts[2], 10);\n\n    const rgba = hsl2rgb(h, s, l);\n    rgba.a = 100;\n\n    return rgba;\n  }\n}\n\nfunction _hsla(str: string) {\n  if (str.indexOf('hsla(') === 0) {\n    str = (str.match(/hsla\\(([^)]+)\\)/)!)[1];\n\n    const parts = str.split(/ *, */);\n    const h = parseInt(parts[0], 10);\n    const s = parseInt(parts[1], 10);\n    const l = parseInt(parts[2], 10);\n    const a = parseInt(parts[3], 10) * 100;\n    const rgba = hsl2rgb(h, s, l);\n\n    rgba.a = a;\n\n    return rgba;\n  }\n}"]}