{"version":3,"file":"GridCell.Props.js","sourceRoot":"../src/","sources":["utilities/grid/GridCell.Props.ts"],"names":[],"mappings":"","sourcesContent":["export interface IGridCellProps<T> {\n\n  /**\n   * The option that will be made available to the user\n   */\n  item: T;\n\n  /**\n   * Arbitrary unique string associated with this option\n   */\n  id: string;\n\n  /**\n   * Optional, if the this option should be diabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Optional, if the cell is currently selected\n   */\n  selected?: boolean;\n\n  /**\n   * The on click handler\n   */\n  onClick?: (item: T) => void;\n\n  /**\n   * The render callback to handle rendering the item\n   */\n  onRenderItem: (item: T) => JSX.Element;\n\n  /**\n   * Optional, the onHover handler\n   */\n  onHover?: (item?: T) => void;\n\n  /**\n   * Optional, the onFocus handler\n   */\n  onFocus?: (item: T) => void;\n\n  /**\n   * The accessible role for this option\n   */\n  role?: string;\n\n  /**\n   * Optional, className(s) to apply\n   */\n  className?: string;\n\n  /**\n  * Optional, the CSS class used for when the cell is disabled\n  */\n  cellDisabledStyle?: string[];\n\n  /**\n  * Optional, the CSS class used for when the cell is selected\n  */\n  cellIsSelectedStyle?: string[];\n\n  /**\n  * Index for this option\n  */\n  index?: number;\n\n  /**\n * The label for this item.\n * Visible text if this item is a header,\n * tooltip if is this item is normal\n */\n  label?: string;\n}\n"]}