{"version":3,"file":"Selection.Basic.Example.js","sourceRoot":"../src/","sources":["utilities/selection/examples/Selection.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { Check } from 'office-ui-fabric-react/lib/Check';\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\nimport {\n  IObjectWithKey,\n  ISelection,\n  Selection,\n  SelectionMode,\n  SelectionZone\n} from 'office-ui-fabric-react/lib/Selection';\nimport { createListItems } from '@uifabric/example-app-base';\n\nimport './Selection.Example.scss';\n\nconst ITEM_COUNT = 100;\n\nexport interface ISelectionBasicExampleState {\n  items: any[];\n  selection: ISelection;\n  selectionMode?: SelectionMode;\n  canSelect?: string;\n}\n\nexport interface ISelectionItemExampleProps {\n  item?: any;\n  itemIndex?: number;\n  selection?: ISelection;\n  selectionMode?: SelectionMode;\n}\n\n/**\n * The SelectionItemExample controls and displays the selection state of a single item\n */\nexport class SelectionItemExample extends React.Component<ISelectionItemExampleProps, {}> {\n  public render() {\n    let { item, itemIndex, selection, selectionMode } = this.props;\n    let isSelected = false;\n\n    if (selection && itemIndex !== undefined) {\n      isSelected = selection.isIndexSelected(itemIndex);\n    }\n\n    return (\n      <div className='ms-SelectionItemExample' data-is-focusable={ true } data-selection-index={ itemIndex }>\n        { (selection && selection.canSelectItem(item) && selection.mode !== SelectionMode.none) && (\n          <div className='ms-SelectionItemExample-check' data-is-focusable={ true } data-selection-toggle={ true } >\n            <Check checked={ isSelected } />\n          </div>\n        ) }\n        <span className='ms-SelectionItemExample-name'>\n          { item.name }\n        </span>\n      </div>\n    );\n  }\n}\n\n/**\n * The SelectionBasicExample controls the selection state of all items\n */\nexport class SelectionBasicExample extends React.Component<any, ISelectionBasicExampleState> {\n  private _hasMounted: boolean;\n\n  constructor() {\n    super();\n\n    this._hasMounted = false;\n    this._onSelectionChanged = this._onSelectionChanged.bind(this);\n    this._onSelectionModeChanged = this._onSelectionModeChanged.bind(this);\n    this._onToggleSelectAll = this._onToggleSelectAll.bind(this);\n    this._onCanSelectChanged = this._onCanSelectChanged.bind(this);\n    this._canSelectItem = this._canSelectItem.bind(this);\n\n    this.state = {\n      items: createListItems(ITEM_COUNT),\n      selection: new Selection({ onSelectionChanged: this._onSelectionChanged }),\n      selectionMode: SelectionMode.multiple,\n      canSelect: 'all'\n    };\n    this.state.selection.setItems(this.state.items as IObjectWithKey[], false);\n  }\n\n  public componentDidMount() {\n    this._hasMounted = true;\n  }\n\n  public render() {\n    let { items, selection, selectionMode } = this.state;\n\n    return (\n      <div className='ms-SelectionBasicExample'>\n        <CommandBar items={ this._getCommandItems() } />\n        <MarqueeSelection selection={ selection } isEnabled={ selection.mode === SelectionMode.multiple } >\n          <SelectionZone\n            selection={ selection }\n            onItemInvoked={ (item) => alert('item invoked: ' + item.name) }>\n            { items.map((item, index) => (\n              <SelectionItemExample\n                ref={ 'detailsGroup_' + index }\n                key={ item.key }\n                item={ item }\n                itemIndex={ index }\n                selection={ selection }\n              />\n            )) }\n          </SelectionZone>\n        </MarqueeSelection>\n      </div>\n    );\n  }\n\n  private _onSelectionChanged() {\n    if (this._hasMounted) {\n      this.forceUpdate();\n    }\n  }\n\n  private _onToggleSelectAll() {\n    let { selection } = this.state;\n    selection.toggleAllSelected();\n  }\n\n  private _onSelectionModeChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\n    this.setState((previousState: ISelectionBasicExampleState) => {\n      let newSelection = new Selection({\n        onSelectionChanged: this._onSelectionChanged,\n        canSelectItem: previousState.canSelect === 'vowels' ? this._canSelectItem : undefined,\n        selectionMode: menuItem.data\n      });\n      newSelection.setItems(previousState.items as IObjectWithKey[], false);\n\n      return {\n        selection: newSelection\n      };\n    });\n  }\n\n  private _onCanSelectChanged(ev: React.MouseEvent<HTMLElement>, menuItem: IContextualMenuItem) {\n    let canSelectItem = (menuItem.data === 'vowels') ? this._canSelectItem : undefined;\n\n    this.setState((previousState: ISelectionBasicExampleState) => {\n      let newSelection = new Selection({ onSelectionChanged: this._onSelectionChanged, canSelectItem: canSelectItem, selectionMode: previousState.selection.mode });\n      newSelection.setItems(previousState.items as IObjectWithKey[], false);\n      return {\n        selection: newSelection,\n        canSelect: (menuItem.data === 'vowels') ? 'vowels' : 'all'\n      };\n    });\n  }\n\n  private _canSelectItem(item: any): boolean {\n    return item.name && (item.name.indexOf('a') === 0 || item.name.indexOf('e') === 0 || item.name.indexOf('i') === 0 || item.name.indexOf('o') === 0 || item.name.indexOf('u') === 0);\n  }\n\n  private _getCommandItems(): IContextualMenuItem[] {\n    let { selection, canSelect } = this.state;\n\n    return [\n      {\n        key: 'selectionMode',\n        name: 'Selection Mode',\n        items: [\n          {\n            key: SelectionMode[SelectionMode.none],\n            name: 'None',\n            canCheck: true,\n            checked: selection.mode === SelectionMode.none,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.none\n\n          },\n          {\n            key: SelectionMode[SelectionMode.single],\n            name: 'Single select',\n            canCheck: true,\n            checked: selection.mode === SelectionMode.single,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.single\n          },\n          {\n            key: SelectionMode[SelectionMode.multiple],\n            name: 'Multi select',\n            canCheck: true,\n            checked: selection.mode === SelectionMode.multiple,\n            onClick: this._onSelectionModeChanged,\n            data: SelectionMode.multiple\n          },\n        ]\n      },\n      {\n        key: 'selectAll',\n        name: 'Select All',\n        icon: 'check',\n        onClick: this._onToggleSelectAll\n      },\n      {\n        key: 'allowCanSelect',\n        name: 'Choose selectable items',\n        items: [\n          {\n            key: 'all',\n            name: 'All items',\n            canCheck: true,\n            checked: canSelect === 'all',\n            onClick: this._onCanSelectChanged,\n            data: 'all'\n          },\n          {\n            key: 'a',\n            name: 'Names starting with vowels',\n            canCheck: true,\n            checked: canSelect === 'vowels',\n            onClick: this._onCanSelectChanged,\n            data: 'vowels'\n          }\n        ]\n      }\n    ];\n  }\n}\n"]}