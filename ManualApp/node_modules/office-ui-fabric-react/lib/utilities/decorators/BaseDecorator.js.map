{"version":3,"file":"BaseDecorator.js","sourceRoot":"../src/","sources":["utilities/decorators/BaseDecorator.ts"],"names":[],"mappings":";;;AACA,6CAIyB;AAEzB;IAAyC,yCAAmB;IAO1D;QAAA,YACE,iBAAO,SAER;QATS,+BAAyB,GAAG,KAAK,CAAC;QAQ1C,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IACjF,CAAC;IAED;;;;;OAKG;IACO,mDAA2B,GAArC,UAAsC,yBAAgD;QACpF,IAAI,CAAC,0BAA0B,GAAG,yBAAyB,CAAC;QAC5D,EAAE,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,wBAAY,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzB,0BAAc,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AA1BD,CAAyC,yBAAa,GA0BrD;AA1BY,sCAAa","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  hoistMethods,\n  unhoistMethods\n} from '../../Utilities';\n\nexport class BaseDecorator<P, S> extends BaseComponent<P, S> {\n  protected _shouldUpdateComponentRef = false;\n\n  protected _composedComponentInstance: React.Component<P, S>;\n\n  private _hoisted: string[];\n\n  constructor() {\n    super();\n    this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n  }\n\n  /**\n   * Updates the ref to the component composed by the decorator, which will also take care of hoisting\n   * (and unhoisting as appropriate) methods from said component.\n   *\n   * Pass this method as the argument to the 'ref' property of the composed component.\n   */\n  protected _updateComposedComponentRef(composedComponentInstance: React.Component<P, S>) {\n    this._composedComponentInstance = composedComponentInstance;\n    if (composedComponentInstance) {\n      this._hoisted = hoistMethods(this, composedComponentInstance);\n    } else if (this._hoisted) {\n      unhoistMethods(this, this._hoisted);\n    }\n  }\n}\n"]}