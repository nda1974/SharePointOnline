{"version":3,"file":"withViewport.js","sourceRoot":"../src/","sources":["utilities/decorators/withViewport.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\nimport {\n  findScrollableParent,\n  getRect\n} from '../../Utilities';\n\nexport interface IViewport {\n  width: number;\n  height: number;\n}\n\nexport interface IWithViewportState {\n  viewport?: IViewport;\n}\n\nexport interface IWithViewportProps {\n  skipViewportMeasures?: boolean;\n}\n\nconst RESIZE_DELAY = 500;\nconst MAX_RESIZE_ATTEMPTS = 3;\n\nexport function withViewport<P extends { viewport?: IViewport }, S>(ComposedComponent: (new (props: P, ...args: any[]) => React.Component<P, S>)): any {\n\n  return class WithViewportComponent extends BaseDecorator<P, IWithViewportState> {\n    public refs: {\n      [key: string]: React.ReactInstance;\n    };\n\n    private _resizeAttempts: number;\n\n    constructor() {\n      super();\n      this._resizeAttempts = 0;\n\n      this.state = {\n        viewport: {\n          width: 0,\n          height: 0\n        }\n      };\n    }\n\n    public componentDidMount() {\n      this._onAsyncResize = this._async.debounce(\n        this._onAsyncResize,\n        RESIZE_DELAY,\n        {\n          leading: false\n        });\n\n      this._events.on(window, 'resize', this._onAsyncResize);\n      const {\n        skipViewportMeasures\n      } = this.props as IWithViewportProps;\n      if (!skipViewportMeasures) {\n        this._updateViewport();\n      }\n    }\n\n    public componentWillUnmount() {\n      this._events.dispose();\n    }\n\n    public render() {\n      let { viewport } = this.state;\n      const {\n        skipViewportMeasures\n      } = this.props as IWithViewportProps;\n      let isViewportVisible = skipViewportMeasures || (viewport!.width > 0 && viewport!.height > 0);\n\n      return (\n        <div className='ms-Viewport' ref='root' style={ { minWidth: 1, minHeight: 1 } }>\n          { isViewportVisible && (\n            <ComposedComponent ref={ this._updateComposedComponentRef } viewport={ viewport } { ...this.props as any } />\n          ) }\n        </div>\n      );\n    }\n\n    public forceUpdate() {\n      this._updateViewport(true);\n    }\n\n    private _onAsyncResize() {\n      this._updateViewport();\n    }\n\n    /* Note: using lambda here because decorators don't seem to work in decorators. */\n    private _updateViewport = (withForceUpdate?: boolean) => {\n      let { viewport } = this.state;\n      let viewportElement = (this.refs as any).root;\n      let scrollElement = findScrollableParent(viewportElement);\n      let scrollRect = getRect(scrollElement);\n      let clientRect = getRect(viewportElement);\n      let updateComponent = () => {\n        if (withForceUpdate && this._composedComponentInstance) {\n          this._composedComponentInstance.forceUpdate();\n        }\n      };\n\n      let isSizeChanged = (\n        (clientRect && clientRect.width) !== viewport!.width ||\n        (scrollRect && scrollRect.height) !== viewport!.height);\n\n      if (isSizeChanged && this._resizeAttempts < MAX_RESIZE_ATTEMPTS && clientRect && scrollRect) {\n        this._resizeAttempts++;\n        this.setState({\n          viewport: {\n            width: clientRect.width,\n            height: scrollRect.height\n          }\n        }, () => { this._updateViewport(withForceUpdate); });\n      } else {\n        this._resizeAttempts = 0;\n        updateComponent();\n      }\n    }\n  };\n}\n"]}