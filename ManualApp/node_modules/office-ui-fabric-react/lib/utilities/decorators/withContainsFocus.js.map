{"version":3,"file":"withContainsFocus.js","sourceRoot":"../src/","sources":["utilities/decorators/withContainsFocus.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,iDAAgD;AAEhD,2BAA4E,iBAA8E;IAExJ,MAAM;QAA0C,sDAA2E;QAQzH;YAAA,YACE,iBAAO,SAUR;YARC,KAAI,CAAC,KAAK,GAAG;gBACX,aAAa,EAAE,KAAK;aACrB,CAAC;YAEF,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC;YACjF,KAAI,CAAC,2BAA2B,GAAG,KAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YAC/E,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;YACjD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;QACjD,CAAC;QAEM,yDAAoB,GAA3B;YACE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;QAEM,2CAAM,GAAb;YACQ,IAAA,wCAAa,CAAgB;YAEnC,MAAM,CAAC,CACL,6BAAK,GAAG,EAAC,MAAM,EAAC,OAAO,EAAG,IAAI,CAAC,YAAY,EAAG,MAAM,EAAG,IAAI,CAAC,WAAW;gBACrE,oBAAC,iBAAiB,qBAChB,GAAG,EAAG,IAAI,CAAC,2BAA2B,EACtC,aAAa,EAAG,aAAa,IACxB,IAAI,CAAC,KAAY,EACtB,CACE,CACP,CAAC;QACJ,CAAC;QAEM,gDAAW,GAAlB;YACE,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,CAAC;QAChD,CAAC;QAEO,iDAAY,GAApB,UAAqB,EAAoC;YACvD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC;QAEO,gDAAW,GAAnB,UAAoB,EAAoC;YACtD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAClC,CAAC;QAEO,sDAAiB,GAAzB;YACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACxD,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC;QACH,iCAAC;IAAD,CAAC,AA1DM,CAAyC,6BAAa,GA0D3D;AACJ,CAAC;AA7DD,8CA6DC","sourcesContent":["import * as React from 'react';\nimport { BaseDecorator } from './BaseDecorator';\n\nexport function withContainsFocus<P extends { containsFocus?: boolean }, S>(ComposedComponent: (new (props: P, ...args: any[]) => (React.Component<P, S>))): any {\n\n  return class WithContainsFocusComponent extends BaseDecorator<P & { containsFocus?: boolean }, { containsFocus?: boolean }> {\n    public refs: {\n      [key: string]: React.ReactInstance,\n    };\n\n    private _newContainsFocus: boolean;\n    private _delayedSetContainsFocus: () => void;\n\n    constructor() {\n      super();\n\n      this.state = {\n        containsFocus: false\n      };\n\n      this._delayedSetContainsFocus = this._async.debounce(this._setContainsFocus, 20);\n      this._updateComposedComponentRef = this._updateComposedComponentRef.bind(this);\n      this._handleFocus = this._handleFocus.bind(this);\n      this._handleBlur = this._handleBlur.bind(this);\n    }\n\n    public componentWillUnmount() {\n      this._async.dispose();\n    }\n\n    public render() {\n      let { containsFocus } = this.state;\n\n      return (\n        <div ref='root' onFocus={ this._handleFocus } onBlur={ this._handleBlur }>\n          <ComposedComponent\n            ref={ this._updateComposedComponentRef }\n            containsFocus={ containsFocus }\n            { ...this.props as any }\n          />\n        </div>\n      );\n    }\n\n    public forceUpdate() {\n      this._composedComponentInstance.forceUpdate();\n    }\n\n    private _handleFocus(ev: React.FocusEvent<HTMLDivElement>) {\n      this._newContainsFocus = true;\n      this._delayedSetContainsFocus();\n    }\n\n    private _handleBlur(ev: React.FocusEvent<HTMLDivElement>) {\n      this._newContainsFocus = false;\n      this._delayedSetContainsFocus();\n    }\n\n    private _setContainsFocus() {\n      if (this.state.containsFocus !== this._newContainsFocus) {\n        this.setState({ containsFocus: this._newContainsFocus });\n      }\n    }\n  };\n}\n"]}