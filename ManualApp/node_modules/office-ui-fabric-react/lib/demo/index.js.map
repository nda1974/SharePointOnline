{"version":3,"file":"index.js","sourceRoot":"../src/","sources":["demo/index.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport * as ReactDOM from 'react-dom';\nimport { App, AppDefinition } from './AppDefinition';\nimport { Router, Route } from 'office-ui-fabric-react/lib/utilities/router/index';\nimport { GettingStartedPage } from './GettingStartedPage';\nimport { setBaseUrl } from 'office-ui-fabric-react/lib/Utilities';\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n\nimport './index.scss';\nimport './ColorStyles.scss';\n\nsetBaseUrl('./dist/');\n\nlet rootElement: HTMLElement | null;\n\n// Return the anchor link from the URL without the hash\nfunction _extractAnchorLink(path: string) {\n  let index = path.lastIndexOf('#');\n  if (index >= 0) {\n    path = path.substr(index + 1, path.length - index);\n  }\n  return path;\n}\n\nfunction _scrollAnchorLink() {\n  if ((window.location.hash.match(/#/g) || []).length > 1) {\n    let anchor = _extractAnchorLink(window.location.hash);\n    document.getElementById(anchor)!.scrollIntoView();\n  }\n}\n\nfunction _onLoad() {\n  rootElement = rootElement || document.getElementById('content');\n\n  ReactDOM.render(\n    <Fabric>\n      <Router onNewRouteLoaded={ _scrollAnchorLink }>\n        { _getRoutes() }\n      </Router>\n    </Fabric>,\n    rootElement);\n}\n\nfunction _getRoutes() {\n  let routes = AppDefinition.testPages.map(page => <Route key={ page.key } path={ page.url } component={ page.component } />);\n  let appRoutes: JSX.Element[] = [];\n\n  AppDefinition.examplePages.forEach(group => {\n    group.links\n      .filter(link => link.hasOwnProperty('component') || link.hasOwnProperty('getComponent'))\n      .forEach((link, linkIndex) => {\n        const { component, getComponent } = link;\n\n        appRoutes.push(\n          <Route\n            key={ link.key }\n            path={ link.url }\n            component={ component }\n            getComponent={ getComponent }\n          />);\n      });\n  });\n\n  // Default route.\n  appRoutes.push(\n    <Route key='gettingstarted' component={ GettingStartedPage } />\n  );\n\n  routes.push(\n    <Route key='app' component={ App }>\n      { appRoutes }\n    </Route>\n  );\n\n  return routes;\n}\n\nfunction _onUnload() {\n  if (rootElement) {\n    ReactDOM.unmountComponentAtNode(rootElement);\n  }\n}\n\nlet isReady = document.readyState === 'interactive' || document.readyState === 'complete';\n\nif (isReady) {\n  _onLoad();\n} else {\n  window.onload = _onLoad;\n}\n\nwindow.onunload = _onUnload;\n"]}