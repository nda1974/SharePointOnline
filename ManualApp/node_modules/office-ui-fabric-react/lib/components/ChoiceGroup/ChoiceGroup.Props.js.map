{"version":3,"file":"ChoiceGroup.Props.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/ChoiceGroup.Props.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { IIconProps } from '../../Icon';\nimport { IRenderFunction } from '../../Utilities';\n\nexport interface IChoiceGroup {\n\n}\n\nexport interface IChoiceGroupProps extends React.InputHTMLAttributes<HTMLElement | HTMLInputElement> {\n  /**\n   * Optional callback to access the IChoiceGroup interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IChoiceGroup) => void;\n\n  /**\n   * The options for the choice group.\n   */\n  options?: IChoiceGroupOption[];\n\n  /**\n   * The key of the option that will be initially checked.\n   */\n  defaultSelectedKey?: string | number;\n\n  /**\n   * The key of the selected option. If you provide this, you must maintain selection\n   * state by observing onChange events and passing a new value in when changed.\n   */\n  selectedKey?: string | number;\n\n  /**\n   * A callback for receiving a notification when the choice has been changed.\n   */\n  onChange?: (ev?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOption) => void;\n\n  /**\n   * Descriptive label for the choice group.\n   */\n  label?: string;\n\n  /**\n   * Deprecated and will be removed by 07/17/2017 Use 'onChange' instead.\n   * @deprecated\n   */\n  onChanged?: (option: IChoiceGroupOption, evt?: React.FormEvent<HTMLElement | HTMLInputElement>) => void;\n}\n\nexport interface IChoiceGroupOption extends React.HTMLAttributes<HTMLElement | HTMLInputElement> {\n  /**\n   * A required key to uniquely identify the option.\n   */\n  key: string;\n\n  /**\n   * The text string for the option.\n   */\n  text: string;\n\n  /**\n   * Optional override of option render\n   */\n  onRenderField?: IRenderFunction<IChoiceGroupOption>;\n\n  /**\n   * Optional override of option render\n   */\n  onRenderLabel?: (option: IChoiceGroupOption) => JSX.Element;\n\n  /**\n   * The Icon component props for choice field\n   */\n  iconProps?: IIconProps;\n\n  /**\n   * The src of image for choice field.\n   */\n  imageSrc?: string;\n\n  /**\n   * The src of image for choice field which is selected.\n   */\n  selectedImageSrc?: string;\n\n  /**\n   * The width and height of the image in px for choice field.\n   */\n  imageSize?: { width: number, height: number };\n\n  /**\n   * Whether or not the option is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * This value is maintained by the component and is accessible during onRenderField\n   */\n  checked?: boolean;\n\n  /**\n   * This value is maintained by the component and is accessible during onRenderField\n   */\n  id?: string;\n\n  /**\n   * This value is maintained by the component and is accessible during onRenderField\n   */\n  labelId?: string;\n}\n"]}