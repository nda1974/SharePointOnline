{"version":3,"file":"ContextualMenu.Checkmarks.Example.js","sourceRoot":"../src/","sources":["components/ContextualMenu/examples/ContextualMenu.Checkmarks.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ContextualMenu, IContextualMenuItem, DirectionalHint, ContextualMenuItemType } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport './ContextualMenuExample.scss';\n\nexport interface IContextualMenuMultiselectExampleState {\n  selection?: { [key: string]: boolean };\n  isContextMenuVisible?: boolean;\n}\n\nlet keys: string[] = ['newItem', 'share', 'mobile', 'enablePrint', 'enableMusic', 'newSub', 'emailMessage', 'calendarEvent'];\n\nexport class ContextualMenuCheckmarksExample extends React.Component<any, IContextualMenuMultiselectExampleState> {\n\n  constructor() {\n    super();\n\n    this._onToggleSelect = this._onToggleSelect.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onDismiss = this._onDismiss.bind(this);\n\n    this.state = {\n      selection: {},\n      isContextMenuVisible: false\n    };\n  }\n\n  public render() {\n    let { selection } = this.state;\n\n    return (\n      <div>\n        <DefaultButton\n          onClick={ this._onClick } id='ContextualMenuButton2'\n          text='Click for ContextualMenu'\n        />\n        { this.state.isContextMenuVisible ? (\n          <ContextualMenu\n            target='#ContextualMenuButton2'\n            shouldFocusOnMount={ false }\n            onDismiss={ this._onDismiss }\n            directionalHint={ DirectionalHint.bottomLeftEdge }\n            items={\n              [\n                {\n                  key: keys[0],\n                  name: 'New',\n                  canCheck: true,\n                  isChecked: selection![keys[0]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[1],\n                  name: 'Share',\n                  canCheck: true,\n                  isChecked: selection![keys[1]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[2],\n                  name: 'Mobile',\n                  canCheck: true,\n                  isChecked: selection![keys[2]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: 'divider_1',\n                  itemType: ContextualMenuItemType.Divider\n                },\n\n                {\n                  key: keys[3],\n                  name: 'Print',\n                  canCheck: true,\n                  isChecked: selection![keys[3]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[4],\n                  name: 'Music',\n                  canCheck: true,\n                  isChecked: selection![keys[4]],\n                  onClick: this._onToggleSelect\n                },\n                {\n                  key: keys[5],\n                  subMenuProps: {\n                    items: [\n                      {\n                        key: keys[6],\n                        name: 'Email message',\n                        canCheck: true,\n                        isChecked: selection![keys[6]],\n                        onClick: this._onToggleSelect\n                      },\n                      {\n                        key: keys[7],\n                        name: 'Calendar event',\n                        canCheck: true,\n                        isChecked: selection![keys[7]],\n                        onClick: this._onToggleSelect\n                      }\n                    ],\n                  },\n                  name: 'New'\n                },\n              ]\n            }\n          />) : (null) }\n      </div>\n    );\n  }\n\n  private _onToggleSelect(ev?: React.MouseEvent<HTMLButtonElement>, item?: IContextualMenuItem) {\n    let { selection } = this.state;\n\n    selection![item!.key] = !selection![item!.key];\n\n    this.setState({\n      selection: selection\n    });\n  }\n\n  private _onClick(event: React.MouseEvent<HTMLButtonElement>) {\n    this.setState({ isContextMenuVisible: true });\n  }\n\n  private _onDismiss() {\n    this.setState({ isContextMenuVisible: false });\n  }\n\n}\n"]}