{"version":3,"file":"SwatchColorPicker.Props.js","sourceRoot":"../src/","sources":["components/SwatchColorPicker/SwatchColorPicker.Props.ts"],"names":[],"mappings":"","sourcesContent":["export interface ISwatchColorPicker { }\n\nexport interface ISwatchColorPickerProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: (componentRef?: ISwatchColorPicker) => void;\n\n  /**\n   * the number of columns for the swatch color picker\n   */\n  columnCount: number;\n\n  /**\n   * The id for the swatch color picker\n   */\n  id?: string;\n\n  /**\n   * Additional class name to provide on the root element\n   */\n  className?: string;\n\n  /**\n   * The shape of the color cells, defaults to circle\n   */\n  cellShape?: 'circle' | 'square';\n\n  /**\n   * The id of color cell that is currently selected\n   */\n  selectedId?: string;\n\n  /**\n   * The color cells that will be made available to the user\n   */\n  colorCells: IColorCellProps[];\n\n  /**\n   * Callback issued when the user changes the color.\n   * Note, if no id or color is given, there is no selected cell\n   * (e.g. the user executed the currently selected cell to unselect it)\n   */\n  onColorChanged?: (id?: string, color?: string) => void;\n\n  /**\n   * Callback issued when the user hovers over a color cell.\n   * Note, if no id or color is given, cells are not longer being hovered\n   */\n  onCellHovered?: (id?: string, color?: string) => void;\n\n  /**\n   * Callback issued when the user focuses a color cell.\n   * Note, if no id or color is given, cells are not longer being focused\n   */\n  onCellFocused?: (id?: string, color?: string) => void;\n\n  /**\n   * Is this swatch color picker disabled?\n   */\n  disabled?: boolean;\n\n  /**\n   * The optional position this grid is in the parent set (index in a parent menu, for example)\n   */\n  positionInSet?: number;\n\n  /**\n   * The optional size of the parent set (size of parent menu, for example)\n   */\n  setSize?: number;\n\n  /**\n   * Should focus cycle to the beginning of once the user navigates past the end (and visa vsersa). Defaults to true\n   */\n  shouldFocusCircularNavigate?: boolean;\n}\n\nexport interface IColorCellProps {\n\n  /**\n   * Arbitrary unique string associated with this option\n   */\n  id: string;\n\n  /**\n   * The label for this item.\n   * Visible text if this item is a header,\n   * tooltip if is this item is normal\n   */\n  label?: string;\n\n  /**\n   * The CSS-compatible string to describe the color\n   */\n  color?: string;\n\n  /**\n   * Index for this option\n   */\n  index?: number;\n\n}"]}