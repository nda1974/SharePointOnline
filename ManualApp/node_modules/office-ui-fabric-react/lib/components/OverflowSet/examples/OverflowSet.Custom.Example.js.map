{"version":3,"file":"OverflowSet.Custom.Example.js","sourceRoot":"../src/","sources":["components/OverflowSet/examples/OverflowSet.Custom.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport { BaseComponent, css } from 'office-ui-fabric-react/lib/Utilities';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport {\n  OverflowSet\n} from 'office-ui-fabric-react/lib/OverflowSet';\n\nimport * as stylesImport from './OverflowSet.Example.scss';\nconst styles: any = stylesImport;\n\nexport class OverflowSetCustomExample extends BaseComponent<any, any> {\n\n  public render() {\n    return (\n      <OverflowSet\n        items={ [\n          {\n            key: 'search',\n            onRender: (item: any) => {\n              return (\n                <SearchBox\n                  labelText='Search'\n                />\n              );\n            }\n          },\n          {\n            key: 'newItem',\n            name: 'New',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: () => { return; },\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail',\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ],\n            },\n          },\n          {\n            key: 'upload',\n            name: 'Upload',\n            icon: 'Upload',\n            onClick: () => { return; },\n          },\n          {\n            key: 'share',\n            name: 'Share',\n            icon: 'Share',\n            onClick: () => { return; }\n          }\n        ] }\n        overflowItems={ [\n          {\n            key: 'newItem',\n            name: 'Add',\n            icon: 'Add',\n            ariaLabel: 'New. Use left and right arrow keys to navigate',\n            onClick: () => { return; },\n            subMenuProps: {\n              items: [\n                {\n                  key: 'emailMessage',\n                  name: 'Email message',\n                  icon: 'Mail',\n                },\n                {\n                  key: 'calendarEvent',\n                  name: 'Calendar event',\n                  icon: 'Calendar'\n                }\n              ],\n            },\n          },\n          {\n            key: 'move',\n            name: 'Move to...',\n            icon: 'MoveToFolder',\n            onClick: () => { return; }\n          },\n          {\n            key: 'copy',\n            name: 'Copy to...',\n            icon: 'Copy',\n            onClick: () => { return; }\n          },\n          {\n            key: 'rename',\n            name: 'Rename...',\n            icon: 'Edit',\n            onClick: () => { return; }\n          },\n          {\n            key: 'disabled',\n            name: 'Disabled...',\n            icon: 'Cancel',\n            disabled: true,\n            onClick: () => { return; }\n          }\n        ]\n        }\n        onRenderOverflowButton={ (overflowItems) => {\n          return (\n            <DefaultButton\n              className={ css(styles.overflowButton) }\n              iconProps={ { iconName: 'More' } }\n              menuIconProps={ undefined }\n              menuProps={ { items: overflowItems! } }\n            />\n          );\n        } }\n        onRenderItem={ (item) => {\n          if (item.onRender) {\n            return (\n              item.onRender(item)\n            );\n          }\n          return (\n            <DefaultButton\n              iconProps={ { iconName: item.icon } }\n              menuProps={ item.subMenuProps }\n              text={ item.name }\n            >  </DefaultButton>\n          );\n        } }\n      />\n    );\n  }\n}"]}