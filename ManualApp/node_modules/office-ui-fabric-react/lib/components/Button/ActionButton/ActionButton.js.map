{"version":3,"file":"ActionButton.js","sourceRoot":"../src/","sources":["components/Button/ActionButton/ActionButton.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4CAA2C;AAC3C,gDAA6E;AAE7E,6DAAkD;AAGlD;IAAkC,wCAA+B;IADjE;QAAA,qEAoBC;QAjBC;;WAEG;QACO,+BAAyB,GAAG,KAAK,CAAC;;IAc9C,CAAC;IAZQ,6BAAM,GAAb;QACM,IAAA,eAA8B,EAA5B,kBAAM,EAAE,gBAAK,CAAgB;QAEnC,MAAM,CAAC,CACL,oBAAC,uBAAU,uBACJ,IAAI,CAAC,KAAK,IACf,gBAAgB,EAAC,sCAAsC,EACvD,MAAM,EAAG,+BAAS,CAAC,KAAM,EAAE,MAAM,CAAC,EAClC,mBAAmB,EAAG,sBAAU,IAChC,CACH,CAAC;IACJ,CAAC;IAlBU,YAAY;QADxB,wBAAY,CAAC,CAAC,OAAO,CAAC,CAAC;OACX,YAAY,CAmBxB;IAAD,mBAAC;CAAA,AAnBD,CAAkC,yBAAa,GAmB9C;AAnBY,oCAAY","sourcesContent":["import * as React from 'react';\nimport { BaseButton } from '../BaseButton';\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\nimport { IButtonProps } from '../Button.Props';\nimport { getStyles } from './ActionButton.styles';\n\n@customizable(['theme'])\nexport class ActionButton extends BaseComponent<IButtonProps, {}> {\n\n  /**\n   * Tell BaseComponent to bypass resolution of componentRef.\n   */\n  protected _shouldUpdateComponentRef = false;\n\n  public render() {\n    let { styles, theme } = this.props;\n\n    return (\n      <BaseButton\n        { ...this.props }\n        variantClassName='ms-Button--action ms-Button--command'\n        styles={ getStyles(theme!, styles) }\n        onRenderDescription={ nullRender }\n      />\n    );\n  }\n}"]}