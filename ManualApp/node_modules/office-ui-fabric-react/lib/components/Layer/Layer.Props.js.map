{"version":3,"file":"Layer.Props.js","sourceRoot":"../src/","sources":["components/Layer/Layer.Props.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { Layer } from './Layer';\n\nexport interface ILayer {\n\n}\n\nexport interface ILayerProps extends React.HTMLAttributes<HTMLDivElement | Layer> {\n  /**\n   * Optional callback to access the ILayer interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: ILayer) => void;\n\n  /** Callback for when the layer is mounted. */\n  onLayerMounted?: () => void;\n\n  /**\n   * Callback for when the layer is mounted.\n   */\n  onLayerDidMount?: () => void;\n\n  /**\n   * Callback for when the layer is unmounted.\n   */\n  onLayerWillUnmount?: () => void;\n\n  /**\n   * The optional id property provided on a LayerHost that this Layer should render within. The LayerHost does\n   * not need to be immediately available but once has been rendered, and if missing, we'll avoid trying\n   * to render the Layer content until the host is available. If an id is not provided, we will render the Layer\n   * content in a fixed position element rendered at the end of the document.\n   */\n  hostId?: string;\n}\n"]}