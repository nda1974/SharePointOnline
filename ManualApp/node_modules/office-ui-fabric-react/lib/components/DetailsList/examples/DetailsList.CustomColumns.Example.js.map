{"version":3,"file":"DetailsList.CustomColumns.Example.js","sourceRoot":"../src/","sources":["components/DetailsList/examples/DetailsList.CustomColumns.Example.tsx"],"names":[],"mappings":";;;AAAA,uCAAuC;AACvC,6BAA+B;AAC/B,sCAAsC;AACtC,+DAA6D;AAC7D,gDAA8C;AAC9C,wDAAuD;AACvD,0DAAmE;AACnE,sEAIgD;AAEhD,IAAI,MAAa,CAAC;AAOlB;IAAqD,2DAA0D;IAE7G,yCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAQb;QANC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,GAAG,CAAC,CAAC;QAExC,KAAI,CAAC,KAAK,GAAG;YACX,WAAW,EAAE,MAAM;YACnB,OAAO,EAAE,aAAa,EAAE;SACzB,CAAC;;IACJ,CAAC;IAEM,gDAAM,GAAb;QACM,IAAA,eAAqC,EAAnC,4BAAW,EAAE,oBAAO,CAAgB;QAE1C,MAAM,CAAC,CACL,oBAAC,yBAAW,IACV,KAAK,EAAG,WAAoB,EAC5B,MAAM,EAAC,KAAK,EACZ,OAAO,EAAG,OAAO,EACjB,kBAAkB,EAAG,iBAAiB,EACtC,mBAAmB,EAAG,IAAI,CAAC,cAAc,EACzC,aAAa,EAAG,UAAC,IAAI,EAAE,KAAK,IAAK,OAAA,KAAK,CAAC,UAAQ,IAAI,CAAC,IAAI,kBAAa,KAAK,uBAAoB,CAAC,EAA9D,CAA8D,EAC/F,yBAAyB,EAAG,UAAC,MAAM,EAAE,EAAE,IAAK,OAAA,OAAO,CAAC,GAAG,CAAC,YAAU,MAAO,CAAC,GAAG,yBAAsB,CAAC,EAAxD,CAAwD,GAAK,CAC5G,CAAC;IACJ,CAAC;IAGO,wDAAc,GAAtB,UAAuB,KAAoC,EAAE,MAAe;QACtE,IAAA,eAAqC,EAAnC,4BAAW,EAAE,oBAAO,CAAgB;QAC1C,IAAI,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;QAEnD,wCAAwC;QACxC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpB,kBAAkB,GAAG,CAAC,kBAAkB,CAAC;QAC3C,CAAC;QAED,kBAAkB;QAClB,WAAW,GAAG,WAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;YAC9C,IAAI,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAEtC,EAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,UAAU,GAAG,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAC3C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,UAAU,GAAG,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,kDAAkD;QAClD,IAAI,CAAC,QAAQ,CAAC;YACZ,WAAW,EAAE,WAAW;YACxB,OAAO,EAAE,OAAQ,CAAC,GAAG,CAAC,UAAA,GAAG;gBACvB,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC;gBAExC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACjB,GAAG,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;gBAC9C,CAAC;gBAED,MAAM,CAAC,GAAG,CAAC;YACb,CAAC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAlCD;QADC,oBAAQ;yEAmCR;IACH,sCAAC;CAAA,AAhED,CAAqD,KAAK,CAAC,SAAS,GAgEnE;AAhEY,0EAA+B;AAkE5C;IACE,IAAI,OAAO,GAAG,0BAAY,CAAC,MAAM,CAAC,CAAC;IAEnC,IAAI,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,WAAW,EAA3B,CAA2B,CAAC,CAAC,CAAC,CAAC,CAAC;IAE/E,wCAAwC;IACxC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC;IAC1B,eAAe,CAAC,QAAQ,GAAG,EAAE,CAAC;IAE9B,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC;AAED,2BAA2B,IAAS,EAAE,KAAa,EAAE,MAAe;IAClE,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAE1C,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;QACnB,KAAK,WAAW;YACd,MAAM,CAAC,oBAAC,aAAK,IAAC,GAAG,EAAG,YAAY,EAAG,KAAK,EAAG,EAAE,EAAG,MAAM,EAAG,EAAE,EAAG,QAAQ,EAAG,gBAAQ,CAAC,KAAK,GAAK,CAAC;QAE/F,KAAK,MAAM;YACT,MAAM,CAAC,oBAAC,WAAI,IAAC,IAAI,EAAC,GAAG,IAAG,YAAY,CAAS,CAAC;QAEhD,KAAK,OAAO;YACV,MAAM,CAAC,yDAAgC,IAAI,EAAG,KAAK,EAAG,EAAE,KAAK,EAAE,YAAY,EAAE,IAAK,YAAY,CAAS,CAAC;QAE1G;YACE,MAAM,CAAC,kCAAQ,YAAY,CAAS,CAAC;IACzC,CAAC;AACH,CAAC","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\nimport { createListItems } from '@uifabric/example-app-base';\nimport { autobind } from '../../../Utilities';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport {\n  DetailsList,\n  buildColumns,\n  IColumn\n} from 'office-ui-fabric-react/lib/DetailsList';\n\nlet _items: any[];\n\nexport interface IDetailsListCustomColumnsExampleState {\n  sortedItems?: any[];\n  columns?: IColumn[];\n}\n\nexport class DetailsListCustomColumnsExample extends React.Component<{}, IDetailsListCustomColumnsExampleState> {\n\n  constructor(props: {}) {\n    super(props);\n\n    _items = _items || createListItems(500);\n\n    this.state = {\n      sortedItems: _items,\n      columns: _buildColumns()\n    };\n  }\n\n  public render() {\n    let { sortedItems, columns } = this.state;\n\n    return (\n      <DetailsList\n        items={ sortedItems as any[] }\n        setKey='set'\n        columns={ columns }\n        onRenderItemColumn={ _renderItemColumn }\n        onColumnHeaderClick={ this._onColumnClick }\n        onItemInvoked={ (item, index) => alert(`Item ${item.name} at index ${index} has been invoked.`) }\n        onColumnHeaderContextMenu={ (column, ev) => console.log(`column ${column!.key} contextmenu opened.`) } />\n    );\n  }\n\n  @autobind\n  private _onColumnClick(event: React.MouseEvent<HTMLElement>, column: IColumn) {\n    let { sortedItems, columns } = this.state;\n    let isSortedDescending = column.isSortedDescending;\n\n    // If we've sorted this column, flip it.\n    if (column.isSorted) {\n      isSortedDescending = !isSortedDescending;\n    }\n\n    // Sort the items.\n    sortedItems = sortedItems!.concat([]).sort((a, b) => {\n      let firstValue = a[column.fieldName];\n      let secondValue = b[column.fieldName];\n\n      if (isSortedDescending) {\n        return firstValue > secondValue ? -1 : 1;\n      } else {\n        return firstValue > secondValue ? 1 : -1;\n      }\n    });\n\n    // Reset the items and columns to match the state.\n    this.setState({\n      sortedItems: sortedItems,\n      columns: columns!.map(col => {\n        col.isSorted = (col.key === column.key);\n\n        if (col.isSorted) {\n          col.isSortedDescending = isSortedDescending;\n        }\n\n        return col;\n      })\n    });\n  }\n}\n\nfunction _buildColumns() {\n  let columns = buildColumns(_items);\n\n  let thumbnailColumn = columns.filter(column => column.name === 'thumbnail')[0];\n\n  // Special case one column's definition.\n  thumbnailColumn.name = '';\n  thumbnailColumn.maxWidth = 50;\n\n  return columns;\n}\n\nfunction _renderItemColumn(item: any, index: number, column: IColumn) {\n  let fieldContent = item[column.fieldName];\n\n  switch (column.key) {\n    case 'thumbnail':\n      return <Image src={ fieldContent } width={ 50 } height={ 50 } imageFit={ ImageFit.cover } />;\n\n    case 'name':\n      return <Link href='#'>{ fieldContent }</Link>;\n\n    case 'color':\n      return <span data-selection-disabled={ true } style={ { color: fieldContent } }>{ fieldContent }</span>;\n\n    default:\n      return <span>{ fieldContent }</span>;\n  }\n}\n"]}