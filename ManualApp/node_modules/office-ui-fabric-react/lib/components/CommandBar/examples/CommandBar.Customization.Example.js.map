{"version":3,"file":"CommandBar.Customization.Example.js","sourceRoot":"../src/","sources":["components/CommandBar/examples/CommandBar.Customization.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,oEAAmE;AACnE,kEAAsE;AACtE,kDAAqD;AAOrD;IAAoD,0DAA8C;IAGhG,wCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAEb;QADC,KAAI,CAAC,KAAK,GAAG,EAAE,kBAAkB,EAAE,KAAK,EAAE,CAAC;;IAC7C,CAAC;IAEM,+CAAM,GAAb;QACE,MAAM,CAAC,CACL;YACE,oBAAC,uBAAU,IACT,kBAAkB,EAAG,KAAK,EAC1B,KAAK,EACH;oBACE;wBACE,GAAG,EAAE,KAAK;wBACV,IAAI,EAAE,KAAK;wBACX,QAAQ,EAAE,IAAI,CAAC,0BAA0B;wBACzC,SAAS,EAAE,mBAAmB;wBAC9B,YAAY,EAAE;4BACZ,KAAK,EAAE;;wCAEH,GAAG,EAAE,cAAc;wCACnB,IAAI,EAAE,eAAe;wCACrB,IAAI,EAAE,MAAM;;oCACZ,GAAC,oBAAoB,IAAG,gBAAgB;;;wCAGxC,GAAG,EAAE,eAAe;wCACpB,IAAI,EAAE,gBAAgB;wCACtB,IAAI,EAAE,UAAU;;oCAChB,GAAC,oBAAoB,IAAG,mBAAmB;;6BAE9C;yBACF;qBACF;iBACF,GAEH,CACE,CACP,CAAC;;IACJ,CAAC;IAGO,mEAA0B,GAAlC,UAAmC,IAAyB;QAD5D,iBAmCC;QAjCC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,MAAM,CAAC,QAAQ,CAAC;QAEhE,IAAI,mBAAmB,GAAG,eAAG,CAC3B,MAAM,CAAC,MAAM,EACb,QAAQ,CACT,CAAC;QACF,IAAI,gBAAgB,GAAG,eAAG,CACxB,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,2BAA2B,CAAC,EAC3C,MAAM,CAAC,MAAM,EACb,QAAQ,CACT,CAAC;QAEF,MAAM,CAAC,CACL;YACE,6BAAK,SAAS,EAAG,eAAG,CAClB,MAAM,CAAC,qBAAqB,EAC5B,QAAQ,CACT,EAAG,GAAG,EAAG,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,SAAS,GAAG,GAAI,EAArB,CAAqB;gBACpC,oBAAC,sBAAa,IACZ,SAAS,EAAG,gBAAgB,EAC5B,SAAS,EAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC/B,IAAI,EAAC,KAAK,GAAG;gBACf,8BAAM,SAAS,EAAG,MAAM,CAAC,QAAQ,QAAW;gBAC5C,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,CAAC,eAAe,EAC9B,SAAS,EAAG,mBAAmB,EAC/B,SAAS,EAAG;wBACV,SAAS,EAAE,eAAG,CAAC,wBAAwB,CAAC;wBACxC,KAAK,EAAE,IAAI,CAAC,YAAa,CAAC,KAAK;qBAChC,GAAK,CACJ,CACD,CACR,CAAC;IACJ,CAAC;IAGO,wDAAe,GAAvB,UAAwB,EAAO;QAC7B,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAGO,iEAAwB,GAAhC,UAAiC,EAAO;QACtC,IAAI,CAAC,QAAQ,CAAC;YACZ,kBAAkB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB;SACnD,CAAC,CAAC;IACL,CAAC;IA/CD;QADC,oBAAQ;oFAmCR;IAGD;QADC,oBAAQ;yEAIR;IAGD;QADC,oBAAQ;kFAKR;IACH,qCAAC;CAAA,AA7FD,CAAoD,KAAK,CAAC,SAAS,GA6FlE;AA7FY,wEAA8B","sourcesContent":["import * as React from 'react';\nimport { CommandButton } from 'office-ui-fabric-react/lib/Button';\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\nimport { css, autobind, } from 'office-ui-fabric-react/lib/Utilities';\nimport styles = require('./CommandBar.Example.scss');\nimport { IContextualMenuItem } from '../../ContextualMenu';\n\nexport interface ISplitDropDownButtonState {\n  isContextMenuShown: boolean;\n}\n\nexport class CommandBarCustomizationExample extends React.Component<{}, ISplitDropDownButtonState> {\n  private container: HTMLElement;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = { isContextMenuShown: false };\n  }\n\n  public render() {\n    return (\n      <div>\n        <CommandBar\n          isSearchBoxVisible={ false }\n          items={\n            [\n              {\n                key: 'new',\n                name: 'Add',\n                onRender: this._renderSplitButtonMenuItem,\n                className: 'ms-CommandBarItem',\n                subMenuProps: {\n                  items: [\n                    {\n                      key: 'emailMessage',\n                      name: 'Email message',\n                      icon: 'Mail',\n                      ['data-automation-id']: 'newEmailButton'\n                    },\n                    {\n                      key: 'calendarEvent',\n                      name: 'Calendar event',\n                      icon: 'Calendar',\n                      ['data-automation-id']: 'newCalendarButton'\n                    }\n                  ],\n                },\n              },\n            ]\n          }\n        />\n      </div>\n    );\n  }\n\n  @autobind\n  private _renderSplitButtonMenuItem(item: IContextualMenuItem) {\n    let darkerBG = this.state.isContextMenuShown && styles.darkerBG;\n\n    let dropDownButtonClass = css(\n      styles.button,\n      darkerBG\n    );\n    let mainBtnClassName = css(\n      !item.name && ('ms-CommandBarItem--noName'),\n      styles.button,\n      darkerBG\n    );\n\n    return (\n      <div>\n        <div className={ css(\n          styles.customButtonContainer,\n          darkerBG\n        ) } ref={ ref => this.container = ref! }>\n          <CommandButton\n            className={ mainBtnClassName }\n            iconProps={ { iconName: 'Add' } }\n            text='New' />\n          <span className={ styles.splitter }>|</span>\n          <CommandButton\n            onClick={ this._onClickChevron }\n            className={ dropDownButtonClass }\n            menuProps={ {\n              className: css('ms-CommandBar-menuHost'),\n              items: item.subMenuProps!.items\n            } } />\n        </div>\n      </div >\n    );\n  }\n\n  @autobind\n  private _onClickChevron(ev: any) {\n    ev.stopPropagation();\n    this._toggleDropDownMenuShown(ev);\n  }\n\n  @autobind\n  private _toggleDropDownMenuShown(ev: any) {\n    this.setState({\n      isContextMenuShown: !this.state.isContextMenuShown\n    });\n  }\n}\n"]}