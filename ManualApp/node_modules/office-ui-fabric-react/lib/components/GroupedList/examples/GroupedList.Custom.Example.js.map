{"version":3,"file":"GroupedList.Custom.Example.js","sourceRoot":"../src/","sources":["components/GroupedList/examples/GroupedList.Custom.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,iFAIiE;AACjE,kEAA2D;AAC3D,wDAAuD;AACvD,+DAA2E;AAC3E,4CAAkD;AAClD,6CAA2C;AAE3C,IAAI,MAAa,CAAC;AAClB,IAAI,OAAiB,CAAC;AAEtB;IAA8C,oDAAyB;IAErE;QAAA,YACE,iBAAO,SAIR;QAFC,MAAM,GAAG,MAAM,IAAI,kCAAe,CAAC,EAAE,CAAC,CAAC;QACvC,OAAO,GAAG,+BAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IACrC,CAAC;IAEM,yCAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,mBAAW,IACV,GAAG,EAAC,aAAa,EACjB,KAAK,EAAG,MAAM,EACd,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,UAAU,EACR;gBACE,cAAc,EAAE,IAAI,CAAC,eAAe;gBACpC,cAAc,EAAE,IAAI,CAAC,eAAe;aACrC,EAEH,MAAM,EAAG,OAAO,GAChB,CACH,CAAC;IACJ,CAAC;IAEO,gDAAa,GAArB,UAAsB,YAAoB,EAAE,IAAS,EAAE,SAAiB;QACtE,MAAM,CAAC,CACL,qDAA4B,SAAS;YACnC,8BAAM,SAAS,EAAC,4BAA4B,IACxC,IAAI,CAAC,IAAI,CACN,CACH,CACP,CAAC;IACJ,CAAC;IAEO,kDAAe,GAAvB,UAAwB,KAAyB;QAC/C,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,wBAAc,CAAC,MAAM,CAAC;;YAC3C,KAAK,CAAC,KAAM,CAAC,IAAI;;YACxC,oBAAC,WAAI,IAAC,OAAO,EAAG,cAAM,OAAA,KAAK,CAAC,gBAAiB,CAAC,KAAK,CAAC,KAAM,CAAC,EAArC,CAAqC,IAAK,KAAK,CAAC,KAAM,CAAC,WAAW,GAAG,QAAQ,GAAG,UAAU,CAAS;gBAC5H,CACP,CAAC;IACJ,CAAC;IAEO,kDAAe,GAAvB,UAAwB,KAAyB;QAC/C,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,wBAAc,CAAC,MAAM,CAAC;;YAC3C,KAAK,CAAC,KAAM,CAAC,IAAI,CAC3C,CACP,CAAC;IACJ,CAAC;IACH,+BAAC;AAAD,CAAC,AApDD,CAA8C,KAAK,CAAC,SAAS,GAoD5D;AApDY,4DAAwB","sourcesContent":["import * as React from 'react';\nimport {\n  GroupedList,\n  IGroup,\n  IGroupDividerProps\n} from 'office-ui-fabric-react/lib/components/GroupedList/index';\nimport { css } from 'office-ui-fabric-react/lib/Utilities';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { createListItems, createGroups } from '@uifabric/example-app-base';\nimport { FontClassNames } from '../../../Styling';\nimport './GroupedList.Custom.Example.scss';\n\nlet _items: any[];\nlet _groups: IGroup[];\n\nexport class GroupedListCustomExample extends React.Component<any, any> {\n\n  constructor() {\n    super();\n\n    _items = _items || createListItems(20);\n    _groups = createGroups(4, 0, 0, 5);\n  }\n\n  public render() {\n    return (\n      <GroupedList\n        ref='groupedList'\n        items={ _items }\n        onRenderCell={ this._onRenderCell }\n        groupProps={\n          {\n            onRenderHeader: this._onRenderHeader,\n            onRenderFooter: this._onRenderFooter\n          }\n        }\n        groups={ _groups }\n      />\n    );\n  }\n\n  private _onRenderCell(nestingDepth: number, item: any, itemIndex: number) {\n    return (\n      <div data-selection-index={ itemIndex }>\n        <span className='ms-GroupedListExample-name'>\n          { item.name }\n        </span>\n      </div>\n    );\n  }\n\n  private _onRenderHeader(props: IGroupDividerProps): JSX.Element {\n    return (\n      <div className={ css('ms-GroupedListExample-header', FontClassNames.xLarge) }>\n        This is a custom header for { props.group!.name }\n        &nbsp;(<Link onClick={ () => props.onToggleCollapse!(props.group!) }>{ props.group!.isCollapsed ? 'Expand' : 'Collapse' }</Link>)\n      </div>\n    );\n  }\n\n  private _onRenderFooter(props: IGroupDividerProps): JSX.Element {\n    return (\n      <div className={ css('ms-GroupedListExample-footer', FontClassNames.xLarge) }>\n        This is a custom footer for { props.group!.name }\n      </div>\n    );\n  }\n}\n"]}