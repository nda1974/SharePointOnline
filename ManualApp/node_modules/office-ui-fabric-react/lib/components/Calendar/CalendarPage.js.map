{"version":3,"file":"CalendarPage.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarPage.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  ComponentPage,\n  ExampleCard,\n  IComponentDemoPageProps,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { DateRangeType } from 'office-ui-fabric-react/lib/Calendar';\nimport { CalendarButtonExample } from './examples/Calendar.Button.Example';\nimport { CalendarInlineExample } from './examples/Calendar.Inline.Example';\nconst CalendarButtonExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Button.Example.tsx') as string;\nconst CalendarInlineExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Calendar/examples/Calendar.Inline.Example.tsx') as string;\n\nexport class CalendarPage extends React.Component<IComponentDemoPageProps, any> {\n  public render() {\n    return (\n      <ComponentPage\n        title='Calendar'\n        componentName='CalendarExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='Inline Calendar' code={ CalendarInlineExampleCode }>\n              <CalendarInlineExample isMonthPickerVisible={ false } dateRangeType={ DateRangeType.Day } autoNavigateOnSelection={ false }\n                showGoToToday={ false } />\n            </ExampleCard>\n            <ExampleCard title='Inline Calendar with overlayed month picker when header is clicked' code={ CalendarInlineExampleCode }>\n              <CalendarInlineExample showMonthPickerAsOverlay={ true } highlightCurrentMonth={ true } dateRangeType={ DateRangeType.Day } autoNavigateOnSelection={ false }\n                showGoToToday={ false } />\n            </ExampleCard>\n            <ExampleCard title='Inline Calendar with month picker' code={ CalendarInlineExampleCode }>\n              <CalendarInlineExample dateRangeType={ DateRangeType.Day } autoNavigateOnSelection={ false } highlightCurrentMonth={ true }\n                showGoToToday={ true } />\n            </ExampleCard>\n            <ExampleCard title='Inline Calendar with week selection' code={ CalendarInlineExampleCode }>\n              <CalendarInlineExample dateRangeType={ DateRangeType.Week } autoNavigateOnSelection={ true }\n                showGoToToday={ true } showNavigateButtons={ true } />\n            </ExampleCard>\n            <ExampleCard title='Inline Calendar with month selection' code={ CalendarInlineExampleCode }>\n              <CalendarInlineExample dateRangeType={ DateRangeType.Month } autoNavigateOnSelection={ true }\n                showGoToToday={ true } showNavigateButtons={ true } />\n            </ExampleCard>\n            <ExampleCard title='Inline Calendar with month picker and no day picker' code={ CalendarInlineExampleCode }>\n              <CalendarInlineExample dateRangeType={ DateRangeType.Month } autoNavigateOnSelection={ false }\n                showGoToToday={ true } highlightCurrentMonth={ true } isDayPickerVisible={ false } />\n            </ExampleCard>\n            <ExampleCard title='Calendar launched from a button' code={ CalendarButtonExampleCode }>\n              <CalendarButtonExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Calendar/Calendar.Props.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <p>\n              The calendar component allows a user to browse through a calendar and pick a date value.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use the control as a single entity.</li>\n              <li>Set the default date to the current date unless a specific date is required for context (e.g. the date of the conference).</li>\n              <li>The control is designed to resize relative to available screen width. Allow it to render in either wide or narrow as appropriate.</li>\n              <li>When the control is engaged, the Calendar renders as a flyout and has defined widths (300px -narrow and 440px â€“ wide). Plan your UI implementation accordingly.</li>\n              <li>The control renders date in a specific format. If allowing for manual entry of date, provide helper text in the appropriate format.</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Don't attempt to break apart year from month/day selectors. If granularity is required, use the Dropdown control or something similar.</li>\n              <li>Don't attempt to force resize the control in any way.</li>\n              <li>Don't force the control to render one mode vs. the other (year or month/day)</li>\n              <li>The flyout selector is a light dismiss control. Don't modify this behavior in any way.</li>\n            </ul>\n          </div>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n\n}\n"]}