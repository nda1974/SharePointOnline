{"version":3,"file":"CalendarMonth.js","sourceRoot":"../src/","sources":["components/Calendar/CalendarMonth.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  BaseComponent,\n  KeyCodes,\n  css,\n  getRTL,\n  autobind\n} from '../../Utilities';\nimport { ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.Props';\nimport { FocusZone } from '../../FocusZone';\nimport { addYears, setMonth } from '../../utilities/dateMath/DateMath';\nimport { Icon } from '../../Icon';\nimport * as stylesImport from './Calendar.scss';\nconst styles: any = stylesImport;\n\nexport interface ICalendarMonthProps extends React.Props<CalendarMonth> {\n  componentRef?: () => void;\n  navigatedDate: Date;\n  strings: ICalendarStrings;\n  onNavigateDate: (date: Date, focusOnNavigatedDay: boolean) => void;\n  today?: Date;\n  highlightCurrentMonth: boolean;\n  onHeaderSelect?: (focus: boolean) => void;\n  navigationIcons: ICalendarIconStrings;\n  dateTimeFormatter: ICalendarFormatDateCallbacks;\n}\n\nexport class CalendarMonth extends BaseComponent<ICalendarMonthProps, {}> {\n  public refs: {\n    [key: string]: React.ReactInstance;\n    navigatedMonth: HTMLElement;\n  };\n\n  private _selectMonthCallbacks: (() => void)[];\n\n  public constructor(props: ICalendarMonthProps) {\n    super(props);\n\n    this._selectMonthCallbacks = [];\n    props.strings.shortMonths.map((month, index) => {\n      this._selectMonthCallbacks[index] = this._onSelectMonth.bind(this, index);\n    });\n\n    this._isCurrentMonth = this._isCurrentMonth.bind(this);\n    this._onSelectNextYear = this._onSelectNextYear.bind(this);\n    this._onSelectPrevYear = this._onSelectPrevYear.bind(this);\n    this._onSelectMonth = this._onSelectMonth.bind(this);\n  }\n\n  public render() {\n\n    let { navigatedDate, strings, today, highlightCurrentMonth, navigationIcons, dateTimeFormatter } = this.props;\n    let leftNavigationIcon = navigationIcons.leftNavigation;\n    let rightNavigationIcon = navigationIcons.rightNavigation;\n\n    return (\n      <div className={ css('ms-DatePicker-monthPicker', styles.monthPicker) }>\n          <div className={ css('ms-DatePicker-yearComponents', styles.yearComponents) }>\n            <div className={ css('ms-DatePicker-navContainer', styles.navContainer) }>\n              <span\n                className={ css('ms-DatePicker-prevYear js-prevYear', styles.prevYear) }\n                onClick={ this._onSelectPrevYear }\n                onKeyDown={ this._onSelectPrevYearKeyDown }\n                aria-label={ strings.prevYearAriaLabel }\n                role='button'\n                tabIndex={ 0 }>\n                <Icon iconName={ getRTL() ? rightNavigationIcon : leftNavigationIcon } />\n              </span>\n              <span\n                className={ css('ms-DatePicker-nextYear js-nextYear', styles.nextYear) }\n                onClick={ this._onSelectNextYear }\n                onKeyDown={ this._onSelectNextYearKeyDown }\n                aria-label={ strings.nextYearAriaLabel }\n                role='button'\n                tabIndex={ 0 }>\n                <Icon iconName={ getRTL() ? leftNavigationIcon : rightNavigationIcon } />\n              </span>\n            </div>\n          </div>\n          <div className={ css('ms-DatePicker-header', styles.header) }>\n            <div className={ css('ms-DatePicker-currentYear js-showYearPicker', styles.currentYear) }>{ dateTimeFormatter.formatYear(navigatedDate) }</div>\n            {\n              this.props.onHeaderSelect ?\n                <div\n                  className={ css('ms-DatePicker-headerToggleView js-showYearPicker', styles.headerToggleView) }\n                  onClick={ this._onHeaderSelect }\n                  onKeyDown={ this._onHeaderKeyDown }\n                  aria-label={ dateTimeFormatter.formatYear(navigatedDate) }\n                  role='button'\n                  tabIndex={ 0 }\n                />\n                :\n                null\n            }\n        </div>\n        <FocusZone>\n          <div className={ css('ms-DatePicker-optionGrid', styles.optionGrid) }>\n            { strings.shortMonths.map((month, index) =>\n              <span\n                role='button'\n                className={\n                  css('ms-DatePicker-monthOption',\n                    styles.monthOption,\n                    {\n                      ['ms-DatePicker-day--today ' + styles.monthIsCurrentMonth]: highlightCurrentMonth && this._isCurrentMonth(index, navigatedDate.getFullYear(), today!),\n                      ['ms-DatePicker-day--highlighted ' + styles.monthIsHighlighted]: highlightCurrentMonth && (navigatedDate.getMonth() === index)\n                    })\n                }\n                key={ index }\n                onClick={ this._selectMonthCallbacks[index] }\n                aria-label={ dateTimeFormatter.formatMonthYear(navigatedDate, strings) }\n                data-is-focusable={ true }\n                ref={ navigatedDate.getMonth() === index ? 'navigatedMonth' : undefined }\n              >\n                { month }\n              </span>\n            ) }\n          </div>\n        </FocusZone>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.refs.navigatedMonth) {\n      this.refs.navigatedMonth.tabIndex = 0;\n      this.refs.navigatedMonth.focus();\n    }\n  }\n\n  private _isCurrentMonth(month: number, year: number, today: Date) {\n    return today.getFullYear() === year && today.getMonth() === month;\n  }\n\n  @autobind\n  private _onKeyDown(callback: () => void, ev: React.KeyboardEvent<HTMLElement>) {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      callback();\n    }\n  }\n\n  @autobind\n  private _onSelectNextYear() {\n    let { navigatedDate, onNavigateDate } = this.props;\n    onNavigateDate(addYears(navigatedDate, 1), false);\n  }\n\n  @autobind\n  private _onSelectNextYearKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    this._onKeyDown(this._onSelectNextYear, ev);\n  }\n\n  @autobind\n  private _onSelectPrevYear() {\n    let { navigatedDate, onNavigateDate } = this.props;\n    onNavigateDate(addYears(navigatedDate, -1), false);\n  }\n\n  @autobind\n  private _onSelectPrevYearKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    this._onKeyDown(this._onSelectNextYear, ev);\n  }\n\n  @autobind\n  private _onSelectMonth(newMonth: number) {\n    let { navigatedDate, onNavigateDate, onHeaderSelect } = this.props;\n\n    // If header is clickable the calendars are overlayed, switch back to day picker when month is clicked\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n    onNavigateDate(setMonth(navigatedDate, newMonth), true);\n  }\n\n  @autobind\n  private _onHeaderSelect() {\n    let { onHeaderSelect } = this.props;\n    if (onHeaderSelect) {\n      onHeaderSelect(true);\n    }\n  }\n\n  @autobind\n  private _onHeaderKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    let { onHeaderSelect } = this.props;\n    if (onHeaderSelect && (ev.which === KeyCodes.enter || ev.which === KeyCodes.space)) {\n      onHeaderSelect(true);\n    }\n  }\n}\n"]}