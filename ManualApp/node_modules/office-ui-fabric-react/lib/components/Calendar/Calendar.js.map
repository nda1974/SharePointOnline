{"version":3,"file":"Calendar.js","sourceRoot":"../src/","sources":["components/Calendar/Calendar.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAE/B,oEAAiF;AACjF,6CAA4C;AAC5C,iDAAgD;AAChD,8DAAoF;AACpF,6CAKyB;AACzB,8CAAgD;AAChD,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC,IAAM,SAAS,GAAW,IAAI,CAAC;AAC/B,IAAM,UAAU,GAAW,MAAM,CAAC;AAClC,IAAI,WAAW,GAAyB;IACtC,cAAc,EAAE,SAAS;IACzB,eAAe,EAAE,UAAU;CAC5B,CAAC;AAEF,IAAI,0BAA0B,GAAiC;IAC7D,kBAAkB,EAAE,UAAC,IAAU,EAAE,OAAyB,IAAK,OAAA,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAApF,CAAoF;IACnJ,eAAe,EAAE,UAAC,IAAU,EAAE,OAAyB,IAAK,OAAA,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,EAA5D,CAA4D;IACxH,SAAS,EAAE,UAAC,IAAU,IAAK,OAAA,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAzB,CAAyB;IACpD,UAAU,EAAE,UAAC,IAAU,IAAK,OAAA,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,EAA7B,CAA6B;CAC1D,CAAC;AAgBF;IAA8B,oCAA6C;IA4BzE,kBAAY,KAAqB;QAAjC,YACE,kBAAM,KAAK,CAAC,SAab;QAZC,IAAI,WAAW,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;QAE3G,KAAI,CAAC,KAAK,GAAG;YACX,YAAY,EAAE,WAAW;YACzB,aAAa,EAAE,WAAW;YAE1B,qLAAqL;YACrL,oBAAoB,EAAE,KAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,oBAAoB;YACnG,kBAAkB,EAAE,KAAI,CAAC,KAAK,CAAC,wBAAwB,GAAG,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,kBAAkB;SAC/F,CAAC;QAEF,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;IAC9B,CAAC;IAEM,4CAAyB,GAAhC,UAAiC,SAAyB;QAClD,IAAA,2DAAuB,EAAE,uBAAK,EAAE,oBAAkB,EAAlB,uCAAkB,CAAe;QAEvE,0FAA0F;QAC1F,kFAAkF;QAClF,IAAI,qBAAqB,GAAG,CAAC,uBAAuB,IAAI,CAAC,uBAAY,CAAC,KAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAM,CAAC,CAAC,CAAC;QAClG,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,CAAC;gBACZ,aAAa,EAAE,KAAK;aACrB,CAAC,CAAC;QACL,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC;YACZ,YAAY,EAAE,KAAK,IAAI,KAAK;SAC7B,CAAC,CAAC;IACL,CAAC;IAEM,qCAAkB,GAAzB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,0CAA0C;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;YAChC,CAAC;YACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC;IACH,CAAC;IAEM,yBAAM,GAAb;QACE,IAAI,SAAS,GAAG,eAAe,CAAC;QAC5B,IAAA,eAAiK,EAA/J,kCAAc,EAAE,gCAAa,EAAE,oBAAO,EAAE,sDAAwB,EAAE,oDAAuB,EAAE,gCAAa,EAAE,gDAAqB,EAAE,oCAAe,CAAgB;QAClK,IAAA,eAAsF,EAApF,8BAAY,EAAE,gCAAa,EAAE,8CAAoB,EAAE,0CAAkB,CAAgB;QAC3F,IAAI,cAAc,GAAG,wBAAwB,GAAG,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;QAEjF,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,EAAG,GAAG,EAAC,MAAM,EAAC,IAAI,EAAC,aAAa;YAC1E,6BAAK,SAAS,EAAG,eAAG,CAClB,iFAAiF,EACjF,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,cAAc,EACrB,MAAM,CAAC,eAAe,EACtB,oBAAoB,IAAI,CAAC,mCAAmC,GAAG,MAAM,CAAC,kBAAkB,CAAC,EACzF,oBAAoB,IAAI,kBAAkB,IAAI,CAAC,gCAAgC,GAAG,MAAM,CAAC,eAAe,CAAC,CAC1G;gBACC,6BAAK,SAAS,EAAG,eAAG,CAAC,uCAAuC,EAAE,MAAM,CAAC,MAAM,CAAC,EAAG,SAAS,EAAG,IAAI,CAAC,yBAAyB;oBACvH,6BAAK,SAAS,EAAG,eAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,KAAK,CAAC;wBACvD,6BAAK,SAAS,EAAG,eAAG,CAAC,oBAAoB,EAAE,MAAM,CAAC,IAAI,EAAE,aAAa,IAAI,MAAM,CAAC,cAAc,CAAC;4BAC3F,kBAAkB,IAAI,oBAAC,yBAAW,IAClC,YAAY,EAAG,YAAa,EAC5B,aAAa,EAAG,aAAc,EAC9B,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,YAAY,EAAG,IAAI,CAAC,aAAa,EACjC,cAAc,EAAG,IAAI,CAAC,eAAe,EACrC,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAChC,cAAc,EAAG,cAAe,EAChC,aAAa,EAAG,aAAc,EAC9B,uBAAuB,EAAG,uBAAwB,EAClD,OAAO,EAAG,OAAQ,EAClB,cAAc,EAAG,cAAc,EAC/B,eAAe,EAAG,eAAgB,EAClC,iBAAiB,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAkB,EACjD,GAAG,EAAC,WAAW,GAAG;4BAGlB,oBAAoB,IAAI,oBAAC,6BAAa,IACtC,aAAa,EAAG,aAAc,EAC9B,OAAO,EAAG,OAAQ,EAClB,cAAc,EAAG,IAAI,CAAC,eAAe,EACrC,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EACxB,qBAAqB,EAAG,qBAAsB,EAC9C,cAAc,EAAG,cAAc,EAC/B,eAAe,EAAG,eAAgB,EAClC,iBAAiB,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAkB,EACjD,GAAG,EAAC,aAAa,GAAG;4BAEpB,aAAa;gCACb,8BACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAG,eAAG,CAAC,kCAAkC,EAAE,MAAM,CAAC,OAAO,CAAC,EACnE,OAAO,EAAG,IAAI,CAAC,YAAY,EAC3B,SAAS,EAAG,IAAI,CAAC,mBAAmB,EACpC,QAAQ,EAAG,CAAC,IACV,OAAQ,CAAC,SAAS,CACf,CAEL,CACF,CACF,CACF,CACF,CACP,CAAC;IACJ,CAAC;IAEM,wBAAK,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;QAC9B,CAAC;IACH,CAAC;IAGO,+BAAY,GAApB,UAAqB,IAAU;QAC7B,IAAI,CAAC,QAAQ,CAAC;YACZ,aAAa,EAAE,IAAI;SACpB,CAAC,CAAC;IACL,CAAC;IAGO,kCAAe,GAAvB,UAAwB,IAAU,EAAE,mBAA4B;QAC9D,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,cAAc,GAAG,mBAAmB,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,6DAA6D;YAC7D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;IAGO,gCAAa,GAArB,UAAsB,IAAU,EAAE,sBAA+B;QACzD,IAAA,sCAAY,CAAgB;QAElC,IAAI,CAAC,QAAQ,CAAC;YACZ,YAAY,EAAE,IAAI;SACnB,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACjB,YAAY,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAGO,kCAAe,GAAvB,UAAwB,KAAc;QACpC,IAAI,CAAC,QAAQ,CAAC;YACZ,kBAAkB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB;YAClD,oBAAoB,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB;SACvD,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC7B,CAAC;IACH,CAAC;IAGO,+BAAY,GAApB;QAEM,IAAA,eAAqD,EAAnD,gCAAa,EAAE,kCAAc,EAAE,gBAAK,CAAgB;QAE1D,IAAI,KAAK,GAAG,4BAAiB,CAAC,KAAM,EAAE,aAAc,EAAE,cAAe,CAAC,CAAC;QAEvE,IAAI,CAAC,aAAa,CAAC,KAAM,EAAE,KAAK,CAAC,CAAC;IAEpC,CAAC;IAGO,sCAAmB,GAA3B,UAA4B,EAAoC;QAC9D,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,mBAAmB,IAAI,EAAE,CAAC,KAAK,mBAAmB,CAAC,CAAC,CAAC;YAC/D,EAAE,CAAC,cAAc,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,gBAAiB,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBACzB,EAAE,CAAC,eAAe,EAAE,CAAC;gBACrB,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;YACzB,CAAC;QACH,CAAC;IACH,CAAC;IAGO,4CAAyB,GAAjC,UAAkC,EAAoC;QACpE,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB;gBACE,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,KAAK,CAAC;YAER;gBACE,EAAE,CAAC,cAAc,EAAE,CAAC;gBACpB,KAAK,CAAC;YAER;gBACE,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;gBACvB,KAAK,CAAC;YAER;gBACE,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IAGO,gCAAa,GAArB,UAAsB,EAAoC;QACxD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IA5Oa,qBAAY,GAAmB;QAC3C,YAAY,EAAE,SAAS;QACvB,SAAS,EAAE,SAAS;QACpB,oBAAoB,EAAE,IAAI;QAC1B,kBAAkB,EAAE,IAAI;QACxB,wBAAwB,EAAE,KAAK;QAC/B,KAAK,EAAE,SAAS;QAChB,KAAK,EAAE,IAAI,IAAI,EAAE;QACjB,cAAc,EAAE,sBAAS,CAAC,MAAM;QAChC,aAAa,EAAE,0BAAa,CAAC,GAAG;QAChC,uBAAuB,EAAE,KAAK;QAC9B,aAAa,EAAE,IAAI;QACnB,OAAO,EAAE,IAAI;QACb,qBAAqB,EAAE,KAAK;QAC5B,eAAe,EAAE,WAAW;QAC5B,iBAAiB,EAAE,0BAA0B;KAC9C,CAAC;IAgIF;QADC,oBAAQ;gDAKR;IAGD;QADC,oBAAQ;mDASR;IAGD;QADC,oBAAQ;iDAWR;IAGD;QADC,oBAAQ;mDAUR;IAGD;QADC,oBAAQ;gDASR;IAGD;QADC,oBAAQ;uDAYR;IAGD;QADC,oBAAQ;6DAkBR;IAGD;QADC,oBAAQ;iDAKR;IACH,eAAC;CAAA,AA9OD,CAA8B,yBAAa,GA8O1C;AA9OY,4BAAQ","sourcesContent":["import * as React from 'react';\nimport { ICalendar, ICalendarProps, ICalendarStrings, ICalendarIconStrings, ICalendarFormatDateCallbacks } from './Calendar.Props';\nimport { DayOfWeek, DateRangeType } from '../../utilities/dateValues/DateValues';\nimport { CalendarDay } from './CalendarDay';\nimport { CalendarMonth } from './CalendarMonth';\nimport { compareDates, getDateRangeArray } from '../../utilities/dateMath/DateMath';\nimport {\n  autobind,\n  css,\n  BaseComponent,\n  KeyCodes\n} from '../../Utilities';\nimport * as stylesImport from './Calendar.scss';\nconst styles: any = stylesImport;\n\nconst leftArrow: string = 'Up';\nconst rightArrow: string = 'Down';\nlet iconStrings: ICalendarIconStrings = {\n  leftNavigation: leftArrow,\n  rightNavigation: rightArrow\n};\n\nlet dateTimeFormatterCallbacks: ICalendarFormatDateCallbacks = {\n  formatMonthDayYear: (date: Date, strings: ICalendarStrings) => (strings.months[date.getMonth()] + ' ' + date.getDate() + ', ' + date.getFullYear()),\n  formatMonthYear: (date: Date, strings: ICalendarStrings) => (strings.months[date.getMonth()] + ' ' + date.getFullYear()),\n  formatDay: (date: Date) => date.getDate().toString(),\n  formatYear: (date: Date) => date.getFullYear().toString()\n};\n\nexport interface ICalendarState {\n  /** The currently focused date in the calendar, but not necessarily selected */\n  navigatedDate?: Date;\n\n  /** The currently selected date in the calendar */\n  selectedDate?: Date;\n\n  /** State used to show/hide month picker */\n  isMonthPickerVisible?: boolean;\n\n  /** State used to show/hide day picker */\n  isDayPickerVisible?: boolean;\n}\n\nexport class Calendar extends BaseComponent<ICalendarProps, ICalendarState> implements ICalendar {\n  public static defaultProps: ICalendarProps = {\n    onSelectDate: undefined,\n    onDismiss: undefined,\n    isMonthPickerVisible: true,\n    isDayPickerVisible: true,\n    showMonthPickerAsOverlay: false,\n    value: undefined,\n    today: new Date(),\n    firstDayOfWeek: DayOfWeek.Sunday,\n    dateRangeType: DateRangeType.Day,\n    autoNavigateOnSelection: false,\n    showGoToToday: true,\n    strings: null,\n    highlightCurrentMonth: false,\n    navigationIcons: iconStrings,\n    dateTimeFormatter: dateTimeFormatterCallbacks\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n    dayPicker: CalendarDay;\n    monthPicker: CalendarMonth;\n  };\n\n  private _focusOnUpdate: boolean;\n\n  constructor(props: ICalendarProps) {\n    super(props);\n    let currentDate = props.value && !isNaN(props.value.getTime()) ? props.value : (props.today || new Date());\n\n    this.state = {\n      selectedDate: currentDate,\n      navigatedDate: currentDate,\n\n      /** When showMonthPickerAsOverlay is active it overrides isMonthPickerVisible/isDayPickerVisible props (These props permanently set the visibility of their respective calendars). */\n      isMonthPickerVisible: this.props.showMonthPickerAsOverlay ? false : this.props.isMonthPickerVisible,\n      isDayPickerVisible: this.props.showMonthPickerAsOverlay ? true : this.props.isDayPickerVisible\n    };\n\n    this._focusOnUpdate = false;\n  }\n\n  public componentWillReceiveProps(nextProps: ICalendarProps) {\n    let { autoNavigateOnSelection, value, today = new Date() } = nextProps;\n\n    // Make sure auto-navigation is supported for programmatic changes to selected date, i.e.,\n    // if selected date is updated via props, we may need to modify the navigated date\n    let overrideNavigatedDate = (autoNavigateOnSelection && !compareDates(value!, this.props.value!));\n    if (overrideNavigatedDate) {\n      this.setState({\n        navigatedDate: value\n      });\n    }\n\n    this.setState({\n      selectedDate: value || today\n    });\n  }\n\n  public componentDidUpdate() {\n    if (this._focusOnUpdate) {\n      // if the day picker is shown, focus on it\n      if (this.refs.dayPicker) {\n        this.refs.dayPicker.focus();\n      } else if (this.refs.monthPicker) {\n        this.refs.monthPicker.focus();\n      }\n      this._focusOnUpdate = false;\n    }\n  }\n\n  public render() {\n    let rootClass = 'ms-DatePicker';\n    let { firstDayOfWeek, dateRangeType, strings, showMonthPickerAsOverlay, autoNavigateOnSelection, showGoToToday, highlightCurrentMonth, navigationIcons } = this.props;\n    let { selectedDate, navigatedDate, isMonthPickerVisible, isDayPickerVisible } = this.state;\n    let onHeaderSelect = showMonthPickerAsOverlay ? this._onHeaderSelect : undefined;\n\n    return (\n      <div className={ css(rootClass, styles.root) } ref='root' role='application'>\n        <div className={ css(\n          'ms-DatePicker-picker ms-DatePicker-picker--opened ms-DatePicker-picker--focused',\n          styles.picker,\n          styles.pickerIsOpened,\n          styles.pickerIsFocused,\n          isMonthPickerVisible && ('ms-DatePicker-monthPickerVisible ' + styles.monthPickerVisible),\n          isMonthPickerVisible && isDayPickerVisible && ('ms-DatePicker-calendarsInline ' + styles.calendarsInline),\n        ) } >\n          <div className={ css('ms-DatePicker-holder ms-slideDownIn10', styles.holder) } onKeyDown={ this._onDatePickerPopupKeyDown }>\n            <div className={ css('ms-DatePicker-frame', styles.frame) }>\n              <div className={ css('ms-DatePicker-wrap', styles.wrap, showGoToToday && styles.goTodaySpacing) }>\n                { isDayPickerVisible && <CalendarDay\n                  selectedDate={ selectedDate! }\n                  navigatedDate={ navigatedDate! }\n                  today={ this.props.today }\n                  onSelectDate={ this._onSelectDate }\n                  onNavigateDate={ this._onNavigateDate }\n                  onDismiss={ this.props.onDismiss }\n                  firstDayOfWeek={ firstDayOfWeek! }\n                  dateRangeType={ dateRangeType! }\n                  autoNavigateOnSelection={ autoNavigateOnSelection! }\n                  strings={ strings! }\n                  onHeaderSelect={ onHeaderSelect }\n                  navigationIcons={ navigationIcons! }\n                  dateTimeFormatter={ this.props.dateTimeFormatter! }\n                  ref='dayPicker' />\n                }\n\n                { isMonthPickerVisible && <CalendarMonth\n                  navigatedDate={ navigatedDate! }\n                  strings={ strings! }\n                  onNavigateDate={ this._onNavigateDate }\n                  today={ this.props.today }\n                  highlightCurrentMonth={ highlightCurrentMonth! }\n                  onHeaderSelect={ onHeaderSelect }\n                  navigationIcons={ navigationIcons! }\n                  dateTimeFormatter={ this.props.dateTimeFormatter! }\n                  ref='monthPicker' /> }\n\n                { showGoToToday &&\n                  <span\n                    role='button'\n                    className={ css('ms-DatePicker-goToday js-goToday', styles.goToday) }\n                    onClick={ this._onGotoToday }\n                    onKeyDown={ this._onGotoTodayKeyDown }\n                    tabIndex={ 0 }>\n                    { strings!.goToToday }\n                  </span>\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  public focus() {\n    if (this.refs.dayPicker) {\n      this.refs.dayPicker.focus();\n    }\n  }\n\n  @autobind\n  private _navigateDay(date: Date) {\n    this.setState({\n      navigatedDate: date\n    });\n  }\n\n  @autobind\n  private _onNavigateDate(date: Date, focusOnNavigatedDay: boolean) {\n    if (this.props.isDayPickerVisible) {\n      this._navigateDay(date);\n      this._focusOnUpdate = focusOnNavigatedDay;\n    } else {\n      // if only the month picker is shown, select the chosen month\n      this._onSelectDate(date);\n    }\n  }\n\n  @autobind\n  private _onSelectDate(date: Date, selectedDateRangeArray?: Date[]) {\n    let { onSelectDate } = this.props;\n\n    this.setState({\n      selectedDate: date\n    });\n\n    if (onSelectDate) {\n      onSelectDate(date, selectedDateRangeArray);\n    }\n  }\n\n  @autobind\n  private _onHeaderSelect(focus: boolean) {\n    this.setState({\n      isDayPickerVisible: !this.state.isDayPickerVisible,\n      isMonthPickerVisible: !this.state.isMonthPickerVisible\n    });\n\n    if (focus) {\n      this._focusOnUpdate = true;\n    }\n  }\n\n  @autobind\n  private _onGotoToday() {\n\n    let { dateRangeType, firstDayOfWeek, today } = this.props;\n\n    let dates = getDateRangeArray(today!, dateRangeType!, firstDayOfWeek!);\n\n    this._onSelectDate(today!, dates);\n\n  }\n\n  @autobind\n  private _onGotoTodayKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    if (ev.which === KeyCodes.enter || ev.which === KeyCodes.space) {\n      ev.preventDefault();\n      this._onGotoToday();\n    } else if (ev.which === KeyCodes.tab && !ev.shiftKey) {\n      if (this.props.onDismiss) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        this.props.onDismiss();\n      }\n    }\n  }\n\n  @autobind\n  private _onDatePickerPopupKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.backspace:\n        ev.preventDefault();\n        break;\n\n      case KeyCodes.escape:\n        this._handleEscKey(ev);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  @autobind\n  private _handleEscKey(ev: React.KeyboardEvent<HTMLElement>) {\n    if (this.props.onDismiss) {\n      this.props.onDismiss();\n    }\n  }\n}\n"]}