{"version":3,"file":"PeoplePicker.Types.Example.js","sourceRoot":"../src/","sources":["components/pickers/PeoplePicker/examples/PeoplePicker.Types.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable */\nimport * as React from 'react';\n/* tslint:enable */\nimport {\n  BaseComponent,\n  assign,\n  autobind\n} from 'office-ui-fabric-react/lib/Utilities';\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport { IPersonaProps, Persona, PersonaSize } from 'office-ui-fabric-react/lib/Persona';\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport {\n  CompactPeoplePicker,\n  IBasePickerSuggestionsProps,\n  IBasePicker,\n  ListPeoplePicker,\n  NormalPeoplePicker,\n  ValidationState\n} from 'office-ui-fabric-react/lib/Pickers';\nimport { PrimaryButton } from 'office-ui-fabric-react/lib/Button';\nimport { IPersonaWithMenu } from 'office-ui-fabric-react/lib/components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.Props';\nimport { people, mru } from './PeoplePickerExampleData';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Promise } from 'es6-promise';\nimport './PeoplePicker.Types.Example.scss';\n\nexport interface IPeoplePickerExampleState {\n  currentPicker?: number | string;\n  delayResults?: boolean;\n  peopleList: IPersonaProps[];\n  mostRecentlyUsed: IPersonaProps[];\n  currentSelectedItems?: IPersonaProps[];\n}\n\nconst suggestionProps: IBasePickerSuggestionsProps = {\n  suggestionsHeaderText: 'Suggested People',\n  mostRecentlyUsedHeaderText: 'Suggested Contacts',\n  noResultsFoundText: 'No results found',\n  loadingText: 'Loading',\n  showRemoveButtons: true,\n  suggestionsAvailableAlertText: 'People Picker Suggestions available'\n};\n\nconst limitedSearchAdditionalProps: IBasePickerSuggestionsProps = {\n  searchForMoreText: 'Load all Results',\n  resultsMaximumNumber: 10,\n  searchingText: 'Searching...'\n};\n\nconst limitedSearchSuggestionProps: IBasePickerSuggestionsProps = assign(limitedSearchAdditionalProps, suggestionProps);\n\nexport class PeoplePickerTypesExample extends BaseComponent<any, IPeoplePickerExampleState> {\n  private _picker: IBasePicker<IPersonaProps>;\n\n  constructor() {\n    super();\n    let peopleList: IPersonaWithMenu[] = [];\n    people.forEach((persona: IPersonaProps) => {\n      let target: IPersonaWithMenu = {};\n\n      assign(target, persona);\n      peopleList.push(target);\n    });\n\n    this.state = {\n      currentPicker: 1,\n      delayResults: false,\n      peopleList: peopleList,\n      mostRecentlyUsed: mru,\n      currentSelectedItems: []\n    };\n  }\n\n  public render() {\n    let currentPicker: JSX.Element | undefined = undefined;\n\n    switch (this.state.currentPicker) {\n      case 1:\n        currentPicker = this._renderNormalPicker();\n        break;\n      case 2:\n        currentPicker = this._renderCompactPicker();\n        break;\n      case 3:\n        currentPicker = this._renderListPicker();\n        break;\n      case 4:\n        currentPicker = this._renderPreselectedItemsPicker();\n        break;\n      case 5:\n        currentPicker = this._renderLimitedSearch();\n        break;\n      case 6:\n        currentPicker = this._renderProcessSelectionPicker();\n      case 7:\n        currentPicker = this._renderControlledPicker();\n        break;\n      default:\n    }\n\n    return (\n      <div>\n        { currentPicker }\n        <div className={ 'dropdown-div' }>\n          <Dropdown label='Select People Picker Type'\n            options={ [\n              { key: 1, text: 'Normal' },\n              { key: 2, text: 'Compact' },\n              { key: 3, text: 'Members List' },\n              { key: 4, text: 'Preselected Items' },\n              { key: 5, text: 'Limit Search' },\n              { key: 6, text: 'Process Selection' },\n              { key: 7, text: 'Controlled Picker' }\n            ] }\n            selectedKey={ this.state.currentPicker }\n            onChanged={ this._dropDownSelected }\n          />\n          <Toggle\n            label='Delay Suggestion Results'\n            defaultChecked={ false }\n            onChanged={ this._toggleDelayResultsChange } />\n        </div>\n        <PrimaryButton\n          text='Set focus'\n          onClick={ this._onSetFocusButtonClicked } />\n      </div>\n    );\n  }\n\n  private _renderListPicker() {\n    return (\n      <ListPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText as string }\n        className={ 'ms-PeoplePicker' }\n        pickerSuggestionsProps={ suggestionProps }\n        key={ 'list' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n      />\n    );\n  }\n\n  private _renderNormalPicker() {\n    return (\n      <NormalPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText as string }\n        pickerSuggestionsProps={ suggestionProps }\n        className={ 'ms-PeoplePicker' }\n        key={ 'normal' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        removeButtonAriaLabel={ 'Remove' }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n      />\n    );\n  }\n\n  private _renderCompactPicker() {\n    return (\n      <CompactPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText as string }\n        pickerSuggestionsProps={ suggestionProps }\n        className={ 'ms-PeoplePicker' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n      />\n    );\n  }\n\n  private _renderPreselectedItemsPicker() {\n    return (\n      <CompactPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText as string }\n        className={ 'ms-PeoplePicker' }\n        defaultSelectedItems={ people.splice(0, 3) }\n        key={ 'list' }\n        pickerSuggestionsProps={ suggestionProps }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n      />\n    );\n  }\n\n  private _renderLimitedSearch() {\n    limitedSearchSuggestionProps.resultsFooter = this._renderFooterText;\n\n    return (\n      <CompactPeoplePicker\n        onResolveSuggestions={ this._onFilterChangedWithLimit }\n        onEmptyInputFocus={ this._returnMostRecentlyUsedWithLimit }\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText as string }\n        className={ 'ms-PeoplePicker' }\n        onGetMoreResults={ this._onFilterChanged }\n        pickerSuggestionsProps={ limitedSearchSuggestionProps }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n      />\n    );\n  }\n\n  private _renderProcessSelectionPicker() {\n    return (\n      <NormalPeoplePicker\n        onResolveSuggestions={ this._onFilterChanged }\n        onEmptyInputFocus={ this._returnMostRecentlyUsed }\n        getTextFromItem={ (persona: IPersonaProps) => persona.primaryText as string }\n        pickerSuggestionsProps={ suggestionProps }\n        className={ 'ms-PeoplePicker' }\n        onRemoveSuggestion={ this._onRemoveSuggestion }\n        onValidateInput={ this._validateInput }\n        removeButtonAriaLabel={ 'Remove' }\n        onItemSelected={ this._onItemSelected }\n        inputProps={ {\n          onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n          onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called'),\n          'aria-label': 'People Picker'\n        } }\n        componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n      />\n    );\n  }\n\n  private _renderControlledPicker() {\n    let controlledItems = [];\n    for (let i = 0; i < 5; i++) {\n      let item = this.state.peopleList[i];\n      if (this.state.currentSelectedItems!.indexOf(item) === -1) {\n        controlledItems.push(this.state.peopleList[i]);\n      }\n    }\n    return (\n      <div>\n        <NormalPeoplePicker\n          onResolveSuggestions={ this._onFilterChanged }\n          getTextFromItem={ (persona: IPersonaProps) => persona.primaryText! }\n          pickerSuggestionsProps={ suggestionProps }\n          className={ 'ms-PeoplePicker' }\n          key={ 'controlled' }\n          selectedItems={ this.state.currentSelectedItems }\n          onChange={ this._onItemsChange }\n          inputProps={ {\n            onBlur: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onBlur called'),\n            onFocus: (ev: React.FocusEvent<HTMLInputElement>) => console.log('onFocus called')\n          } }\n          componentRef={ (component: IBasePicker<IPersonaProps>) => this._picker = component }\n        />\n        <label> Click to Add a person </label>\n        { controlledItems.map(item => <div>\n          <DefaultButton className='controlledPickerButton'\n            onClick={ () => {\n              this.setState({\n                currentSelectedItems: this.state.currentSelectedItems!.concat([item])\n              });\n            } }>\n            <Persona { ...item} />\n          </DefaultButton>\n        </div>) }\n      </div>\n    );\n  }\n\n  @autobind\n  private _onItemsChange(items: any[]) {\n    this.setState({\n      currentSelectedItems: items\n    });\n  }\n\n  @autobind\n  private _onSetFocusButtonClicked() {\n    if (this._picker) {\n      this._picker.focus();\n    }\n  }\n\n  @autobind\n  private _renderFooterText(): JSX.Element {\n    return <div>No additional results</div>;\n  }\n\n  @autobind\n  private _onRemoveSuggestion(item: IPersonaProps): void {\n    let { peopleList, mostRecentlyUsed: mruState } = this.state;\n    let indexPeopleList: number = peopleList.indexOf(item);\n    let indexMostRecentlyUsed: number = mruState.indexOf(item);\n\n    if (indexPeopleList >= 0) {\n      let newPeople: IPersonaProps[] = peopleList.slice(0, indexPeopleList).concat(peopleList.slice(indexPeopleList + 1));\n      this.setState({ peopleList: newPeople });\n    }\n\n    if (indexMostRecentlyUsed >= 0) {\n      let newSuggestedPeople: IPersonaProps[] = mruState.slice(0, indexMostRecentlyUsed).concat(mruState.slice(indexMostRecentlyUsed + 1));\n      this.setState({ mostRecentlyUsed: newSuggestedPeople });\n    }\n  }\n\n  @autobind\n  private _onItemSelected(item: IPersonaProps) {\n    const processedItem = Object.assign({}, item);\n    processedItem.primaryText = `${item.primaryText} (selected)`;\n    return new Promise<IPersonaProps>((resolve, reject) => setTimeout(() => resolve(processedItem), 250));\n  }\n\n  @autobind\n  private _onFilterChanged(filterText: string, currentPersonas: IPersonaProps[], limitResults?: number) {\n    if (filterText) {\n      let filteredPersonas: IPersonaProps[] = this._filterPersonasByText(filterText);\n\n      filteredPersonas = this._removeDuplicates(filteredPersonas, currentPersonas);\n      filteredPersonas = limitResults ? filteredPersonas.splice(0, limitResults) : filteredPersonas;\n      return this._filterPromise(filteredPersonas);\n    } else {\n      return [];\n    }\n  }\n\n  @autobind\n  private _returnMostRecentlyUsed(currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\n    let { mostRecentlyUsed } = this.state;\n    mostRecentlyUsed = this._removeDuplicates(mostRecentlyUsed, currentPersonas);\n    return this._filterPromise(mostRecentlyUsed);\n  }\n\n  @autobind\n  private _returnMostRecentlyUsedWithLimit(currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\n    let { mostRecentlyUsed } = this.state;\n    mostRecentlyUsed = this._removeDuplicates(mostRecentlyUsed, currentPersonas);\n    mostRecentlyUsed = mostRecentlyUsed.splice(0, 3);\n    return this._filterPromise(mostRecentlyUsed);\n  }\n\n  @autobind\n  private _onFilterChangedWithLimit(filterText: string, currentPersonas: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\n    return this._onFilterChanged(filterText, currentPersonas, 3);\n  }\n\n  private _filterPromise(personasToReturn: IPersonaProps[]): IPersonaProps[] | Promise<IPersonaProps[]> {\n    if (this.state.delayResults) {\n      return this._convertResultsToPromise(personasToReturn);\n    } else {\n      return personasToReturn;\n    }\n  }\n\n  private _listContainsPersona(persona: IPersonaProps, personas: IPersonaProps[]) {\n    if (!personas || !personas.length || personas.length === 0) {\n      return false;\n    }\n    return personas.filter(item => item.primaryText === persona.primaryText).length > 0;\n  }\n\n  private _filterPersonasByText(filterText: string): IPersonaProps[] {\n    return this.state.peopleList.filter(item => this._doesTextStartWith(item.primaryText as string, filterText));\n  }\n\n  private _doesTextStartWith(text: string, filterText: string): boolean {\n    return text.toLowerCase().indexOf(filterText.toLowerCase()) === 0;\n  }\n\n  private _convertResultsToPromise(results: IPersonaProps[]): Promise<IPersonaProps[]> {\n    return new Promise<IPersonaProps[]>((resolve, reject) => setTimeout(() => resolve(results), 2000));\n  }\n\n  private _removeDuplicates(personas: IPersonaProps[], possibleDupes: IPersonaProps[]) {\n    return personas.filter(persona => !this._listContainsPersona(persona, possibleDupes));\n  }\n\n  @autobind\n  private _toggleDelayResultsChange(toggleState: boolean) {\n    this.setState({ delayResults: toggleState });\n  }\n\n  @autobind\n  private _dropDownSelected(option: IDropdownOption) {\n    this.setState({ currentPicker: option.key });\n  }\n\n  @autobind\n  private _validateInput(input: string) {\n    if (input.indexOf('@') !== -1) {\n      return ValidationState.valid;\n    } else if (input.length > 1) {\n      return ValidationState.warning;\n    } else {\n      return ValidationState.invalid;\n    }\n  }\n\n}\n"]}