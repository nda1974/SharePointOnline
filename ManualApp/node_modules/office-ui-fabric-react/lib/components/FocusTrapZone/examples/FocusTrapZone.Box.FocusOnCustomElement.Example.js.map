{"version":3,"file":"FocusTrapZone.Box.FocusOnCustomElement.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.FocusOnCustomElement.Example.tsx"],"names":[],"mappings":";;;AAAA,uCAAuC;AACvC,6BAA+B;AAI/B,gDAA8C;AAC9C,4DAAkE;AAClE,0EAAyE;AACzE,wDAAuD;AACvD,kEAAiE;AACjE,4DAAoE;AAMpE;IAAwC,sCAA8E;IAGpH,oBAAY,KAA2C;QAAvD,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,SAAS,EAAE,KAAK;SACjB,CAAC;;IACJ,CAAC;IAEM,2BAAM,GAAb;QAAA,iBA2BC;QA1BO,IAAA,gCAAS,CAAgB;QAC/B,IAAM,SAAS,GAAW,mBAAmB,CAAC;QAE9C,MAAM,CAAC,CACL;YACE,oBAAC,sBAAa,IACZ,OAAO,EAAG,IAAI,CAAC,qBAAqB,EACpC,IAAI,EAAC,iBAAiB,GACtB;YACA,CAAC;gBACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,CACL,oBAAC,6BAAa,IAAC,sBAAsB,EAAG,SAAS,IAC7C,KAAI,CAAC,iBAAiB,EAAE,CACZ,CACjB,CAAC;gBACJ,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,MAAM,CAAC,CACL,iCACI,KAAI,CAAC,iBAAiB,EAAE,CACtB,CACP,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC,EAAE,CACA,CACP,CAAC;IACJ,CAAC;IAEO,sCAAiB,GAAzB;QAAA,iBA6BC;QA5BO,IAAA,gCAAS,CAAgB;QAE/B,MAAM,CAAC,CACL,6BAAK,SAAS,EAAC,4BAA4B;YACzC,oBAAC,qBAAS,IAAC,KAAK,EAAC,mBAAmB,EAAC,WAAW,EAAC,8BAA8B,EAAC,SAAS,EAAC,EAAE,GAAG;YAC/F,oBAAC,WAAI,IAAC,IAAI,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,qCAAuC;YAAA,+BAAM;YAAA,+BAAM;YAC7E,6BAAK,SAAS,EAAC,mBAAmB;gBAChC,oBAAC,eAAM,IACL,YAAY,EAAG,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,OAAO,GAAG,CAAC,EAAhB,CAAgB,EACpC,OAAO,EAAG,SAAS,EACnB,SAAS,EAAG,IAAI,CAAC,6BAA6B,EAC9C,KAAK,EAAC,iBAAiB,EACvB,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,KAAK,GAAG,CACd;YACJ,CAAC;gBACD,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACd,MAAM,CAAC,CACL,oBAAC,sBAAa,IACZ,WAAW,EAAC,sBAAsB,EAClC,OAAO,EAAG,KAAI,CAAC,yBAAyB,EACxC,IAAI,EAAC,sBAAsB,GAC3B,CACH,CAAC;gBACJ,CAAC;YACH,CAAC,CAAC,EAAE,CACA,CACP,CAAC;IACJ,CAAC;IAGO,0CAAqB,GAA7B;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;IAGO,8CAAyB,GAAjC;QACE,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,KAAK;SACjB,CAAC,CAAC;IACL,CAAC;IAGO,kDAA6B,GAArC,UAAsC,SAAkB;QADxD,iBAKC;QAHC,IAAI,CAAC,QAAQ,CAAC;YACZ,SAAS,EAAE,SAAS;SACrB,EAAE,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAApB,CAAoB,CAAC,CAAC;IACjC,CAAC;IAlBD;QADC,oBAAQ;2DAKR;IAGD;QADC,oBAAQ;+DAKR;IAGD;QADC,oBAAQ;mEAKR;IACH,iBAAC;CAAA,AA3FD,CAAwC,KAAK,CAAC,SAAS,GA2FtD;kBA3FoB,UAAU","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\n/* tslint:enable:no-unused-variable */\n\nimport * as ReactDOM from 'react-dom';\nimport { autobind } from '../../../Utilities';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\n\nexport interface IBoxExampleExampleState {\n  isChecked: boolean;\n}\n\nexport default class BoxExample extends React.Component<React.HTMLAttributes<HTMLDivElement>, IBoxExampleExampleState> {\n  private _toggle: IToggle;\n\n  constructor(props: React.HTMLAttributes<HTMLDivElement>) {\n    super(props);\n\n    this.state = {\n      isChecked: false,\n    };\n  }\n\n  public render() {\n    let { isChecked } = this.state;\n    const className: string = 'shouldFocus input';\n\n    return (\n      <div>\n        <DefaultButton\n          onClick={ this._onButtonClickHandler }\n          text='Go to Trap Zone'\n        />\n        { (() => {\n          if (isChecked) {\n            return (\n              <FocusTrapZone firstFocusableSelector={ className }>\n                { this._internalContents() }\n              </FocusTrapZone>\n            );\n          } else {\n            return (\n              <div>\n                { this._internalContents() }\n              </div>\n            );\n          }\n        })() }\n      </div>\n    );\n  }\n\n  private _internalContents() {\n    let { isChecked } = this.state;\n\n    return (\n      <div className='ms-FocusTrapZoneBoxExample'>\n        <TextField label='Default TextField' placeholder='Input inside Focus Trap Zone' className='' />\n        <Link href='' className='' >Hyperlink inside FocusTrapZone</Link><br /><br />\n        <div className='shouldFocus input'>\n          <Toggle\n            componentRef={ t => this._toggle = t }\n            checked={ isChecked }\n            onChanged={ this._onFocusTrapZoneToggleChanged }\n            label='Focus Trap Zone'\n            onText='On'\n            offText='Off' />\n        </div>\n        { (() => {\n          if (isChecked) {\n            return (\n              <DefaultButton\n                description='Exit Focus Trap Zone'\n                onClick={ this._onExitButtonClickHandler }\n                text='Exit Focus Trap Zone'\n              />\n            );\n          }\n        })() }\n      </div>\n    );\n  }\n\n  @autobind\n  private _onButtonClickHandler() {\n    this.setState({\n      isChecked: true\n    });\n  }\n\n  @autobind\n  private _onExitButtonClickHandler() {\n    this.setState({\n      isChecked: false\n    });\n  }\n\n  @autobind\n  private _onFocusTrapZoneToggleChanged(isChecked: boolean) {\n    this.setState({\n      isChecked: isChecked\n    }, () => this._toggle.focus());\n  }\n}"]}