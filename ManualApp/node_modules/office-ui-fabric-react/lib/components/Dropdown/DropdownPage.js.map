{"version":3,"file":"DropdownPage.js","sourceRoot":"../src/","sources":["components/Dropdown/DropdownPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAKoC;AACpC,4EAAyE;AACzE,8EAA2E;AAE3E,IAAM,wBAAwB,GAAG,OAAO,CAAC,gGAAgG,CAAW,CAAC;AACrJ,IAAM,yBAAyB,GAAG,OAAO,CAAC,iGAAiG,CAAW,CAAC;AAEvJ;IAAkC,wCAA4C;IAA9E;;IAuDA,CAAC;IAtDQ,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,UAAU,EAAC,IAAI,EAAG,wBAAwB;oBAC3D,oBAAC,6CAAoB,OAAG,CACZ;gBAEd,oBAAC,8BAAW,IAAC,KAAK,EAAC,qBAAqB,EAAC,IAAI,EAAG,yBAAyB;oBACvE,oBAAC,+CAAqB,OAAG,CACb,CAEV,EAGR,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,8EAA8E,CAAC;iBAChG,GACD,EAEJ,QAAQ,EACN;gBACE,keAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;gBACE;oBACE,sLAA4J;oBAC5J,mFAAyD;oBACzD,+NAAqM,CAClM,CACD,EAER,KAAK,EACH,gCAAW,EAEb,OAAO,EACL,2BAAG,IAAI,EAAC,oEAAoE,gBAAc,EAE5F,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AAvDD,CAAkC,KAAK,CAAC,SAAS,GAuDhD;AAvDY,oCAAY","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { DropdownBasicExample } from './examples/Dropdown.Basic.Example';\nimport { DropdownCustomExample } from './examples/Dropdown.Custom.Example';\n\nconst DropdownBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dropdown/examples/Dropdown.Basic.Example.tsx') as string;\nconst DropdownCustomExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Dropdown/examples/Dropdown.Custom.Example.tsx') as string;\n\nexport class DropdownPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render() {\n    return (\n      <ComponentPage\n        title='Dropdown'\n        componentName='DropdownExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='Dropdown' code={ DropdownBasicExampleCode }>\n              <DropdownBasicExample />\n            </ExampleCard>\n\n            <ExampleCard title='Customized Dropdown' code={ DropdownCustomExampleCode }>\n              <DropdownCustomExample />\n            </ExampleCard>\n\n          </div>\n\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Dropdown/Dropdown.Props.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <p>\n              A Dropdown is a list in which the selected item is always visible, and the others are visible on demand by clicking a drop-down button. They are used to simplify the design and make a choice within the UI. When closed, only the selected item is visible. When users click the drop-down button, all the options become visible. To change the value, users open the list and click another value or use the arrow keys (up and down) to select a new value.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use a Dropdown when there are multiple choices that can be collapsed under one title. Or if the list of items is long or when space is constrained.</li>\n              <li>Dropdowns contain shortened statements or words.</li>\n              <li>Use a Dropdown when the selected option is more important than the alternatives (in contrast to radio buttons where all the choices are visible putting more emphasis on the other options).</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div></div>\n        }\n        related={\n          <a href='https://dev.office.com/fabric-js/Components/Dropdown/Dropdown.html'>Fabric JS</a>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n}\n"]}