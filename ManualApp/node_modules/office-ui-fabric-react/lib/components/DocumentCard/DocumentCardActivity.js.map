{"version":3,"file":"DocumentCardActivity.js","sourceRoot":"../src/","sources":["components/DocumentCard/DocumentCardActivity.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,6CAAqD;AAErD,yCAAqD;AACrD,kDAAoD;AACpD,IAAM,MAAM,GAAQ,YAAY,CAAC;AAEjC;IAA0C,gDAA8C;IAAxF;;IAsDA,CAAC;IArDQ,qCAAM,GAAb;QACM,IAAA,eAAiC,EAA/B,sBAAQ,EAAE,kBAAM,CAAgB;QAEtC,MAAM,CAAC,CACL,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;YAC3B,6BAAK,SAAS,EAAG,eAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,QAAQ;oBAC7D,GAAC,0CAA0C,GAAG,MAAM,CAAC,wBAAwB,IAAG,MAAM,CAAC,MAAM,GAAG,CAAC;wBACjG;gBACE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;gBAC7B,6BAAK,SAAS,EAAG,eAAG,CAAC,iCAAiC,EAAE,MAAM,CAAC,eAAe,CAAC;oBAC7E,8BAAM,SAAS,EAAG,eAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,IAAI,CAAC,IAAK,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAS;oBAC3G,8BAAM,SAAS,EAAG,eAAG,CAAC,kCAAkC,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAK,QAAQ,CAAS,CACpG,CACF,CACP,CAAC;;IACJ,CAAC;IAEO,6CAAc,GAAtB,UAAuB,MAAqC;QAC1D,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,iCAAiC,EAAE,MAAM,CAAC,OAAO,CAAC;YACnE,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;YACxD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC3B,CACP,CAAC;IACJ,CAAC;IAEO,4CAAa,GAArB,UAAsB,MAAmC;QAEvD,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,eAAG,CAAC,gCAAgC,EAAE,MAAM,CAAC,MAAM,CAAC;YACnE,oBAAC,iBAAO,IACN,aAAa,EAAG,MAAM,CAAC,QAAQ,EAC/B,WAAW,EAAG,MAAM,CAAC,IAAI,EACzB,kBAAkB,EAAG,IAAI,EACzB,QAAQ,EAAG,MAAM,CAAC,eAAe,EACjC,aAAa,EAAG,MAAM,CAAC,aAAa,EACpC,IAAI,EAAC,cAAc,EACnB,IAAI,EAAG,qBAAW,CAAC,UAAU,GAC7B,CAEE,CACP,CAAC;IACJ,CAAC;IAEO,6CAAc,GAAtB,UAAuB,MAAqC;QAC1D,IAAI,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAEhC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,UAAU,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,CAAC,UAAU,CAAC;IACpB,CAAC;IACH,2BAAC;AAAD,CAAC,AAtDD,CAA0C,yBAAa,GAsDtD;AAtDY,oDAAoB","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, css } from '../../Utilities';\nimport { IDocumentCardActivityProps, IDocumentCardActivityPerson } from './DocumentCard.Props';\nimport { Persona, PersonaSize } from '../../Persona';\nimport * as stylesImport from './DocumentCard.scss';\nconst styles: any = stylesImport;\n\nexport class DocumentCardActivity extends BaseComponent<IDocumentCardActivityProps, any> {\n  public render() {\n    let { activity, people } = this.props;\n\n    return (\n      people && people.length > 0 &&\n      <div className={ css('ms-DocumentCardActivity', styles.activity, {\n        ['ms-DocumentCardActivity--multiplePeople ' + styles.activityIsMultiplePeople]: people.length > 1\n      }) }>\n        { this._renderAvatars(people) }\n        <div className={ css('ms-DocumentCardActivity-details', styles.activityDetails) }>\n          <span className={ css('ms-DocumentCardActivity-name', styles.name) }>{ this._getNameString(people) }</span>\n          <span className={ css('ms-DocumentCardActivity-activity', styles.activityActivity) }>{ activity }</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    return (\n      <div className={ css('ms-DocumentCardActivity-avatars', styles.avatars) }>\n        { people.length > 1 ? this._renderAvatar(people[1]) : null }\n        { this._renderAvatar(people[0]) }\n      </div>\n    );\n  }\n\n  private _renderAvatar(person: IDocumentCardActivityPerson) {\n\n    return (\n      <div className={ css('ms-DocumentCardActivity-avatar', styles.avatar) }>\n        <Persona\n          imageInitials={ person.initials }\n          primaryText={ person.name }\n          hidePersonaDetails={ true }\n          imageUrl={ person.profileImageSrc }\n          initialsColor={ person.initialsColor }\n          role='persentation'\n          size={ PersonaSize.extraSmall }\n        />\n\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n"]}