{"version":3,"file":"Icon.Props.js","sourceRoot":"../src/","sources":["components/Icon/Icon.Props.ts"],"names":[],"mappings":";;AAKA,2BAA2B;AAC3B,IAAY,QAuBX;AAvBD,WAAY,QAAQ;IAElB;;OAEG;IACH,6CAAW,CAAA;IAEX;;OAEG;IACH,yCAAS,CAAA;IAET;;;OAGG;IACH,kDAAgB,CAAA;IAEhB;;;OAGG;IACH,8CAAc,CAAA;AAChB,CAAC,EAvBW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAuBnB","sourcesContent":["import * as React from 'react';\nimport { IconName } from './IconName';\nimport { IImageProps } from '../Image/Image.Props';\nimport { IStyle } from '../../Styling';\n\n// Please keep alphabetized\nexport enum IconType {\n\n  /**\n   * Render using the fabric icon font.\n   */\n  default = 0,\n\n  /**\n   * Render using an image, where imageProps would be used.\n   */\n  image = 1,\n\n  /**\n   * Deprecated, use default.\n   * @deprecated\n   */\n  Default = 100000,\n\n  /**\n   * Deprecated, use image.\n   * @deprecated\n   */\n  Image = 100001\n}\n\nexport interface IIconStyles {\n  root?: IStyle;\n  imageContainer?: IStyle;\n}\n\nexport interface IIconProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * The name of the icon to use from the icon font.\n   *\n   * @type {(IconName | string | null)}\n   * @memberOf IIconProps\n   */\n  iconName?: IconName | string | null;\n\n  /**\n   * Optional styling for the elements within the Icon.\n   */\n  styles?: IIconStyles;\n\n  /**\n   * The aria label of the button for the benefit of screen readers.\n   */\n  ariaLabel?: string;\n\n  /**\n   * The type of icon to render (image or icon font).\n   *\n   * @type {IconType}\n   * @memberOf IIconProps\n   */\n  iconType?: IconType;\n\n  /**\n   * If rendering an image icon, these props will be passed to the Image component.\n   *\n   * @type {IImageProps}\n   * @memberOf IIconProps\n   */\n  imageProps?: IImageProps;\n}"]}