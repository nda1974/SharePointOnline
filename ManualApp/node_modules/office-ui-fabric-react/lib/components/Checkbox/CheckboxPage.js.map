{"version":3,"file":"CheckboxPage.js","sourceRoot":"../src/","sources":["components/Checkbox/CheckboxPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAKoC;AACpC,4EAAyE;AAEzE,IAAM,wBAAwB,GAAG,OAAO,CAAC,gGAAgG,CAAW,CAAC;AAErJ;IAAkC,wCAA6C;IAA/E;;IAmEA,CAAC;IAlEQ,6BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,UAAU,EAChB,aAAa,EAAC,iBAAiB,EAC/B,YAAY,EACV,oBAAC,8BAAW,IAAC,KAAK,EAAC,YAAY,EAAC,IAAI,EAAG,wBAAwB;gBAC7D,oBAAC,6CAAoB,OAAG,CACZ,EAEhB,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,8EAA8E,CAAC;iBAChG,GACD,EAEJ,QAAQ,EACN;gBACE,sSAEI;gBAEJ,qPAEI;gBAEJ,uKAEI;gBAEJ,oYAEI;gBAEJ,uLAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;gBACE;oBACE,iIAAuG,CACpG,CACD,EAER,KAAK,EACH;gBACE;oBACE,0GAAgF;oBAChF,gJAAiH;oBACjH,8HAAoG,CACjG,CACD,EAER,OAAO,EACL,2BAAG,IAAI,EAAC,oEAAoE,gBAAc,EAE5F,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AAnED,CAAkC,KAAK,CAAC,SAAS,GAmEhD;AAnEY,oCAAY","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { CheckboxBasicExample } from './examples/Checkbox.Basic.Example';\n\nconst CheckboxBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Checkbox/examples/Checkbox.Basic.Example.tsx') as string;\n\nexport class CheckboxPage extends React.Component<IComponentDemoPageProps, any> {\n  public render() {\n    return (\n      <ComponentPage\n        title='Checkbox'\n        componentName='CheckboxExample'\n        exampleCards={\n          <ExampleCard title='Checkboxes' code={ CheckboxBasicExampleCode }>\n            <CheckboxBasicExample />\n          </ExampleCard>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Checkbox/Checkbox.Props.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <p>\n              A Checkbox is a UI element that allows users to switch between two mutually exclusive options (checked or unchecked, on or off) through a single click or tap. It can also be used to indicate a subordinate setting or preference when paired with another control.\n            </p>\n\n            <p>\n              A Checkbox is used to select or deselect action items. It can be used for a single item or for a list of multiple items that a user can choose from. The control has two selection states: unselected and selected.\n            </p>\n\n            <p>\n              Use a single Checkbox for a subordinate setting, such as with a \"Remember me?\" login scenario or with a terms of service agreement.\n            </p>\n\n            <p>\n              For a binary choice, the main difference between a Checkbox and a toggle switch is that the Checkbox is for status and the toggle switch is for action. You can delay committing a Checkbox interaction (as part of a form submit, for example), while you should immediately commit a toggle switch interaction. Also, only Checkboxes allow for multi-selection.\n            </p>\n\n            <p>\n              Use multiple Checkboxes for multi-select scenarios in which a user chooses one or more items from a group of choices that are not mutually exclusive.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Allow users to choose any combination of options when several Checkboxes are grouped together.</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Don't use a Checkbox as an on/off control. Instead use a toggle switch.</li>\n              <li>Donâ€™t use a Checkbox when the user can choose only one option from the group, use radio buttons instead.</li>\n              <li>Don't put two groups of Checkboxes next to each other. Separate the two groups with labels.</li>\n            </ul>\n          </div>\n        }\n        related={\n          <a href='https://dev.office.com/fabric-js/Components/CheckBox/CheckBox.html'>Fabric JS</a>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n}\n"]}