{"version":3,"file":"MessageBar.Props.js","sourceRoot":"../src/","sources":["components/MessageBar/MessageBar.Props.ts"],"names":[],"mappings":";;AAkDA,IAAY,cAkBX;AAlBD,WAAY,cAAc;IACxB,6BAA6B;IAC7B,mDAAQ,CAAA;IACR,8BAA8B;IAC9B,qDAAS,CAAA;IACT,gCAAgC;IAChC,yDAAW,CAAA;IACX,sCAAsC;IACtC,qEAAiB,CAAA;IACjB,gCAAgC;IAChC,yDAAW,CAAA;IACX,gCAAgC;IAChC,yDAAW,CAAA;IACX;;;OAGG;IACH,2DAAc,CAAA;AAChB,CAAC,EAlBW,cAAc,GAAd,sBAAc,KAAd,sBAAc,QAkBzB","sourcesContent":["import * as React from 'react';\nimport { BaseButton, Button } from '../../Button';\n\nexport interface IMessageBar {\n\n}\n\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: (component: IMessageBar) => void;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  onDismiss?: (ev?: React.MouseEvent<HTMLButtonElement | BaseButton | HTMLAnchorElement | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n  * Aria label on dismiss button if onDismiss is defined.\n  */\n  dismissButtonAriaLabel?: string;\n}\n\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n  /**\n   * Deprecated at v0.48.0, to be removed at >= v1.0.0. Use 'blocked' instead.\n   * @deprecated\n   */\n  remove = 90000\n}\n"]}