{"version":3,"file":"MessageBarPage.js","sourceRoot":"../src/","sources":["components/MessageBar/MessageBarPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAKoC;AACpC,gFAA6E;AAE7E,IAAM,0BAA0B,GAAG,OAAO,CAAC,oGAAoG,CAAW,CAAC;AAE3J;IAAoC,0CAA4C;IAAhF;;IAyDA,CAAC;IAxDQ,+BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,YAAY,EAClB,aAAa,EAAC,mBAAmB,EACjC,YAAY,EACV,oBAAC,8BAAW,IACV,KAAK,EAAC,0BAA0B,EAChC,IAAI,EAAG,0BAA0B;gBACjC,oBAAC,iDAAsB,OAAG,CACd,EAEhB,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,kFAAkF,CAAC;iBACpG,GACD,EAEJ,QAAQ,EACN;gBACE,oSAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;gBACE;oBACE,yIAA+G;oBAC/G,mIAAyG;oBACzG,2KAAiJ;oBACjJ,0HAAgG,CAC7F,CACD,EAER,KAAK,EACH;gBACE;oBACE,4PAAwN;oBACxN,gSACK,CACF,CACD,EAER,OAAO,EACL,2BAAG,IAAI,EAAC,wEAAwE,gBAAc,EAEhG,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CAAC,AAzDD,CAAoC,KAAK,CAAC,SAAS,GAyDlD;AAzDY,wCAAc","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  IComponentDemoPageProps,\n  ComponentPage,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { MessageBarBasicExample } from './examples/MessageBar.Basic.Example';\n\nconst MessageBarBasicExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/MessageBar/examples/MessageBar.Basic.Example.tsx') as string;\n\nexport class MessageBarPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render() {\n    return (\n      <ComponentPage\n        title='MessageBar'\n        componentName='MessageBarExample'\n        exampleCards={\n          <ExampleCard\n            title='Various MessageBar types'\n            code={ MessageBarBasicExampleCode }>\n            <MessageBarBasicExample />\n          </ExampleCard>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/MessageBar/MessageBar.Props.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <p>\n              A MessageBar is an area at the top of a primary view that displays relevant status information. You can use a MessageBar to tell the user about a situation that does not require their immediate attention and therefore does not need to block other activities.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Place the message bar near the top of the relevant view, in a highly visible but unobtrusive location.</li>\n              <li>Keep the text very brief. Be succinct and your users are more likely to read everything you say.</li>\n              <li>Consider how localization may affect the message. Translation to other languages may add up to 33% more characters to the string length.</li>\n              <li>Use the right variant for the type and urgency of the particular message (see variants)</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Don’t use paragraphs, long sentences, or special formatting in a MessageBar. The control tries to grow to accommodate all the text and will just result in pushing the user’s main content too low on the view.</li>\n              <li>Don’t use buttons when a subtler link will suffice. Reserve the usage of button for when the MessageBar has a single ”hero” action that has vital usefulness to the user at that particular moment. Using more than one button is discouraged.\n              </li>\n            </ul>\n          </div>\n        }\n        related={\n          <a href='https://dev.office.com/fabric-js/Components/MessageBar/MessageBar.html'>Fabric JS</a>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n\n}\n"]}