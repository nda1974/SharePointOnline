{"version":3,"file":"Facepile.Overflow.Example.js","sourceRoot":"../src/","sources":["components/Facepile/examples/Facepile.Overflow.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,gEAI6C;AAC7C,gEAA+D;AAC/D,4DAA2D;AAC3D,6DAAyD;AACzD,oCAAkC;AAElC,IAAM,aAAa,GAAmB;IACpC,QAAQ,EAAE,sCAAgB;IAC1B,sBAAsB,EAAE,CAAC;IACzB,kBAAkB,EAAE,6BAAkB,CAAC,SAAS;IAChD,mBAAmB,EAAE;QACnB,SAAS,EAAE,YAAY;QACvB,OAAO,EAAE,UAAC,EAAuC;YAC/C,OAAA,KAAK,CAAC,uBAAuB,CAAC;QAA9B,CAA8B;KACjC;IACD,eAAe,EAAE,0DAA0D;CAC5E,CAAC;AAOF;IAA6C,mDAAmD;IAC9F;QAAA,YACE,iBAAO,SAMR;QAJC,KAAI,CAAC,KAAK,GAAG;YACX,iBAAiB,EAAE,CAAC;YACpB,kBAAkB,EAAE,6BAAkB,CAAC,IAAI;SAC5C,CAAC;;IACJ,CAAC;IAEM,wCAAM,GAAb;QAAA,iBAwCC;QAvCK,IAAA,eAAsD,EAApD,wCAAiB,EAAE,0CAAkB,CAAgB;QAC3D,aAAa,CAAC,sBAAsB,GAAG,iBAAiB,CAAC;QACzD,aAAa,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAEtD,MAAM,CAAC,CACL,6BAAK,SAAS,EAAG,oBAAoB;YACnC,oBAAC,mBAAQ,uBAAK,aAAa,EAAI;YAC/B,6BAAK,SAAS,EAAG,SAAS;gBACxB,oBAAC,eAAM,IACL,KAAK,EAAC,2BAA2B,EACjC,GAAG,EAAG,CAAC,EACP,GAAG,EAAG,CAAC,EACP,IAAI,EAAG,CAAC,EACR,SAAS,EAAG,IAAI,EAChB,KAAK,EAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,EACpC,QAAQ,EAAG,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAwC;wBACzE,SAAS,CAAC,iBAAiB,GAAG,KAAK,CAAC;wBACpC,MAAM,CAAC,SAAS,CAAC;oBACnB,CAAC,CAAC,EAHkB,CAGlB,GACF,CACE;YACN,oBAAC,mBAAQ,IACP,KAAK,EAAC,gBAAgB,EACtB,WAAW,EAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAC3C,OAAO,EACL;oBACE,EAAE,GAAG,EAAE,6BAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,IAAI,CAAC,EAAE;oBACnF,EAAE,GAAG,EAAE,6BAAkB,CAAC,WAAW,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,WAAW,CAAC,EAAE;oBACjG,EAAE,GAAG,EAAE,6BAAkB,CAAC,SAAS,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,SAAS,CAAC,EAAE;oBAC7F,EAAE,GAAG,EAAE,6BAAkB,CAAC,IAAI,EAAE,IAAI,EAAE,6BAAkB,CAAC,6BAAkB,CAAC,IAAI,CAAC,EAAE;iBACpF,EAEH,SAAS,EAAG,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,UAAC,SAAwC;oBAC1E,SAAS,CAAC,kBAAkB,GAAG,KAAK,CAAC,GAAyB,CAAC;oBAC/D,MAAM,CAAC,SAAS,CAAC;gBACnB,CAAC,CAAC,EAHmB,CAGnB,GACF,CACE,CACP,CAAC;IACJ,CAAC;IACH,8BAAC;AAAD,CAAC,AAnDD,CAA6C,KAAK,CAAC,SAAS,GAmD3D;AAnDY,0DAAuB","sourcesContent":["import * as React from 'react';\nimport {\n  IFacepileProps,\n  Facepile,\n  OverflowButtonType,\n} from 'office-ui-fabric-react/lib/Facepile';\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\nimport { Slider } from 'office-ui-fabric-react/lib/Slider';\nimport { facepilePersonas } from './FacepileExampleData';\nimport './Facepile.Examples.scss';\n\nconst facepileProps: IFacepileProps = {\n  personas: facepilePersonas,\n  maxDisplayablePersonas: 5,\n  overflowButtonType: OverflowButtonType.downArrow,\n  overflowButtonProps: {\n    ariaLabel: 'More users',\n    onClick: (ev: React.MouseEvent<HTMLButtonElement>) =>\n      alert('overflow icon clicked')\n  },\n  ariaDescription: 'To move through the items use left and right arrow keys.'\n};\n\nexport interface IFacepileOverflowExampleState {\n  displayedPersonas: any;\n  overflowButtonType: OverflowButtonType;\n}\n\nexport class FacepileOverflowExample extends React.Component<any, IFacepileOverflowExampleState> {\n  public constructor() {\n    super();\n\n    this.state = {\n      displayedPersonas: 5,\n      overflowButtonType: OverflowButtonType.none\n    };\n  }\n\n  public render() {\n    let { displayedPersonas, overflowButtonType } = this.state;\n    facepileProps.maxDisplayablePersonas = displayedPersonas;\n    facepileProps.overflowButtonType = overflowButtonType;\n\n    return (\n      <div className={ 'ms-FacepileExample' }>\n        <Facepile {...facepileProps} />\n        <div className={ 'control' }>\n          <Slider\n            label='Number of Personas Shown:'\n            min={ 0 }\n            max={ 6 }\n            step={ 1 }\n            showValue={ true }\n            value={ this.state.displayedPersonas }\n            onChange={ value => this.setState((prevState: IFacepileOverflowExampleState) => {\n              prevState.displayedPersonas = value;\n              return prevState;\n            }) }\n          />\n        </div>\n        <Dropdown\n          label='Overflow Type:'\n          selectedKey={ this.state.overflowButtonType }\n          options={\n            [\n              { key: OverflowButtonType.none, text: OverflowButtonType[OverflowButtonType.none] },\n              { key: OverflowButtonType.descriptive, text: OverflowButtonType[OverflowButtonType.descriptive] },\n              { key: OverflowButtonType.downArrow, text: OverflowButtonType[OverflowButtonType.downArrow] },\n              { key: OverflowButtonType.more, text: OverflowButtonType[OverflowButtonType.more] },\n            ]\n          }\n          onChanged={ value => this.setState((prevState: IFacepileOverflowExampleState) => {\n            prevState.overflowButtonType = value.key as OverflowButtonType;\n            return prevState;\n          }) }\n        />\n      </div>\n    );\n  }\n}"]}