{"version":3,"file":"DatePicker.js","sourceRoot":"../src/","sources":["components/DatePicker/DatePicker.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  IDatePickerProps,\n  IDatePickerStrings\n} from './DatePicker.Props';\nimport {\n  Calendar,\n  DayOfWeek\n} from '../../Calendar';\nimport { Callout } from '../../Callout';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { TextField } from '../../TextField';\nimport {\n  autobind,\n  BaseComponent,\n  KeyCodes,\n  css\n} from '../../Utilities';\nimport { compareDates } from '../../utilities/dateMath/DateMath';\nimport * as stylesImport from './DatePicker.scss';\nconst styles: any = stylesImport;\n\nexport interface IDatePickerState {\n  /** The currently focused date in the drop down, but not necessarily selected */\n  navigatedDate?: Date;\n  selectedDate?: Date;\n  formattedDate?: string;\n  isDatePickerShown?: boolean;\n  errorMessage?: string;\n}\n\nconst DEFAULT_STRINGS: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year'\n};\n\nexport class DatePicker extends BaseComponent<IDatePickerProps, IDatePickerState> {\n  public static defaultProps: IDatePickerProps = {\n    allowTextInput: false,\n    formatDate: (date: Date) => {\n      if (date) {\n        return date.toDateString();\n      }\n\n      return '';\n    },\n    parseDateFromString: (dateStr: string) => {\n      const date = Date.parse(dateStr);\n      if (date) {\n        return new Date(date);\n      }\n\n      return null;\n    },\n    firstDayOfWeek: DayOfWeek.Sunday,\n    isRequired: false,\n    isMonthPickerVisible: true,\n    strings: DEFAULT_STRINGS,\n    borderless: false,\n    pickerAriaLabel: 'Calender',\n  };\n\n  public refs: {\n    [key: string]: React.ReactInstance;\n    root: HTMLElement;\n    textField: TextField;\n  };\n\n  private _calendar: Calendar;\n  private _datepicker: HTMLDivElement;\n  private _preventFocusOpeningPicker: boolean;\n  private _focusOnSelectedDateOnUpdate: boolean;\n\n  constructor(props: IDatePickerProps) {\n    super();\n\n    let { formatDate, value } = props;\n\n    this.state = {\n      selectedDate: value || new Date(),\n      formattedDate: (formatDate && value) ? formatDate(value) : '',\n      isDatePickerShown: false,\n      errorMessage: undefined\n    };\n\n    this._preventFocusOpeningPicker = false;\n  }\n\n  public componentWillReceiveProps(nextProps: IDatePickerProps) {\n    let { formatDate, isRequired, strings, value } = nextProps;\n    const errorMessage = (isRequired && !value) ? (strings!.isRequiredErrorMessage || '*') : undefined;\n\n    // Set error message\n    this.setState({\n      errorMessage: errorMessage\n    });\n\n    // Issue# 1274: Check if the date value changed from old props value, i.e., if indeed a new date is being\n    // passed in or if the formatting function was modified. We only update the selected date if either of these\n    // had a legit change. Note tha the bug will still repro when only the formatDate was passed in props and this\n    // is the result of the onSelectDate callback, but this should be a rare scenario.\n    let oldValue = this.props.value;\n    if (!compareDates(oldValue!, value!) || this.props.formatDate !== formatDate) {\n      this.setState({\n        selectedDate: value || new Date(),\n        formattedDate: (formatDate && value) ? formatDate(value) : '',\n      });\n    }\n  }\n\n  public render() {\n    const {\n      firstDayOfWeek,\n      strings,\n      label,\n      isRequired,\n      disabled,\n      ariaLabel,\n      pickerAriaLabel,\n      placeholder,\n      allowTextInput,\n      borderless,\n      className\n    } = this.props;\n    const { isDatePickerShown, formattedDate, selectedDate, errorMessage } = this.state;\n\n    return (\n      <div className={ css('ms-DatePicker', styles.root, className) } ref='root'>\n        <div ref={ (c): HTMLElement => this._datepicker = c! }>\n          <TextField\n            className={ styles.textField }\n            ariaLabel={ ariaLabel }\n            aria-haspopup='true'\n            aria-expanded={ isDatePickerShown }\n            required={ isRequired }\n            disabled={ disabled }\n            onKeyDown={ this._onTextFieldKeyDown }\n            onFocus={ this._onTextFieldFocus }\n            onBlur={ this._onTextFieldBlur }\n            onClick={ this._onTextFieldClick }\n            onChanged={ this._onTextFieldChanged }\n            errorMessage={ errorMessage }\n            label={ label }\n            placeholder={ placeholder }\n            borderless={ borderless }\n            iconProps={ {\n              iconName: 'Calendar',\n              className: css(\n                label ? 'ms-DatePicker-event--with-label' : 'ms-DatePicker-event--without-label',\n                label ? styles.eventWithLabel : styles.eventWithoutLabel\n              )\n            } }\n            readOnly={ !allowTextInput }\n            value={ formattedDate }\n            ref='textField'\n            role={ allowTextInput ? 'combobox' : 'menu' }\n          />\n        </div>\n        { isDatePickerShown && (\n          <Callout\n            role='dialog'\n            ariaLabel={ pickerAriaLabel }\n            isBeakVisible={ false }\n            className={ css('ms-DatePicker-callout') }\n            gapSpace={ 0 }\n            doNotLayer={ false }\n            targetElement={ this._datepicker }\n            directionalHint={ DirectionalHint.bottomLeftEdge }\n            onDismiss={ this._calendarDismissed }\n            onPositioned={ this._onCalloutPositioned }\n          >\n            <Calendar\n              onSelectDate={ this._onSelectDate }\n              onDismiss={ this._calendarDismissed }\n              isMonthPickerVisible={ this.props.isMonthPickerVisible }\n              value={ selectedDate }\n              firstDayOfWeek={ firstDayOfWeek }\n              strings={ strings! }\n              ref={ this._resolveRef('_calendar') }\n            >\n            </Calendar>\n          </Callout>\n        ) }\n      </div>\n    );\n  }\n\n  @autobind\n  private _onSelectDate(date: Date) {\n    let { formatDate, onSelectDate } = this.props;\n\n    this.setState({\n      selectedDate: date,\n      isDatePickerShown: false,\n      formattedDate: formatDate && date ? formatDate(date) : '',\n    });\n\n    if (onSelectDate) {\n      onSelectDate(date);\n    }\n  }\n\n  @autobind\n  private _onCalloutPositioned() {\n    this._calendar.focus();\n  }\n\n  @autobind\n  private _onTextFieldFocus(ev: React.FocusEvent<HTMLElement>) {\n    if (this.props.disableAutoFocus) {\n      return;\n    }\n\n    if (!this.props.allowTextInput) {\n      if (!this._preventFocusOpeningPicker) {\n        this._showDatePickerPopup();\n      } else {\n        this._preventFocusOpeningPicker = false;\n      }\n    }\n  }\n\n  @autobind\n  private _onTextFieldBlur(ev: React.FocusEvent<HTMLElement>) {\n    this._validateTextInput();\n  }\n\n  @autobind\n  private _onTextFieldChanged(newValue: string) {\n    if (this.props.allowTextInput) {\n      if (this.state.isDatePickerShown) {\n        this._dismissDatePickerPopup();\n      }\n\n      let { isRequired, value, strings } = this.props;\n\n      this.setState({\n        errorMessage: (isRequired && !value) ? (strings!.isRequiredErrorMessage || '*') : undefined,\n        formattedDate: newValue\n      });\n    }\n  }\n\n  @autobind\n  private _onTextFieldKeyDown(ev: React.KeyboardEvent<HTMLElement>) {\n    switch (ev.which) {\n      case KeyCodes.enter:\n        ev.preventDefault();\n        ev.stopPropagation();\n        if (!this.state.isDatePickerShown) {\n          this._showDatePickerPopup();\n        } else {\n          // When DatePicker allows input date string directly,\n          // it is expected to hit another enter to close the popup\n          if (this.props.allowTextInput) {\n            this._dismissDatePickerPopup();\n          }\n        }\n        break;\n\n      case KeyCodes.escape:\n        this._handleEscKey(ev);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  @autobind\n  private _onTextFieldClick(ev: React.MouseEvent<HTMLElement>) {\n    if (!this.state.isDatePickerShown) {\n      this._showDatePickerPopup();\n    } else {\n      if (this.props.allowTextInput) {\n        this.setState({\n          isDatePickerShown: false\n        });\n      }\n    }\n  }\n\n  private _showDatePickerPopup() {\n    if (!this.state.isDatePickerShown) {\n      this._preventFocusOpeningPicker = true;\n      this._focusOnSelectedDateOnUpdate = true;\n      this.setState({\n        isDatePickerShown: true,\n        navigatedDate: this.state.selectedDate,\n        errorMessage: ''\n      });\n    }\n  }\n\n  @autobind\n  private _dismissDatePickerPopup() {\n    if (this.state.isDatePickerShown) {\n      this.setState({\n        isDatePickerShown: false\n      });\n\n      this._validateTextInput();\n    }\n  }\n\n  /**\n   * Callback for closing the calendar callout\n   */\n  @autobind\n  private _calendarDismissed() {\n    this._preventFocusOpeningPicker = true;\n    this._dismissDatePickerPopup();\n\n    if (this.refs.textField) {\n      this.refs.textField.focus();\n    }\n  }\n\n  @autobind\n  private _handleEscKey(ev: React.KeyboardEvent<HTMLElement>) {\n    this._calendarDismissed();\n  }\n\n  @autobind\n  private _validateTextInput() {\n    let { isRequired, allowTextInput, strings, formatDate, parseDateFromString, onSelectDate } = this.props;\n    const inputValue = this.state.formattedDate;\n\n    // Do validation only if DatePicker's popup is dismissed\n    if (this.state.isDatePickerShown) {\n      return;\n    }\n\n    // Check when DatePicker is a required field but has NO input value\n    if (isRequired && !inputValue) {\n      this.setState({\n        // Since fabic react doesn't have loc support yet\n        // use the symbol '*' to represent error message\n        errorMessage: strings!.isRequiredErrorMessage || '*'\n      });\n      return;\n    }\n\n    if (allowTextInput) {\n      let date = null;\n      if (inputValue) {\n        date = parseDateFromString!(inputValue);\n        if (!date) {\n          this.setState({\n            errorMessage: strings!.invalidInputErrorMessage || '*'\n          });\n        } else {\n          this.setState({\n            selectedDate: date,\n            errorMessage: ''\n          });\n        }\n      } else {\n        // No input date string shouldn't be an error if field is not required\n        this.setState({\n          errorMessage: ''\n        });\n      }\n\n      // Execute onSelectDate callback\n      if (onSelectDate) {\n        // If no input date string or input date string is invalid\n        // date variable will be null, callback should expect null value for this case\n        onSelectDate(date);\n      }\n    }\n  }\n}\n"]}