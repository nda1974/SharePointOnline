{"version":3,"file":"DatePicker.Input.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Input.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,oEAAkG;AAElG,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,yBAAyB;IAEjD,wBAAwB,EAAE,sBAAsB;CACjD,CAAC;AAOF;IAA4C,kDAAkD;IAC5F;QAAA,YACE,iBAAO,SAMR;QAJC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,sBAAS,CAAC,MAAM;YAChC,KAAK,EAAE,IAAI;SACZ,CAAC;;IACJ,CAAC;IAEM,uCAAM,GAAb;QAAA,iBAmBC;QAlBK,IAAA,eAAsC,EAApC,kCAAc,EAAE,gBAAK,CAAgB;QAC3C,IAAM,IAAI,GAAG,uFAAuF,CAAC;QACrG,MAAM,CAAC,CACL;YACE,0NAA+L;YAC/L,oBAAC,uBAAU,IACT,KAAK,EAAC,YAAY,EAClB,UAAU,EAAG,KAAK,EAClB,cAAc,EAAG,IAAI,EACrB,SAAS,EAAG,IAAI,EAChB,cAAc,EAAG,cAAc,EAC/B,OAAO,EAAG,gBAAgB,EAC1B,KAAK,EAAG,KAAM,EACd,YAAY,EAAG,UAAA,IAAI,IAAI,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAA8B,GACrD;YACF,oBAAC,sBAAa,IAAC,OAAO,EAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAA8B,EAAG,IAAI,EAAC,OAAO,GAAG,CAC3E,CACP,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CAAC,AA9BD,CAA4C,KAAK,CAAC,SAAS,GA8B1D;AA9BY,wDAAsB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { DatePicker, DayOfWeek, IDatePickerStrings } from 'office-ui-fabric-react/lib/DatePicker';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n\n  isRequiredErrorMessage: 'Start date is required.',\n\n  invalidInputErrorMessage: 'Invalid date format.'\n};\n\nexport interface IDatePickerInputExampleState {\n  firstDayOfWeek?: DayOfWeek;\n  value?: Date | null;\n}\n\nexport class DatePickerInputExample extends React.Component<any, IDatePickerInputExampleState> {\n  public constructor() {\n    super();\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday,\n      value: null\n    };\n  }\n\n  public render() {\n    let { firstDayOfWeek, value } = this.state;\n    const desc = 'This field is required. One of the support input formats is year dash month dash day.';\n    return (\n      <div>\n        <p>Text input allowed by default when use keyboard navigation. Mouse click the TextField will popup DatePicker, click the TextField again will dismiss the DatePicker and allow text input.</p>\n        <DatePicker\n          label='Start date'\n          isRequired={ false }\n          allowTextInput={ true }\n          ariaLabel={ desc }\n          firstDayOfWeek={ firstDayOfWeek }\n          strings={ DayPickerStrings }\n          value={ value! }\n          onSelectDate={ date => this.setState({ value: date }) }\n        />\n        <DefaultButton onClick={ () => this.setState({ value: null }) } text='Clear' />\n      </div>\n    );\n  }\n}\n"]}