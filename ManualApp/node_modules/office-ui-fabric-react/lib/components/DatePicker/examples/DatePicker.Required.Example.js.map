{"version":3,"file":"DatePicker.Required.Example.js","sourceRoot":"../src/","sources":["components/DatePicker/examples/DatePicker.Required.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,oEAI+C;AAE/C,IAAM,gBAAgB,GAAuB;IAC3C,MAAM,EAAE;QACN,SAAS;QACT,UAAU;QACV,OAAO;QACP,OAAO;QACP,KAAK;QACL,MAAM;QACN,MAAM;QACN,QAAQ;QACR,WAAW;QACX,SAAS;QACT,UAAU;QACV,UAAU;KACX;IAED,WAAW,EAAE;QACX,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;KACN;IAED,IAAI,EAAE;QACJ,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,WAAW;QACX,UAAU;QACV,QAAQ;QACR,UAAU;KACX;IAED,SAAS,EAAE;QACT,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;QACH,GAAG;KACJ;IAED,SAAS,EAAE,aAAa;IACxB,kBAAkB,EAAE,sBAAsB;IAC1C,kBAAkB,EAAE,kBAAkB;IACtC,iBAAiB,EAAE,qBAAqB;IACxC,iBAAiB,EAAE,iBAAiB;IAEpC,sBAAsB,EAAE,oBAAoB;IAE5C,wBAAwB,EAAE,sBAAsB;CACjD,CAAC;AAMF;IAA+C,qDAAqD;IAClG;QAAA,YACE,iBAAO,SAKR;QAHC,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,sBAAS,CAAC,MAAM;SACjC,CAAC;;IACJ,CAAC;IAEM,0CAAM,GAAb;QACQ,IAAA,0CAAc,CAAgB;QAEpC,MAAM,CAAC,CACL;YACE,sFAA2D;YAC3D,oBAAC,uBAAU,IAAC,KAAK,EAAC,eAAe,EAAC,UAAU,EAAG,IAAI,EAAG,cAAc,EAAG,cAAc,EAAG,OAAO,EAAG,gBAAgB,EAAG,WAAW,EAAC,kBAAkB,GAAG,CAClJ,CACP,CAAC;IACJ,CAAC;IACH,gCAAC;AAAD,CAAC,AAnBD,CAA+C,KAAK,CAAC,SAAS,GAmB7D;AAnBY,8DAAyB","sourcesContent":["import * as React from 'react';\nimport {\n  DatePicker,\n  DayOfWeek,\n  IDatePickerStrings\n} from 'office-ui-fabric-react/lib/DatePicker';\n\nconst DayPickerStrings: IDatePickerStrings = {\n  months: [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ],\n\n  shortMonths: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ],\n\n  days: [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ],\n\n  shortDays: [\n    'S',\n    'M',\n    'T',\n    'W',\n    'T',\n    'F',\n    'S'\n  ],\n\n  goToToday: 'Go to today',\n  prevMonthAriaLabel: 'Go to previous month',\n  nextMonthAriaLabel: 'Go to next month',\n  prevYearAriaLabel: 'Go to previous year',\n  nextYearAriaLabel: 'Go to next year',\n\n  isRequiredErrorMessage: 'Field is required.',\n\n  invalidInputErrorMessage: 'Invalid date format.'\n};\n\nexport interface IDatePickerRequiredExampleState {\n  firstDayOfWeek?: DayOfWeek;\n}\n\nexport class DatePickerRequiredExample extends React.Component<any, IDatePickerRequiredExampleState> {\n  public constructor() {\n    super();\n\n    this.state = {\n      firstDayOfWeek: DayOfWeek.Sunday\n    };\n  }\n\n  public render() {\n    let { firstDayOfWeek } = this.state;\n\n    return (\n      <div>\n        <p>Validation will happen when Date Picker loses focus.</p>\n        <DatePicker label='Date required' isRequired={ true } firstDayOfWeek={ firstDayOfWeek } strings={ DayPickerStrings } placeholder='Select a date...' />\n      </div>\n    );\n  }\n}\n"]}