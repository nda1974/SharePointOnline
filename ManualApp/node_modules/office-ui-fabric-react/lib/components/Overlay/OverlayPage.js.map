{"version":3,"file":"OverlayPage.js","sourceRoot":"../src/","sources":["components/Overlay/OverlayPage.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,+DAKoC;AACpC,wEAAqE;AACrE,0EAAuE;AAEvE,IAAM,uBAAuB,GAAG,OAAO,CAAC,8FAA8F,CAAW,CAAC;AAClJ,IAAM,sBAAsB,GAAG,OAAO,CAAC,6FAA6F,CAAW,CAAC;AAEhJ;IAAiC,uCAA4C;IAA7E;;IAwDA,CAAC;IAvDQ,4BAAM,GAAb;QACE,MAAM,CAAC,CACL,oBAAC,gCAAa,IACZ,KAAK,EAAC,SAAS,EACf,aAAa,EAAC,gBAAgB,EAC9B,YAAY,EACV;gBACE,oBAAC,8BAAW,IAAC,KAAK,EAAC,OAAO,EAAC,IAAI,EAAG,uBAAuB;oBACvD,oBAAC,2CAAmB,OAAG,CACX;gBACd,oBAAC,8BAAW,IAAC,KAAK,EAAC,MAAM,EAAC,IAAI,EAAG,sBAAsB;oBACrD,oBAAC,yCAAkB,OAAG,CACV,CACV,EAER,gBAAgB,EACd,oBAAC,qCAAkB,IACjB,OAAO,EAAG;oBACR,OAAO,CAAS,4EAA4E,CAAC;iBAC9F,GACD,EAEJ,QAAQ,EACN;gBACE,gUAEI,CACA,EAER,aAAa,EACX,gCAAW,EAEb,GAAG,EACD;gBACE;oBACE,kFAAwD;oBACxD,8EAAoD,CACjD,CACD,EAER,KAAK,EACH;gBACE;oBACE,uHAA6F,CAC1F,CACD,EAER,OAAO,EACL,2BAAG,IAAI,EAAC,kEAAkE,gBAAc,EAE1F,eAAe,EAAG,IAAI,CAAC,KAAK,CAAC,eAAe,GAC9B,CACjB,CAAC;IACJ,CAAC;IAEH,kBAAC;AAAD,CAAC,AAxDD,CAAiC,KAAK,CAAC,SAAS,GAwD/C;AAxDY,kCAAW","sourcesContent":["import * as React from 'react';\nimport {\n  ExampleCard,\n  ComponentPage,\n  IComponentDemoPageProps,\n  PropertiesTableSet\n} from '@uifabric/example-app-base';\nimport { OverlayDarkExample } from './examples/Overlay.Dark.Example';\nimport { OverlayLightExample } from './examples/Overlay.Light.Example';\n\nconst OverlayLightExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Light.Example.tsx') as string;\nconst OverlayDarkExampleCode = require('!raw-loader!office-ui-fabric-react/src/components/Overlay/examples/Overlay.Dark.Example.tsx') as string;\n\nexport class OverlayPage extends React.Component<IComponentDemoPageProps, {}> {\n  public render() {\n    return (\n      <ComponentPage\n        title='Overlay'\n        componentName='OverlayExample'\n        exampleCards={\n          <div>\n            <ExampleCard title='Light' code={ OverlayLightExampleCode }>\n              <OverlayLightExample />\n            </ExampleCard>\n            <ExampleCard title='Dark' code={ OverlayDarkExampleCode }>\n              <OverlayDarkExample />\n            </ExampleCard>\n          </div>\n        }\n        propertiesTables={\n          <PropertiesTableSet\n            sources={ [\n              require<string>('!raw-loader!office-ui-fabric-react/src/components/Overlay/Overlay.Props.ts')\n            ] }\n          />\n        }\n        overview={\n          <div>\n            <p>\n              Overlays are used to render a semi-transparent layer on top of existing UI. Overlays help focus the user on the content that sits above the added layer and are often used to help designate a modal or blocking experience. Overlays can be seen used in conjunction with Panels and Dialogs.\n            </p>\n          </div>\n        }\n        bestPractices={\n          <div></div>\n        }\n        dos={\n          <div>\n            <ul>\n              <li>Use a dark Overlay with a first-run experience.</li>\n              <li>Use a white Overlay for dialogs and panels.</li>\n            </ul>\n          </div>\n        }\n        donts={\n          <div>\n            <ul>\n              <li>Use an Overlay when you want the user to interact with the UI that is being covered.</li>\n            </ul>\n          </div>\n        }\n        related={\n          <a href='https://dev.office.com/fabric-js/Components/Overlay/Overlay.html'>Fabric JS</a>\n        }\n        isHeaderVisible={ this.props.isHeaderVisible }>\n      </ComponentPage>\n    );\n  }\n\n}\n"]}