{"version":3,"file":"BaseStore.js","sourceRoot":"../src/","sources":["common/BaseStore.ts"],"names":[],"mappings":";;AAGA,IAAI,WAAW,GAAG,CAAC,CAAC;AAEpB;IAKE;QACE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACvB,CAAC;IAEM,6BAAS,GAAhB,UAAiB,QAAoB;QAArC,iBAMC;QALC,IAAI,EAAE,GAAG,WAAW,EAAE,CAAC;QAEvB,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;QAE/B,MAAM,CAAC,EAAE,OAAO,EAAE,cAAM,OAAA,OAAO,KAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAA1B,CAA0B,EAAE,CAAC;IACvD,CAAC;IAES,8BAAU,GAApB;QACE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC;YACxB,CAAC;QACH,CAAC;IACH,CAAC;IACH,gBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,8BAAS","sourcesContent":["import { ISubscribable } from './ISubscribable';\nimport { IDisposable } from '../Utilities';\n\nlet _instanceId = 0;\n\nexport class BaseStore implements ISubscribable {\n  private _callbacks: {\n    [key: string]: () => void;\n  };\n\n  constructor() {\n    this._callbacks = {};\n  }\n\n  public subscribe(onChange: () => void): IDisposable {\n    let id = _instanceId++;\n\n    this._callbacks[id] = onChange;\n\n    return { dispose: () => delete this._callbacks[id] };\n  }\n\n  protected emitChange() {\n    for (let id in this._callbacks) {\n      if (this._callbacks.hasOwnProperty(id)) {\n        this._callbacks[id]();\n      }\n    }\n  }\n}\n"]}